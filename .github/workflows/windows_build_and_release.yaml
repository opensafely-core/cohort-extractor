name: Build and release Windows runner
on:
  push:
    paths:
    - "runner/VERSION"
    - "build_runner.yaml"
  pull_request:
    types: [closed]
    paths:
    - "runner/VERSION"
    - "build_runner.yaml"

jobs:
  build:
    runs-on: windows-latest
    name: Build windows executable for running notebook
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install requirements one-by-one so a single failure
        # (specifically, fiona is nearly impossible to install in
        # winows) doesn't break the whole thing
        cat requirements.txt | cut -f 1 -d " " | grep -v "^#" | xargs -n 1 pip install
        pip install -U wxPython
        pip install Gooey
        pip install pyinstaller
    - name: Build with pyinstaller
      run: |
        pyinstaller run.py --onefile

    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=version;]$(python run.py --version)"
      id: extract_version

    - name: Create Prelease (non-master branch) Release
      if: github.ref != 'master'
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        # Make this remove the metadata bit
        title: "Development build of ${{ steps.extract_version.outputs.version }}"
        automatic_release_tag: ${{ steps.extract_version.outputs.version }}
        draft: false
        prerelease: true
        files: |
          ./dist/run.exe

    - name: Create full (master branch) Release
      if: github.ref == 'master' || github.pull_request.merged == true
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        title: "Latest production build"
        automatic_release_tag: "latest"
        draft: false
        prerelease: false
        files: |
          ./dist/run.exe
