/*
  svyset INCLUDE file

*!  VERSION 1.2.0  29nov2017

*/

  DEFINE col1 70
  DEFINE col2 210
  DEFINE col3 350
  DEFINE col4 490
  DEFINE colwd0 55
  DEFINE colwd1 130

  DEFINE _x _xsetbu
  DEFINE _y _top

  BUTTON  bu_reset		_xsetbu	_top	_setbuwd .,		///
	onpush(script clear_all)					///
	label(resource LBL_CLEAR_SETTINGS)

  TEXT tx_stages		_lft	_top	105	.,		///
	label(resource SVYSET_TX_STAGES) right
  COMBOBOX cb_stages		+110	@	50	_ht8,		///
	contents(stage_contents)					///
	values(stage_values)						///
	onselchangelist(stage_change)					///
	dropdownlist							///
	nomemory

  TEXT tx_strata		col1	_ms	colwd1	.,		///
	label(resource LBL_PRIMARY_SAMPLING_UNITS)
  TEXT tx_su			col2	@	@	.,		///
	label(resource LBL_STRATA)
  TEXT tx_fpc			col3	@	@	.,		///
	label(resource LBL_FINITE_POP_CORRECTION)
  TEXT tx_weight		col4	@	@	.,		///
	label(resource LBL_SAMPLING_WEIGHT)

  TEXT tx_stage1		_lft	_ss	colwd0	.,		///
	right
  VARNAME vn_su1		col1	@	colwd1	.,		///
	default(char _dta[_svy_su1])					///
	nomemory
  VARNAME vn_str1		col2	@	@	.,		///
	default(char _dta[_svy_strata1])				///
	option(strata)							///
	nomemory
  VARNAME vn_fpc1		col3	@	@	.,		///
	default(char _dta[_svy_fpc1])					///
	option(fpc)							///
	nomemory
  VARNAME vn_weight1		col4	@	@	.,		///
	default(char _dta[_svy_weight1])				///
	option(weight)							///
	label(resource LBL_SAMPLING_WEIGHT)

  TEXT tx_stage2		_lft	_ms	colwd0	.,		///
	right
  VARNAME vn_su2		col1	@	colwd1	.,		///
	default(char _dta[_svy_su2])					///
	option(strata)							///
	nomemory
  VARNAME vn_str2		col2	@	@	.,		///
	default(char _dta[_svy_strata2])				///
	option(strata)
  VARNAME vn_fpc2		col3	@	@	.,		///
	default(char _dta[_svy_fpc2])					///
	option(fpc)							///
	nomemory
  VARNAME vn_weight2		col4	@	@	.,		///
	default(char _dta[_svy_weight2])				///
	option(weight)

  TEXT tx_stage3		_lft	_ms	colwd0	.,		///
	right
  VARNAME vn_su3		col1	@	colwd1	.,		///
	default(char _dta[_svy_su3])					///
	option(strata)							///
	nomemory
  VARNAME vn_str3		col2	@	@	.,		///
	default(char _dta[_svy_strata3])				///
	option(strata)							///
	nomemory
  VARNAME vn_fpc3		col3	@	@	.,		///
	default(char _dta[_svy_fpc3])					///
	option(fpc)							///
	nomemory
  VARNAME vn_weight3		col4	@	@	.,		///
	default(char _dta[_svy_weight3])				///
	option(weight)

  TEXT tx_stage4		_lft	_ms	colwd0	.,		///
	right
  VARNAME vn_su4		col1	@	colwd1	.,		///
	default(char _dta[_svy_su4])					///
	option(strata)							///
	nomemory
  VARNAME vn_str4		col2	@	@	.,		///
	default(char _dta[_svy_strata4])				///
	option(strata)							///
	nomemory
  VARNAME vn_fpc4		col3	@	@	.,		///
	default(char _dta[_svy_fpc4])					///
	option(fpc)							///
	nomemory
  VARNAME vn_weight4		col4	@	@	.,		///
	default(char _dta[_svy_weight4])				///
	option(weight)

  TEXT tx_stage5		_lft	_ms	colwd0	.,		///
	right
  VARNAME vn_su5		col1	@	colwd1	.,		///
	default(char _dta[_svy_su5])					///
	option(strata)							///
	nomemory
  VARNAME vn_str5		col2	@	@	.,		///
	default(char _dta[_svy_strata5])				///
	option(strata)							///
	nomemory
  VARNAME vn_fpc5		col3	@	@	.,		///
	default(char _dta[_svy_fpc5])					///
	option(fpc)							///
	nomemory
  VARNAME vn_weight5		col4	@	@	.,		///
	default(char _dta[_svy_weight5])				///
	option(weight)

  TEXT tx_stage6		_lft	_ms	colwd0	.,		///
	right
  VARNAME vn_su6		col1	@	colwd1	.,		///
	default(char _dta[_svy_su6])					///
	option(strata)							///
	nomemory
  VARNAME vn_str6		col2	@	@ 	.,		///
	default(char _dta[_svy_strata6])				///
	option(strata)							///
	nomemory
  VARNAME vn_fpc6		col3	@	@	.,		///
	default(char _dta[_svy_fpc6])					///
	option(fpc)							///
	nomemory
  VARNAME vn_weight6		col4	@	@	.,		///
	default(char _dta[_svy_weight6])				///
	option(weight)

  TEXT tx_stage7		_lft	_ms	colwd0	.,		///
	right
  VARNAME vn_su7		col1	@	colwd1	.,		///
	default(char _dta[_svy_su7])					///
	option(strata)							///
	nomemory
  VARNAME vn_str7		col2	@	@	.,		///
	default(char _dta[_svy_strata7])				///
	option(strata)							///
	nomemory
  VARNAME vn_fpc7		col3	@	@	.,		///
	default(char _dta[_svy_fpc7])					///
	option(fpc)							///
	nomemory
  VARNAME vn_weight7		col4	@	@	.,		///
	default(char _dta[_svy_weight7])				///
	option(weight)

  TEXT tx_stage8		_lft	_ms	colwd0	.,		///
	right
  VARNAME vn_su8		col1	@	colwd1	.,		///
	default(char _dta[_svy_su8])					///
	option(strata)							///
	nomemory
  VARNAME vn_str8		col2	@	@	.,		///
	default(char _dta[_svy_strata8])				///
	option(strata)							///
	nomemory
  VARNAME vn_fpc8		col3	@	@	.,		///
	default(char _dta[_svy_fpc8])					///
	option(fpc)							///
	nomemory
  VARNAME vn_weight8		col4	@	@	.,		///
	default(char _dta[_svy_weight8])				///
	option(weight)

  TEXT tx_stage9		_lft	_ms	colwd0	.,		///
	right
  VARNAME vn_su9		col1	@	colwd1	.,		///
	default(char _dta[_svy_su9])					///
	option(strata)							///
	nomemory
  VARNAME vn_str9		col2	@	@	.,		///
	default(char _dta[_svy_strata9])				///
	option(strata)							///
	nomemory
  VARNAME vn_fpc9		col3	@	@	.,		///
	default(char _dta[_svy_fpc9])					///
	option(fpc)							///
	nomemory
  VARNAME vn_weight9		col4	@	@	.,		///
	default(char _dta[_svy_weight9])				///
	option(weight)

  TEXT tx_stage10		_lft	_ms	colwd0	.,		///
	right
  VARNAME vn_su10		col1	@	colwd1	.,		///
	default(char _dta[_svy_su10])					///
	option(strata)							///
	nomemory
  VARNAME vn_str10		col2	@	@	.,		///
	default(char _dta[_svy_strata10])				///
	option(strata)							///
	nomemory
  VARNAME vn_fpc10		col3	@	@	.,		///
	default(char _dta[_svy_fpc10])					///
	option(fpc)							///
	nomemory
  VARNAME vn_weight10		col4	@	@	.,		///
	default(char _dta[_svy_weight10])				///
	option(weight)

  TEXT tx_note1			_lft	420	_iwd	.,		///
	label(resource SVYSET_TX_NOTE1)

END

SCRIPT clear_all
BEGIN
	main.cb_stages.setvalue "1"
	main.vn_su1.setvalue ""
	main.vn_str1.setvalue ""
	main.vn_fpc1.setvalue ""
	main.vn_weight1.setvalue ""
	main.vn_su2.setvalue ""
	main.vn_str2.setvalue ""
	main.vn_fpc2.setvalue ""
	main.vn_weight2.setvalue ""
	main.vn_su3.setvalue ""
	main.vn_str3.setvalue ""
	main.vn_fpc3.setvalue ""
	main.vn_weight3.setvalue ""
	main.vn_su4.setvalue ""
	main.vn_str4.setvalue ""
	main.vn_fpc4.setvalue ""
	main.vn_weight4.setvalue ""
	main.vn_su5.setvalue ""
	main.vn_str5.setvalue ""
	main.vn_fpc5.setvalue ""
	main.vn_weight5.setvalue ""
	main.vn_su6.setvalue ""
	main.vn_str6.setvalue ""
	main.vn_fpc6.setvalue ""
	main.vn_weight6.setvalue ""
	main.vn_su7.setvalue ""
	main.vn_str7.setvalue ""
	main.vn_fpc7.setvalue ""
	main.vn_weight7.setvalue ""
	main.vn_su8.setvalue ""
	main.vn_str8.setvalue ""
	main.vn_fpc8.setvalue ""
	main.vn_weight8.setvalue ""
	main.vn_su9.setvalue ""
	main.vn_str9.setvalue ""
	main.vn_fpc9.setvalue ""
	main.vn_weight9.setvalue ""
	main.vn_su10.setvalue ""
	main.vn_str10.setvalue ""
	main.vn_fpc10.setvalue ""
	main.vn_weight10.setvalue ""
	weights.ed_wtype.setvalue ""
	weights.rb_none.seton
	weights.vn_pw.setvalue ""
	weights.vn_iw.setvalue ""
	weights.vl_brr.setvalue ""
	weights.ed_fay.setvalue ""
	weights.vl_bsr.setvalue ""
	weights.ed_bsn.setvalue ""
	weights.vl_jkr.setvalue ""
	weights.vl_sdr.setvalue ""
	post.vn_posts.setvalue ""
	post.vn_postw.setvalue ""
	script svy_se_clear
END

PROGRAM weights_check_wtype
BEGIN
	if weights.ed_wtype.equals("pweight") {
		call weights.rb_pw.seton
		call program wgt_on
	}
	if weights.ed_wtype.equals("iweight") {
		call weights.rb_iw.seton
		call program wgt_on
	}
END

LIST stage_contents
BEGIN
	1
	2
	3
	4
	5
	6
	7
	8
	9
	10
END

LIST stage_change
BEGIN
	script stage1
	script stage2
	script stage3
	script stage4
	script stage5
	script stage6
	script stage7
	script stage8
	script stage9
	script stage10
END

SCRIPT stage1
BEGIN
	has_stage1.settrue
	has_stage2.setfalse
	has_stage3.setfalse
	has_stage4.setfalse
	has_stage5.setfalse
	has_stage6.setfalse
	has_stage7.setfalse
	has_stage8.setfalse
	has_stage9.setfalse
	has_stage10.setfalse
	program check_stages
END

SCRIPT stage2
BEGIN
	has_stage1.settrue
	has_stage2.settrue
	has_stage3.setfalse
	has_stage4.setfalse
	has_stage5.setfalse
	has_stage6.setfalse
	has_stage7.setfalse
	has_stage8.setfalse
	has_stage9.setfalse
	has_stage10.setfalse
	program check_stages
END

SCRIPT stage3
BEGIN
	has_stage1.settrue
	has_stage2.settrue
	has_stage3.settrue
	has_stage4.setfalse
	has_stage5.setfalse
	has_stage6.setfalse
	has_stage7.setfalse
	has_stage8.setfalse
	has_stage9.setfalse
	has_stage10.setfalse
	program check_stages
END

SCRIPT stage4
BEGIN
	has_stage1.settrue
	has_stage2.settrue
	has_stage3.settrue
	has_stage4.settrue
	has_stage5.setfalse
	has_stage6.setfalse
	has_stage7.setfalse
	has_stage8.setfalse
	has_stage9.setfalse
	has_stage10.setfalse
	program check_stages
END

SCRIPT stage5
BEGIN
	has_stage1.settrue
	has_stage2.settrue
	has_stage3.settrue
	has_stage4.settrue
	has_stage5.settrue
	has_stage6.setfalse
	has_stage7.setfalse
	has_stage8.setfalse
	has_stage9.setfalse
	has_stage10.setfalse
	program check_stages
END

SCRIPT stage6
BEGIN
	has_stage1.settrue
	has_stage2.settrue
	has_stage3.settrue
	has_stage4.settrue
	has_stage5.settrue
	has_stage6.settrue
	has_stage7.setfalse
	has_stage8.setfalse
	has_stage9.setfalse
	has_stage10.setfalse
	program check_stages
END

SCRIPT stage7
BEGIN
	has_stage1.settrue
	has_stage2.settrue
	has_stage3.settrue
	has_stage4.settrue
	has_stage5.settrue
	has_stage6.settrue
	has_stage7.settrue
	has_stage8.setfalse
	has_stage9.setfalse
	has_stage10.setfalse
	program check_stages
END

SCRIPT stage8
BEGIN
	has_stage1.settrue
	has_stage2.settrue
	has_stage3.settrue
	has_stage4.settrue
	has_stage5.settrue
	has_stage6.settrue
	has_stage7.settrue
	has_stage8.settrue
	has_stage9.setfalse
	has_stage10.setfalse
	program check_stages
END

SCRIPT stage9
BEGIN
	has_stage1.settrue
	has_stage2.settrue
	has_stage3.settrue
	has_stage4.settrue
	has_stage5.settrue
	has_stage6.settrue
	has_stage7.settrue
	has_stage8.settrue
	has_stage9.settrue
	has_stage10.setfalse
	program check_stages
END

SCRIPT stage10
BEGIN
	has_stage1.settrue
	has_stage2.settrue
	has_stage3.settrue
	has_stage4.settrue
	has_stage5.settrue
	has_stage6.settrue
	has_stage7.settrue
	has_stage8.settrue
	has_stage9.settrue
	has_stage10.settrue
	program check_stages
END

PROGRAM check_stages
BEGIN
	if has_stage1 {
		call main.tx_stage1.show
		call main.vn_str1.show
		call main.vn_su1.show
		call main.vn_fpc1.show
		call main.vn_weight1.show
	}
	if !has_stage1 {
		call main.tx_stage1.hide
		call main.vn_str1.hide
		call main.vn_su1.hide
		call main.vn_fpc1.hide
		call main.vn_weight1.hide
	}
	if has_stage2 {
		call main.tx_stage2.show
		call main.vn_str2.show
		call main.vn_su2.show
		call main.vn_fpc2.show
		call main.vn_weight2.show
	}
	if !has_stage2 {
		call main.tx_stage2.hide
		call main.vn_str2.hide
		call main.vn_su2.hide
		call main.vn_fpc2.hide
		call main.vn_weight2.hide
	}
	if has_stage3 {
		call main.tx_stage3.show
		call main.vn_str3.show
		call main.vn_su3.show
		call main.vn_fpc3.show
		call main.vn_weight3.show
	}
	if !has_stage3 {
		call main.tx_stage3.hide
		call main.vn_str3.hide
		call main.vn_su3.hide
		call main.vn_fpc3.hide
		call main.vn_weight3.hide
	}
	if has_stage4 {
		call main.tx_stage4.show
		call main.vn_str4.show
		call main.vn_su4.show
		call main.vn_fpc4.show
		call main.vn_weight4.show
	}
	if !has_stage4 {
		call main.tx_stage4.hide
		call main.vn_str4.hide
		call main.vn_su4.hide
		call main.vn_fpc4.hide
		call main.vn_weight4.hide
	}
	if has_stage5 {
		call main.tx_stage5.show
		call main.vn_str5.show
		call main.vn_su5.show
		call main.vn_fpc5.show
		call main.vn_weight5.show
	}
	if !has_stage5 {
		call main.tx_stage5.hide
		call main.vn_str5.hide
		call main.vn_su5.hide
		call main.vn_fpc5.hide
		call main.vn_weight5.hide
	}
	if has_stage6 {
		call main.tx_stage6.show
		call main.vn_str6.show
		call main.vn_su6.show
		call main.vn_fpc6.show
		call main.vn_weight6.show
	}
	if !has_stage6 {
		call main.tx_stage6.hide
		call main.vn_str6.hide
		call main.vn_su6.hide
		call main.vn_fpc6.hide
		call main.vn_weight6.hide
	}
	if has_stage7 {
		call main.tx_stage7.show
		call main.vn_str7.show
		call main.vn_su7.show
		call main.vn_fpc7.show
		call main.vn_weight7.show
	}
	if !has_stage7 {
		call main.tx_stage7.hide
		call main.vn_str7.hide
		call main.vn_su7.hide
		call main.vn_fpc7.hide
		call main.vn_weight7.hide
	}
	if has_stage8 {
		call main.tx_stage8.show
		call main.vn_str8.show
		call main.vn_su8.show
		call main.vn_fpc8.show
		call main.vn_weight8.show
	}
	if !has_stage8 {
		call main.tx_stage8.hide
		call main.vn_str8.hide
		call main.vn_su8.hide
		call main.vn_fpc8.hide
		call main.vn_weight8.hide
	}
	if has_stage9 {
		call main.tx_stage9.show
		call main.vn_str9.show
		call main.vn_su9.show
		call main.vn_fpc9.show
		call main.vn_weight9.show
	}
	if !has_stage9 {
		call main.tx_stage9.hide
		call main.vn_str9.hide
		call main.vn_su9.hide
		call main.vn_fpc9.hide
		call main.vn_weight9.hide
	}
	if has_stage10 {
		call main.tx_stage10.show
		call main.vn_str10.show
		call main.vn_su10.show
		call main.vn_fpc10.show
		call main.vn_weight10.show
	}
	if !has_stage10 {
		call main.tx_stage10.hide
		call main.vn_str10.hide
		call main.vn_su10.hide
		call main.vn_fpc10.hide
		call main.vn_weight10.hide
	}
END

DIALOG weights, tabtitle(resource WEIGHTS_TABTITLE)
BEGIN
  // NOTE: This EDIT control is used to activate the currently svyset weight
  // type RADIO.  It should be invisible.
  EDIT ed_wtype			0	0	0	0,		///
	default(char _dta[_svy_wtype])					///
	nomemory

  TEXT tx_wgttyp		_lft	_top	_cwd1	.,		///
	label(resource LBL_WEIGHT_TYPE)

  BUTTON bu_help		_xsetbu	@	_setbuwd  .,		///
	push(script help4wgt)						///
	label(resource LBL_HELP_WEIGHTS)

  RADIO rb_none			_lft	_ss	_iwd	., 		///
	first 								///
	clickon("program wgt_off")					///
	option(NONE)							///
	label(resource LBL_NONE)

  RADIO rb_pw			_lft	_ms	_iwd	.,		///
	clickon(program wgt_on)						///
	label(resource SVYSET_RB_PW)

  RADIO rb_iw			_lft	+45	_iwd	., 		///
	clickon(program wgt_on)						///
	last								///
	label(resource SVYSET_RB_IW)

  VARNAME vn_pw			_rbsep	-25	_vnwd	.,		///
	default(char _dta[_svy_wvar])					///
	nomemory							///
	option(pweight)							///
	label(resource SVYSET_RB_PW)

  VARNAME vn_iw			@	+45	_vnwd	.,		///
	default(char _dta[_svy_wvar])					///
	nomemory							///
	option(iweight)							///
	label(resource SVYSET_RB_IW)

  TEXT tx_brr			_lft	_ls	_iwd	., 		///
	label(resource SVYSET_TX_BRR)
  VARLIST vl_brr		@	_ss	@	.,		///
	default(char _dta[_svy_brrweight])				///
	nomemory							///
	option(brrweight)						///
	label(resource SVYSET_VL_BRR)

  TEXT tx_fay			@	_ls	_vnwd	.,		///
	label(resource LBL_FAYS_ADJUSTMENT)
  EDIT ed_fay			@	_ss	@	.,		///
	numonly								///
	option(fay)							///
	label(resource LBL_FAYS_ADJUSTMENT)

  TEXT tx_bs			_lft	_ls	_iwd	., 		///
	label(resource SVYSET_TX_BS)
  VARLIST vl_bsr		@	_ss	@	.,		///
	default(char _dta[_svy_bsrweight])				///
	nomemory							///
	option(bsrweight)						///
	label(resource SVYSET_TX_BS)

  TEXT x_bsn			@	_ls	 _iwd	.,		///
	label(resource LBL_BOOTSTRAP_MEAN_WEIGHT_ADJUSTMENT)

  EDIT ed_bsn			@	_ss	_vnwd	.,		///
	numonly								///
	option(bsn)							///
	label(resource LBL_BOOTSTRAP_MEAN_WEIGHT_ADJUSTMENT)

  TEXT  tx_jkr			_lft	_ls	_iwd	., 		///
	label(resource SVYSET_TX_JKR)

  VARLIST vl_jkr		@	_ss	@	.,		///
	default(char _dta[_svy_jkrweight])				///
	nomemory							///
	option(jkrweight)						///
	label(resource SVYSET_TX_JKR)

  TEXT tx_sdr			_lft	_ls	_iwd	., 		///
	label(resource SVYSET_TX_SDR)

  VARLIST vl_sdr		@	_ss	@	.,		///
	default(char _dta[_svy_sdrweight])				///
	nomemory							///
	option(sdrweight)						///
	label(resource SVYSET_TX_SDR)

END

SCRIPT help4wgt
BEGIN
	view help svyweights##|_new
END

PROGRAM wgt_off
BEGIN
	call gaction weights.vn_pw.disable
	call gaction weights.vn_iw.disable
END

PROGRAM wgt_on
BEGIN
	call program wgt_off
	if weights.rb_pw {
		call gaction weights.vn_pw.enable
	}
	if weights.rb_iw {
		call gaction weights.vn_iw.enable
	}
END

INCLUDE svy_se

DIALOG post,  tabtitle(resource SVYSET_TAB_POST)
BEGIN
  TEXT tx_posts			_lft	_top	_cwd3_1	.,		///
	label(resource SVYSET_TX_POSTS)

  VARNAME vn_posts		@	_ss	_vnwd	.,		///
	option("poststrata")						///
	default(char _dta[_svy_poststrata])				///
	nomemory							///
	label(resource SVYSET_TX_POSTS)

  TEXT tx_postw			@	_ls	_cwd3_1	.,		///
	label(resource SVYSET_TX_POSTW)

  VARNAME vn_postw		@	_ss	_vnwd	.,		///
	option("postweight")						///
	default(char _dta[_svy_postweight])				///
	nomemory							///
	label(resource SVYSET_TX_POSTW)
END

PROGRAM post_disable
BEGIN
	call post.tx_posts.disable
	call post.vn_posts.disable
	call post.tx_postw.disable
	call post.vn_postw.disable
END

PROGRAM post_enable
BEGIN
	call post.tx_posts.enable
	call post.vn_posts.enable
	call post.tx_postw.enable
	call post.vn_postw.enable
END


DIALOG cal, tabtitle(resource SVYSET_TAB_CALIBRATION)
BEGIN
  RADIO rb_none			_lft	_top	_iwd	., first	///
	clickon("program cal_disable")					///
	label(resource SVYSET_CAL_RB_NONE)

  RADIO rb_rake			@	_ss	@	.,		///
	clickon("program cal_enable")					///
	label(resource SVYSET_CAL_RB_RAKE)

  RADIO rb_regress		@	_ss	@	., last 	///
	clickon("program cal_enable")					///
	label(resource SVYSET_CAL_RB_REGRESS)

  TEXT tx_varlist		@	_ls	@	.,		///
	label(resource LBL_VARIABLES)
  VARLIST vl_varlist		@	_ss	@	.,		///
	allowcat fv									///
	numeric										///
	label(resource LBL_VARIABLES)

  TEXT tx_total			@	_ls	120	.,		///
	label(resource LBL_POPULATION_TOTALS)
  HLINK hl_total		+130	@	@	.,		///
	onpush("view help svyset##totals")				///
	label("help svyset")
  EDIT ed_total			_lft	_ss	_iwd	.,		///
	option(total)							///
	label(resource LBL_POPULATION_TOTALS)

  GROUPBOX gb_opts		@	_ls	@	_ht18,		///
	label(resource LBL_OPTIONS)

  TEXT tx_tolerance		_indent	_ss	_cwd2	.,		///
	label(resource SVYSET_CAL_TX_TOLERANCE)
  EDIT ed_tolerance		@	_ms	_en7wd	.,		///
	option(tolerance)						///
	default(1e-7)							///
	label("Lagrange multiplier tolerance")

  SPINNER sp_iterate		_lft2	@	_spwd	.,		///
	option(iterate)							///
	min(0)								///
	max(16000)							///
	default(1000)
  TEXT tx_iterate		_spsep	@	_spr2	.,		///
	label(resource LBL_MAXIMUM_ITERATIONS)

  GROUPBOX gb_truncate		_ilft	_ls	_ibwd	_ht4,		///
	label(resource SVYSET_CAL_GB_TRUNCATE)
  TEXT tx_ll			_iilft	_ss	_cwd1	.,		///
	label(resource LBL_LOWER_LIMIT)
  TEXT tx_ul			_lft2	@	@	.,		///
	label(resource LBL_UPPER_LIMIT)
  EDIT ed_ll			_iilft	_ss	_en7wd	.,		///
	option(ll)							///
	numonly								///
	label(resource LBL_LOWER_LIMIT)
  EDIT ed_ul			_lft2	@	@	.,		///
	option(ul)							///
	numonly								///
	label(resource LBL_UPPER_LIMIT)
  CHECKBOX ck_noconstant	_ilft	+45	_ibwd	.,		///
	option(noconstant)						///
	label(resource SVYSET_CAL_CK_NOCONSTANT)
  CHECKBOX ck_force		@	_ms	@	.,		///
	option(force)							///
	label(resource SVYSET_CAL_CK_FORCE)
END

PROGRAM cal_disable
BEGIN
	call program post_enable
	call cal.tx_varlist.disable
	call cal.vl_varlist.disable
	call cal.tx_total.disable
	call cal.ed_total.disable
	call cal.gb_opts.disable
	call cal.tx_tolerance.disable
	call cal.ed_tolerance.disable
	call cal.sp_iterate.disable
	call cal.tx_iterate.disable
	call cal.gb_truncate.disable
	call cal.tx_ll.disable
	call cal.tx_ul.disable
	call cal.ed_ll.disable
	call cal.ed_ul.disable
	call cal.ck_noconstant.disable
	call cal.ck_force.disable
END

PROGRAM cal_enable
BEGIN
	call program post_disable
	call cal.tx_varlist.enable
	call cal.vl_varlist.enable
	call cal.tx_total.enable
	call cal.ed_total.enable
	call cal.gb_opts.enable
	call cal.tx_tolerance.enable
	call cal.ed_tolerance.enable
	call cal.sp_iterate.enable
	call cal.tx_iterate.enable
	call cal.gb_truncate.enable
	call cal.tx_ll.enable
	call cal.tx_ul.enable
	call cal.ed_ll.enable
	call cal.ed_ul.enable
	call cal.ck_noconstant.enable
	call cal.ck_force.enable
END

PROGRAM cal_options_output
BEGIN
	beginoptions
		optionarg cal.ed_total
		optionarg cal.ed_tolerance
		optionarg cal.sp_iterate
		optionarg cal.ed_ll
		optionarg cal.ed_ul
		option cal.ck_noconstant
		option cal.ck_force
	endoptions
END

PROGRAM cal_output
BEGIN
	if (cal.rb_rake | cal.rb_regress) {
		require cal.vl_varlist
		require cal.ed_total
		if (cal.rb_rake) {
			put " rake("
			put cal.vl_varlist
			put /program cal_options_output
			put ")"
		}
		else {
			put " regress("
			put cal.vl_varlist
			put /program cal_options_output
			put ")"
		}
	}
END

SCRIPT POSTINIT
BEGIN
	script svy_se_IS_SVYSET
	program main_check_stages
	script main_labelcontrols
END


PROGRAM main_check_stages
BEGIN
	call create STRING svy_stages_wt
	call create STRING svy_stages
	call create DOUBLE dsvy_stages_wt
	call create DOUBLE dsvy_stages
	call create DOUBLE missing
	call missing.setvalue .
	call svy_stages_wt.setvalue char _dta[_svy_stages_wt]
	call svy_stages.setvalue char _dta[_svy_stages]
	call svy_stages_wt.withvalue dsvy_stages_wt.setvalue @
	call svy_stages.withvalue dsvy_stages.setvalue @

	if dsvy_stages_wt.iseq(missing) {
		call dsvy_stages.withvalue main.cb_stages.setvalue @
	}
	else {
		if dsvy_stages_wt.isgt(dsvy_stages) {
			call dsvy_stages_wt.withvalue main.cb_stages.setvalue @
		}
		else {
			call dsvy_stages.withvalue main.cb_stages.setvalue @
		}
	}
END

SCRIPT main_labelcontrols
BEGIN
	create STRING STMP

	STMP.format "resource LBL_STAGE_#_FMT" "1"
	STMP.withvalue main.tx_stage1.setlabel "@"
	STMP.format `"resource LBL_PRIMARY_SAMPLING_UNIT_STAGE_#_FMT"' "1"
	STMP.withvalue main.vn_su1.setlabel `"@"'

	STMP.format "resource LBL_STAGE_#_FMT" "2"
	STMP.withvalue main.tx_stage2.setlabel "@"
	STMP.format `"resource LBL_PRIMARY_SAMPLING_UNIT_STAGE_#_FMT"' "2"
	STMP.withvalue main.vn_su2.setlabel `"@"'

	STMP.format "resource LBL_STAGE_#_FMT" "3"
	STMP.withvalue main.tx_stage3.setlabel "@"
	STMP.format `"resource LBL_PRIMARY_SAMPLING_UNIT_STAGE_#_FMT"' "3"
	STMP.withvalue main.vn_su3.setlabel `"@"'

	STMP.format "resource LBL_STAGE_#_FMT" "4"
	STMP.withvalue main.tx_stage4.setlabel "@"
	STMP.format "resource LBL_PRIMARY_SAMPLING_UNIT_STAGE_#_FMT" "4"
	STMP.withvalue main.vn_su4.setlabel `"@"'

	STMP.format "resource LBL_STAGE_#_FMT" "5"
	STMP.withvalue main.tx_stage5.setlabel "@"
	STMP.format "resource LBL_PRIMARY_SAMPLING_UNIT_STAGE_#_FMT" "5"
	STMP.withvalue main.vn_su5.setlabel `"@"'

	STMP.format "resource LBL_STAGE_#_FMT" "6"
	STMP.withvalue main.tx_stage6.setlabel "@"
	STMP.format "resource LBL_PRIMARY_SAMPLING_UNIT_STAGE_#_FMT" "6"
	STMP.withvalue main.vn_su6.setlabel `"@"'

	STMP.format "resource LBL_STAGE_#_FMT" "7"
	STMP.withvalue main.tx_stage7.setlabel "@"
	STMP.format "resource LBL_PRIMARY_SAMPLING_UNIT_STAGE_#_FMT" "7"
	STMP.withvalue main.vn_su7.setlabel `"@"'

	STMP.format "resource LBL_STAGE_#_FMT" "8"
	STMP.withvalue main.tx_stage8.setlabel "@"
	STMP.format "resource LBL_PRIMARY_SAMPLING_UNIT_STAGE_#_FMT" "8"
	STMP.withvalue main.vn_su8.setlabel `"@"'

	STMP.format "resource LBL_STAGE_#_FMT" "9"
	STMP.withvalue main.tx_stage9.setlabel "@"
	STMP.format "resource LBL_PRIMARY_SAMPLING_UNIT_STAGE_#_FMT" "9"
	STMP.withvalue main.vn_su9.setlabel `"@"'

	STMP.format "resource LBL_STAGE_#_FMT" "10"
	STMP.withvalue main.tx_stage10.setlabel "@"
	STMP.format "resource LBL_PRIMARY_SAMPLING_UNIT_STAGE_#_FMT" "10"
	STMP.withvalue main.vn_su10.setlabel `"@"'
END

PROGRAM stage1_output
BEGIN
	if has_stage2 {
		require main.vn_su1
	}
	if main.vn_su1 {
		put main.vn_su1
	}
	if !main.vn_su1 {
		put "_n"
	}
	if weights.rb_pw {
		require weights.vn_pw
		weight weights.vn_pw weights.vn_pw
	}
	if weights.rb_iw {
		require weights.vn_iw
		weight weights.vn_iw weights.vn_iw
	}
	beginoptions
		optionarg main.vn_str1
		optionarg main.vn_fpc1
		optionarg main.vn_weight1
		if post.vn_posts | post.vn_postw {
			require post.vn_posts
			require post.vn_postw
			optionarg post.vn_posts
			optionarg post.vn_postw
		}
		optionarg weights.vl_brr
		optionarg weights.ed_fay
		optionarg weights.vl_bsr
		optionarg weights.ed_bsn
		optionarg weights.vl_jkr
		optionarg weights.vl_sdr
		put " " /program svy_se_output
	endoptions
END

PROGRAM stage2_output
BEGIN
	if has_stage2 {
		put "|| "
		if has_stage3 {
			require main.vn_su2
		}
		if main.vn_su2 {
			put main.vn_su2
		}
		if !main.vn_su2 {
			put "_n"
		}
		beginoptions
			optionarg main.vn_str2
			optionarg main.vn_fpc2
			optionarg main.vn_weight2
		endoptions
	}
END

PROGRAM stage3_output
BEGIN
	if has_stage3 {
		put "|| "
		if has_stage4 {
			require main.vn_su3
		}
		if main.vn_su3 {
			put main.vn_su3
		}
		if !main.vn_su3 {
			put "_n"
		}
		beginoptions
			optionarg main.vn_str3
			optionarg main.vn_fpc3
			optionarg main.vn_weight3
		endoptions
	}
END

PROGRAM stage4_output
BEGIN
	if has_stage4 {
		put "|| "
		if has_stage5 {
			require main.vn_su4
		}
		if main.vn_su4 {
			put main.vn_su4
		}
		if !main.vn_su4 {
			put "_n"
		}
		beginoptions
			optionarg main.vn_str4
			optionarg main.vn_fpc4
			optionarg main.vn_weight4
		endoptions
	}
END

PROGRAM stage5_output
BEGIN
	if has_stage5 {
		put "|| "
		if has_stage6 {
			require main.vn_su5
		}
		if main.vn_su5 {
			put main.vn_su5
		}
		if !main.vn_su5 {
			put "_n"
		}
		beginoptions
			optionarg main.vn_str5
			optionarg main.vn_fpc5
			optionarg main.vn_weight5
		endoptions
	}
END

PROGRAM stage6_output
BEGIN
	if has_stage6 {
		put "|| "
		if has_stage7 {
			require main.vn_su6
		}
		if main.vn_su6 {
			put main.vn_su6
		}
		if !main.vn_su6 {
			put "_n"
		}
		beginoptions
			optionarg main.vn_str6
			optionarg main.vn_fpc6
			optionarg main.vn_weight6
		endoptions
	}
END

PROGRAM stage7_output
BEGIN
	if has_stage7 {
		put "|| "
		if has_stage8 {
			require main.vn_su7
		}
		if main.vn_su7 {
			put main.vn_su7
		}
		if !main.vn_su7 {
			put "_n"
		}
		beginoptions
			optionarg main.vn_str7
			optionarg main.vn_fpc7
			optionarg main.vn_weight7
		endoptions
	}
END

PROGRAM stage8_output
BEGIN
	if has_stage8 {
		put "|| "
		if has_stage9 {
			require main.vn_su8
		}
		if main.vn_su8 {
			put main.vn_su8
		}
		if !main.vn_su8 {
			put "_n"
		}
		beginoptions
			optionarg main.vn_str8
			optionarg main.vn_fpc8
			optionarg main.vn_weight8
		endoptions
	}
END

PROGRAM stage9_output
BEGIN
	if has_stage9 {
		put "|| "
		if has_stage10 {
			require main.vn_su9
		}
		if main.vn_su9 {
			put main.vn_su9
		}
		if !main.vn_su9 {
			put "_n"
		}
		beginoptions
			optionarg main.vn_str9
			optionarg main.vn_fpc9
			optionarg main.vn_weight9
		endoptions
	}
END

PROGRAM stage10_output
BEGIN
	if has_stage10 {
		put "|| "
		if main.vn_su10 {
			put main.vn_su10
		}
		if !main.vn_su10 {
			put "_n"
		}
		beginoptions
			optionarg main.vn_str10
			optionarg main.vn_fpc10
			optionarg main.vn_weight10
		endoptions
	}
END

PROGRAM command
BEGIN
	if isMI {
		put "mi "
	}
	if main.vn_weight1 | main.vn_weight2 | main.vn_weight3 |	///
		main.vn_weight4 | main.vn_weight5 | main.vn_weight6 |	///
		main.vn_weight7 | main.vn_weight8 | main.vn_weight9 |	///
		main.vn_weight10 {
	
		if weights.vn_pw | weights.vn_iw | weights.vl_brr |	///
			weights.ed_fay | weights.vl_bsr |		///
			weights.ed_bsn | weights.vl_jkr	|		 ///
			weights.vl_sdr {
				stopbox stop "resource SVYSET_WEIGHTS_MSGBOX"
// Sampling weights and replication weights are not allowed with stage-level weights.
		}
	}
	put "svyset "
	put " " /program stage1_output
	put " " /program stage2_output
	put " " /program stage3_output
	put " " /program stage4_output
	put " " /program stage5_output
	put " " /program stage6_output
	put " " /program stage7_output
	put " " /program stage8_output
	put " " /program stage9_output
	put " " /program stage10_output
	put " " /program cal_output
END
