/*                                 starkey

	a view of a key (circle with a tock) for a stargraph legend.

*/
*! version 1.0.0  30jul2002

version 8

class {
	angle    = 0

	class markerstyle  symstyle
	class linestyle	   tockstyle
/*
	class starkeystyle style
*/
} , inherit(view)


/*--------------------------------------------------------------------------*/
program new

	syntax [ , SYMStyle(string) (TOCKStyle(string) * ]

	if "`symstyle'" == "" {					/* defaults */
		.symstyle.setstyle  , style(star)		
	}
	if "`tockstyle'" == "" {
		.tockstyle.setstyle , style(p1)
	}

	.set `0'
end


/*--------------------------------------------------------------------------*/
program set

	syntax [ , Angle(numlist min=1 max=1) SYMStyle(string) 		/*
		*/ TOCKStyle(string) * ]

	if "`angle'" != "" {
		.angle = `angle'
	}
	if "`symstyle'" != "" {
		.symstyle.setstyle , style(`symstyle')
	}
	if "`tockstyle'" != "" {
		.tockstyle.setstyle , style(`tockstyle')
	}

	.Super.set , `options'
end


/*--------------------------------------------------------------------------*/
program draw

	syntax [, XSize(real -1) YSize(real -1) ]

	local x0 = `xsize' / 2		// no margins so just put in middle
	local y0 = `ysize' / 2

	local r = `.symstyle.size.gmval' / 2

	local x = `x0' + `r' * cos(`.angle')
	local y = `y0' + `r' * sin(`.angle')

	.symstyle.setgdifull
	gdi point `x0' `y0'

	.tockstyle.setgdifull
	gdi line `x0' `y0' `x' `y'

end


/*--------------------------------------------------------------------------*/
program xsize
	class exit = `.symstyle.size.gmval'
end

program ysize
	class exit = `.symstyle.size.gmval'
end
