/*
  sg__measurement_tool.dlg

*!  VERSION 1.2.3  21mar2017

*/

VERSION 14.0
MODAL

INCLUDE _std_msmall
DEFINE _dlght 415
POSITION . . _dlgwd _dlght

OK ok1, label(resource LBL_BU_OK) target(stata hidden)
CANCEL can1, label(resource LBL_BU_CANCEL)

DEFINE _clwd	15
DEFINE _wd	160
DEFINE _sep	+165
DEFINE _wd2	110
DEFINE _sep2	+115
DEFINE _cbwd	100
DEFINE _cbsep	+105

INCLUDE sg__common_output 		/* routines necessary for output */

SCRIPT PREINIT
BEGIN
	script sg__common_output_init 	/* initialize output globals */

	create STRING OBJ
	program setupOBJECT

	create DOUBLE index

	create STRING sTemp
	create BOOLEAN bGSEM		/* gsem mode enabled 	*/
	
	program global_get_defaults
	setscale_hadj resource SG__MEASUREMENT_TOOL_DLG_HSCALE
END

PROGRAM global_get_defaults
BEGIN
	call bGSEM.setfalse
	call sTemp.setvalue class .__SEMG.dbsettings.estmode
	if (sTemp.iseq("1")) { 
		call bGSEM.settrue
	}
END

PROGRAM setupOBJECT
BEGIN
	if ! __MESSAGE {
		stopbox stop resource LBL_MSGBOX_OBJECT_NOT_FOUND
// An unexpected error has occurred. Object not found.
		exit 198
	}
	call OBJ.setvalue class __MESSAGE.value
END

SCRIPT main_PREINIT
BEGIN
	create STRING cons
	create STRING direction
	create STRING lname
	create STRING mlname
	create STRING k
	create STRING flink
	create STRING makegl

	create STRING sMLlatvarRes

	program main_get_defaults
END

SCRIPT main_POSTINIT
BEGIN
	program main_initialize_controls
END

PROGRAM main_get_defaults
BEGIN
	call cons.setvalue class .__SEMG.dbsettings.cons
	if (cons) {
		if (cons.iseq("1")) {
			call main.ck_cons.setdefault 0
		}
		else {
			call main.ck_cons.setdefault 1
		}
	}
	call direction.setvalue class .__SEMG.dbsettings.direction
	call direction.withvalue main.cb_dir.setdefault "@"

	call lname.setvalue class .__SEMG.dbsettings.lname
	call lname.withvalue main.ed_latvar.setdefault "@"
	
	call mlname.setvalue class .__SEMG.dbsettings.mlname
	call mlname.withvalue main.ed_nlevel.setdefault "@"

	call k.setvalue class .__SEMG.dbsettings.k
	call k.withvalue main.sp_k.setdefault @
	
	call flink.setvalue class .__SEMG.dbsettings.familylink
	call flink.withvalue main.cb_flink.setdefault "@"

	call makegl.setvalue class .__SEMG.dbsettings.isglm
	if (makegl) {
		if (makegl.iseq("yes")) {
			call main.ck_makegl.setdefault 1
		}
		else {
			call main.ck_makegl.setdefault 0
		}
	}
END

PROGRAM main_initialize_controls
BEGIN
	if (bGSEM) {
		call main.rb_mllat.enable
	}
	else {
		call main.rb_mllat.disable
		call main.rb_stdlat.seton
	}

	if (cons) {
		if (cons.iseq("1")) {
			call main.ck_cons.setoff
		}
		else {
			call main.ck_cons.seton
		}
	}
	call main.cb_dir.setvalue class direction.value
	call main.ed_latvar.setvalue class lname.value
	call main.ed_nlevel.setvalue class mlname.value
	call main.sp_k.setvalue class k.value
	call main.cb_flink.setvalue class flink.value
	if (bGSEM) {
		call main.ck_makegl.enable
		if (makegl) {
			if (makegl.iseq("yes")) {
				call main.ck_makegl.seton
			}
			else {
				call main.ck_makegl.setoff
			}
		}
	}
	else {
		call main.ck_makegl.setoff
		call main.ck_makegl.disable
	}
END

PROGRAM check_mode
BEGIN
	if main.rb_vars {
		call main.tx_mvar.show
		call main.vl_mvar_ts.show
		call main.tx_k.hide
		call main.sp_k.hide
	}
	if main.rb_k {
		call main.tx_k.show
		call main.sp_k.show
		call main.tx_mvar.hide
		call main.vl_mvar_ts.hide
	}
END

PROGRAM show_levels_dialog
BEGIN
	call OBJ.withvalue create CHILD sg__mllatvars, message("@")
	call sg__mllatvars.setExitString sMLlatvarRes
	call sg__mllatvars.setExitAction "program levels_dialog_done"
	call sg__mllatvars.callthru "bCallAsChild.settrue"
END

PROGRAM levels_dialog_done
BEGIN
	call main.ed_nlevel.setvalue class sMLlatvarRes.value
END

PROGRAM check_ml
BEGIN
	if main.rb_stdlat {
		call main.tx_latvar.show
		call main.ed_latvar.show
		call main.tx_nlevel.hide
		call main.ed_nlevel.hide
		call main.bu_nlevel.hide
	}
	else {
		call main.tx_latvar.hide
		call main.ed_latvar.hide
		call main.tx_nlevel.show
		call main.ed_nlevel.show
		call main.bu_nlevel.show
	}
END

PROGRAM check_makegl
BEGIN
	if main.ck_makegl {
		call main.tx_flink.enable
		call main.cb_flink.enable
	}
	else {
		call main.tx_flink.disable
		call main.cb_flink.disable
	}

	call program check_mode
END

DIALOG main, label(resource SG__MEASUREMENT_TOOL_DLG_TITLE) tabtitle(resource LBL_TAB_MAIN)
BEGIN
  GROUPBOX gb_latent	_lft	_top	_iwd	_ht9,		///
	label(resource SG__MEASUREMENT_TOOL_MAIN_GB_LATENT)
  RADIO    rb_stdlat	_ilft	_ss	_ibwd	., first	///
	label(resource SG__MEASUREMENT_TOOL_MAIN_RB_STDLAT)	///
	onclickon(program check_ml)
  RADIO    rb_mllat	@	_ss	@	., last		///
	label(resource SG__MEASUREMENT_TOOL_MAIN_RB_MLLAT)	///
	onclickon(program check_ml)

  TEXT     tx_latvar	_ilft	_ms	_ibwd	.,		///
	label(resource SG__MEASUREMENT_TOOL_MAIN_TX_LATVAR)
DEFINE Y @y
  EDIT     ed_latvar	@	_ss	_vnwd	.,

  TEXT     tx_nlevel	@	Y	@	.,		///
	label(resource LBL_NAME_LEVEL)
  EDIT     ed_nlevel	@	_ss	@	., nomemory	///
	label(resource LBL_NAME_LEVEL)
  BUTTON   bu_nlevel	_vnsep	@	18	.,		///
	label("...") onpush("program show_levels_dialog")

  GROUPBOX gb_measure	_lft	+45	_iwd	_ht23h,		///
	label(resource SG__MEASUREMENT_TOOL_MAIN_GB_MEASURE)

  RADIO    rb_vars	_ilft	_ss	_ibwd	., first	///
	label(resource LBL_SELECT_VARIABLES)			///
	onclickon(program check_mode)
  RADIO    rb_k		@	_ss	@	., last		///
	label(resource LBL_SPECIFY_NUMBER_OF_VARIABLES)		///
	onclickon(program check_mode)

  TEXT     tx_mvar	_ilft	_ms	_ibwd	.,		///
	label(resource LBL_MEASUREMENT_VARIABLES)
DEFINE y @y
  VARLIST  vl_mvar_ts	@	_ss	@	.,		///
	label(resource LBL_MEASUREMENT_VARIABLES) nomemory ts

  TEXT     tx_k		_ilft	y	_ibwd	.,		///
	label(resource LBL_NUMBER_OF_VARIABLES) 
  SPINNER  sp_k		@	_ss	_spwd	.,		///
	nomemory min(1) max(40)

  CHECKBOX ck_makegl	_ilft	+35	_ibwd	_ht2h,		///
	label(resource SG__MEASUREMENT_TOOL_MAIN_CK_MAKEGL) groupbox	///
	nomemory						///
	onclickon(program check_makegl) onclickoff(program check_makegl)
  TEXT     tx_flink	+10	_ss	95	., right	///
	label(resource LBL_FAMILY_LINK)
  COMBOBOX cb_flink	+100	@	150	.,		///
	dropdown editreadonly					///
	contents(__SEM_STYLES_LABEL.familylink)			///
	values(__SEM_STYLES.familylink)				///
	onselchange(program check_mode)

  CHECKBOX ck_cons	_ilft	+45	_ibwd	.,		///
	label(resource LBL_DO_NOT_ESTIMATE_CONSTANTS) 

  TEXT     tx_dir	@	_ms	@	.,		///
	label(resource SG__MEASUREMENT_TOOL_MAIN_TX_DIR) 
  COMBOBOX cb_dir	@	_ss	120	.,		///
	dropdownlist contents(__SEM_STYLES_LABEL.direction)	///
	values(__SEM_STYLES.direction)
END

PROGRAM main_output
BEGIN
	call program main_get_defaults

	if main.ed_latvar & !main.ed_latvar.isdefault() {
		if ! main.ed_latvar.isvalidname() {
			call create STRING _MSG_TMP
                        call _MSG_TMP.format 				///
				"resource LBL_MSGBOX_ON_TAB_YOU_SELECTED_IS_NOT_VALID_FMT" ///
				"resource LBL_TAB_MAIN" ///
				"resource SG__MEASUREMENT_TOOL_MAIN_TX_LATVAR" 
			stopbox stop "class _MSG_TMP.value"
// On the "Main" tab, the "Latent variable name" you have selected is not valid.
		}
		call sg__PARAM2.setvalue "Set"
		call sg__ARG_00.setvalue "dbholdstr" 
		call sg__ARG_01.setvalue class main.ed_latvar.value
		put /program sg__do_output_sub
	}
	
	if (main.ed_nlevel.isvisible() & !main.ed_nlevel.isdefault()) {
		call sg__PARAM2.setvalue "Set"
		call sg__ARG_00.setvalue "dbholdstr"
		call sg__ARG_01.setvalue class main.ed_nlevel.value
		put /program sg__do_output_sub
	}
	
	if main.rb_vars {
		call sg__PARAM2.setvalue "Set"
		call sg__ARG_00.setvalue "dbvarlist" 
		
		require main.vl_mvar_ts
		call sg__ARG_01.setvalue class main.vl_mvar_ts.value

		put /program sg__do_output_sub
	}
	if main.rb_k {
		call sg__PARAM2.setvalue "SetStyle"
		call sg__ARG_00.setvalue "mtool.k" 
		call sg__ARG_01.setvalue class main.sp_k.value
		put /program sg__do_output_sub
	}

	if ! main.ck_makegl.isdefault() {
		call sg__PARAM2.setvalue "SetStyle"
		call sg__ARG_00.setvalue "mtool.isglm"
		if main.ck_makegl {
			call sg__ARG_01.setvalue "yes"
		}
		else {
			call sg__ARG_01.setvalue "no"
		}
		put /program sg__do_output_sub
	}

	if main.cb_flink.isenabled() & !main.cb_flink.isdefault() {
		call sg__PARAM2.setvalue "SetStyle"
		call sg__ARG_00.setvalue "mtool.familylink" 
		call sg__ARG_01.setvalue class main.cb_flink.value
		put /program sg__do_output_sub
	}
	
	if ! main.ck_cons.isdefault() {
		call sg__PARAM2.setvalue "SetStyle"
		call sg__ARG_00.setvalue "mtool.cons"
		if main.ck_cons {
			call sg__ARG_01.setvalue "2"
		}
		else {
			call sg__ARG_01.setvalue "1"
		}
		put /program sg__do_output_sub
	}	

	if ! main.cb_dir.isdefault() {
		call sg__PARAM2.setvalue "SetStyle"
		call sg__ARG_00.setvalue "mtool.direction"
		call sg__ARG_01.setvalue class main.cb_dir.value
		put /program sg__do_output_sub
	}
END

/*****************************************************************************/

SCRIPT opts_PREINIT
BEGIN
	create STRING pathdist
	create STRING exoggap

	program opts_get_defaults
END

SCRIPT opts_POSTINIT
BEGIN
	program opts_initialize_controls
END

PROGRAM opts_get_defaults
BEGIN
	call pathdist.setvalue class .__SEMG.dbsettings.pathdist
	call pathdist.withvalue opts.cb_dist1.setdefault "@"

	call exoggap.setvalue class .__SEMG.dbsettings.exoggap
	call exoggap.withvalue opts.cb_dist2.setdefault "@"
END

PROGRAM opts_initialize_controls
BEGIN
	call opts.cb_dist1.setvalue class pathdist.value
	call opts.cb_dist2.setvalue class exoggap.value
END

DIALOG opts, tabtitle(resource LBL_DISTANCES)
BEGIN
  GROUPBOX gb_distance	_lft	_top	_iwd	_ht5h,		///
	label(resource LBL_DISTANCES)
  TEXT     tx_dist1	_ilft	_ss	200	.,		///
	label(resource SG__MEASUREMENT_TOOL_OPTS_TX_DIST1) right
  COMBOBOX cb_dist1	+205	@	50	.,		///
	dropdown contents(__SEM_STYLES_LABEL.size)		///
	values(__SEM_STYLES.size)
  TEXT     tx_dist1_m	+55	@	50	.,		///
	label(resource LBL_PAREN_IN_PAREN)

  TEXT     tx_dist2	_ilft	_mls	200	.,		///
	label(resource SG__MEASUREMENT_TOOL_OPTS_TX_DIST2) right
  COMBOBOX cb_dist2	+205	@	50	.,		///
	dropdown contents(__SEM_STYLES_LABEL.size)		///
	values(__SEM_STYLES.size)
  TEXT     tx_dist2_m	+55	@	50	.,		///
	label(resource LBL_PAREN_IN_PAREN)
END

PROGRAM opts_output
BEGIN
	call program opts_get_defaults

	if ! opts.cb_dist1.isdefault() {
		call sg__PARAM2.setvalue "SetStyle"
		call sg__ARG_00.setvalue "mtool.pathdist"
		call sg__ARG_01.setvalue class opts.cb_dist1.value
		put /program sg__do_output_sub
	}
	if ! opts.cb_dist2.isdefault() {
		call sg__PARAM2.setvalue "SetStyle"
		call sg__ARG_00.setvalue "mtool.exoggap"
		call sg__ARG_01.setvalue class opts.cb_dist2.value
		put /program sg__do_output_sub
	}
END

/*****************************************************************************/

SCRIPT conn_PREINIT
BEGIN
	create STRING sConnAttachMethod

	program conn_get_defaults
END

SCRIPT conn_POSTINIT
BEGIN
	program conn_initialize_controls
END

PROGRAM conn_get_defaults
BEGIN
	call sConnAttachMethod.setvalue class .__SEMG.dbsettings.attachmeth
	if (sConnAttachMethod.iseq("1")) {
		call conn.rb_intersect.setdefault 1
		call conn.rb_midpoint.setdefault 0
	}
	else {
		call conn.rb_intersect.setdefault 0
		call conn.rb_midpoint.setdefault 1
	}
END

PROGRAM conn_initialize_controls
BEGIN
	if (sConnAttachMethod.iseq("1")) {
		call conn.rb_intersect.seton
	}
	else {
		call conn.rb_midpoint.seton
	}
END

DIALOG conn, tabtitle(resource LBL_CONNECTIONS)
BEGIN
  GROUPBOX gb_attach		_lft	_top	_iwd	_ht4h,		///
	label(resource SG__MEASUREMENT_TOOL_CONN_GB_ATTACH)

  RADIO    rb_intersect		_ilft	_ss	_ibwd	.,		///
	first label(resource LBL_ATTACH_AT_INTERSECTION_OF_LINE_AND_BOX_CENTER)

  RADIO    rb_midpoint		@	_ss	@	.,		///
	last label(resource LBL_ATTACH_AT_MIDPOINT_OF_BOX_EDGE)
END

PROGRAM conn_output
BEGIN
	call program opts_get_defaults

	if ! conn.rb_intersect.isdefault() {
		call sg__PARAM2.setvalue "SetStyle"
		call sg__ARG_00.setvalue "mtool.attachmeth"
		call sg__ARG_01.setvalue "1"
		put /program sg__do_output_sub
	}
	else { /* else if */
		if ! conn.rb_midpoint.isdefault() {
			call sg__PARAM2.setvalue "SetStyle"
			call sg__ARG_00.setvalue "mtool.attachmeth"
			call sg__ARG_01.setvalue "2"
			put /program sg__do_output_sub
		}
	}
END

/*****************************************************************************/

PROGRAM command
BEGIN
	call sg__PARAM1.setvalue class OBJ.value
	
	/* Signal to mata that this dialog interaction is done
	 * and to start processing this signal. From the dialog
	 * point of view this is BeginSet. */
	call sg__PARAM2.setvalue "AddMeasurementDlgDone" 
	put /program sg__do_output_sub
	
	put /program main_output
	put /program opts_output
	put /program conn_output

	call sg__PARAM2.setvalue "EndSet"
	call sg__DESCPT.setvalue "add measurement component"
	put /program sg__do_output_sub
END
