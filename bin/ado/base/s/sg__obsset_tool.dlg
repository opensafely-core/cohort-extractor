/*
  sg__obsset_tool.dlg

*!  VERSION 1.2.4  18mar2018

*/

VERSION 14.0
MODAL
SYNCHRONOUS_ONLY

INCLUDE _std_msmall
DEFINE _dlght 260
POSITION . . _dlgwd _dlght

OK ok1, label(resource LBL_BU_OK) target(stata hidden)
CANCEL can1, label(resource LBL_BU_CANCEL)

DEFINE _clwd	15
DEFINE _wd	160
DEFINE _sep	+165
DEFINE _wd2	110
DEFINE _sep2	+115
DEFINE _cbwd	100
DEFINE _cbsep	+105

INCLUDE sg__common_output 		/* routines necessary for output */

SCRIPT PREINIT
BEGIN
	script sg__common_output_init 	/* initialize output globals */

	create STRING OBJ
	program setupOBJECT

	create DOUBLE index
	create STRING sTemp
	create BOOLEAN bGSEM		/* gsem mode enabled 	*/
	create BOOLEAN isInit
	isInit.setfalse

	program global_get_defaults
	setscale_hadj resource SG__OBSSET_TOOL_DLG_HSCALE
END

PROGRAM global_get_defaults
BEGIN
	call bGSEM.setfalse
	call sTemp.setvalue class .__SEMG.dbsettings.estmode
	if (sTemp.iseq("1")) { 
		call bGSEM.settrue
	}
END

SCRIPT POSTINIT
BEGIN
	isInit.settrue
END

PROGRAM setupOBJECT
BEGIN
	if ! __MESSAGE {
		stopbox stop resource LBL_MSGBOX_OBJECT_NOT_FOUND
// An unexpected error has occurred. Object not found.
		exit 198
	}
	call OBJ.setvalue class __MESSAGE.value
END

SCRIPT main_PREINIT
BEGIN
	create STRING sOrient
	create STRING sK
	create STRING sVarlist
	create STRING sFlink
	create STRING sGLM
	create ARRAY vlist_array
	create STRING sLevels

	program main_get_defaults
END

SCRIPT main_POSTINIT
BEGIN
	program main_initialize_controls
END

PROGRAM main_get_defaults
BEGIN
	call sOrient.setvalue class .__SEMG.dbsettings.orient
	call sOrient.withvalue main.cb_orient.setdefault "@"

	call sK.setvalue class .__SEMG.dbsettings.k
	call sK.withvalue main.sp_k.setdefault @

	call sVarlist.setvalue class .__SEMG.dbsettings.varlist
	call sVarlist.withvalue main.vl_vars_ts.setdefault "@"
	call sVarlist.withvalue main.vl_vars_fvts.setdefault "@"
	call sVarlist.withvalue main.cb_variable.setdefault "@"

	call sLevels.setvalue class .__SEMG.dbsettings.levellist
	call sLevels.withvalue main.ed_levels.setdefault "@"

	call sFlink.setvalue class .__SEMG.dbsettings.familylink
	call sFlink.withvalue main.cb_flink.setdefault "@"

	call sGLM.setvalue class .__SEMG.dbsettings.isglm
	if (sGLM) {
		if (sGLM.iseq("yes")) {
			call main.ck_makegl.setdefault 1
		}
		else {
			call main.ck_makegl.setdefault 0
		}
	}
END

PROGRAM main_initialize_controls
BEGIN
	call main.cb_orient.setvalue class sOrient.value
	call main.sp_k.setvalue class sK.value
	call main.vl_vars_ts.setvalue class sVarlist.value
	call main.vl_vars_fvts.setvalue class sVarlist.value
	call main.cb_variable.setvalue class sVarlist.value
	call main.ed_levels.setvalue class sLevels.value
	call main.cb_flink.setvalue class sFlink.value

	if (bGSEM) {
		call main.ck_makegl.enable
		if (sGLM) {
			if (sGLM.iseq("yes")) {
				call main.ck_makegl.seton
			}
			else {
				call main.ck_makegl.setoff
			}
		}
	}
	else {
		call main.ck_makegl.setoff
		call main.ck_makegl.disable
	}

	call sTemp.storeDialogClassName
	put "sg__variables_vlist getVars "
	put "." sTemp ".vlist_array"
	stata hidden immediate
	call main.cb_variable.repopulate
	call main.ed_levels.setvalue ""
END

PROGRAM check_mode
BEGIN
	if main.rb_vars {
		call main.tx_variables.show
		if (bGSEM) {
			call main.vl_vars_ts.hide
			call main.vl_vars_fvts.show
		}
		else {
			call main.vl_vars_ts.show
			call main.vl_vars_fvts.hide
		}
		call main.tx_k.hide
		call main.sp_k.hide
	}
	if main.rb_k {
		call main.tx_k.show
		call main.sp_k.show
		call main.tx_variables.hide
		call main.vl_vars_ts.hide
		call main.vl_vars_fvts.hide
	}
END

PROGRAM check_makegl
BEGIN
	if main.ck_makegl {
		call main.tx_flink.enable
		call main.cb_flink.enable
	}
	else {
		call main.tx_flink.disable
		call main.cb_flink.disable
	}
	call program check_flink
END

PROGRAM check_flink
BEGIN
	if main.cb_flink.isenabled() 				///
			& main.cb_flink.iseq("multinomial logit") {
		call main.tx_variables.setlabel resource LBL_VARIABLE
		call main.rb_vars.seton
		call main.rb_vars.disable
		call main.rb_k.disable
		call main.cb_variable.show
		call main.tx_levels.show
		call main.ed_levels.show
		call main.vl_vars_ts.hide
		call main.vl_vars_fvts.hide
	}
	else {
		call main.tx_variables.setlabel resource LBL_VARIABLES
		call main.rb_vars.enable
		call main.rb_k.enable
		call main.cb_variable.hide
		call main.tx_levels.hide
		call main.ed_levels.hide
		if main.rb_vars {
			if (bGSEM) {
				call main.vl_vars_ts.hide
				call main.vl_vars_fvts.show
			}
			else {
				call main.vl_vars_ts.show
				call main.vl_vars_fvts.hide
			}
		}
	}
END

PROGRAM get_levels
BEGIN
	if isInit & main.ed_levels.isvisible() {
		call sTemp.storeDialogClassName
		put "sg__variables_vlist getLevelsStr "
		put `"""' main.cb_variable `"""' " "
		put "." sTemp ".sLevels.value"
		stata hidden immediate
		
		call main.ed_levels.setvalue class sLevels.value
	}
END

DIALOG main, label(resource SG__OBSSET_TOOL_DLG_TITLE) tabtitle(resource LBL_TAB_MAIN)
BEGIN
  GROUPBOX gb_variables	_lft	_top	_iwd	_ht21,		///
	label(resource LBL_GB_VARIABLES)

  RADIO    rb_vars	_ilft	_ss	_ibwd	., first	///
	label(resource LBL_SELECT_VARIABLES)			///
	onclickon(program check_mode)
  RADIO    rb_k		@	_ss	@	., last		///
	label(resource LBL_SPECIFY_NUMBER_OF_VARIABLES)		///
	onclickon(program check_mode)

  TEXT     tx_variables	_ilft	_ms	_ibwd	.,		///
	label(resource LBL_VARIABLES)
DEFINE y @y
  VARLIST  vl_vars_ts	@	_ss	_ibwd	.,		///
	label(resource LBL_VARIABLES) ts nomemory
  VARLIST  vl_vars_fvts	@	@	@	.,		///
	label(resource LBL_VARIABLES) fv ts nomemory
  COMBOBOX cb_variable	@	@	_vnwd	.,		///
  	nomemory label(resource LBL_VN_VARIABLE)		///
	dropdown contents(vlist_array) onselchange(program get_levels)
  TEXT     tx_levels	_vlx	y	_ivlwd	.,		///
	label(resource SG__OBSSET_TOOL_MAIN_TX_LEVELS)
  EDIT     ed_levels	@	_ss	@	.,
  TEXT     tx_k		_ilft	y	_ibwd	.,		///
	label(resource LBL_NUMBER_OF_VARIABLES) 
  SPINNER  sp_k		@	_ss	_spwd	.,		///
	nomemory min(1) max(40)

  CHECKBOX ck_makegl	_ilft	+35	_ibwd	_ht2h,		///
	label(resource SG__OBSSET_TOOL_MAIN_CK_MAKEGL) groupbox	///
	onclickon(program check_makegl) onclickoff(program check_makegl)
  TEXT     tx_flink	+10	_ss	95	., right	///
	label(resource LBL_FAMILY_LINK)
  COMBOBOX cb_flink	+100	@	150	.,		///
	dropdownlist 						///
	contents(__SEM_STYLES_LABEL.familylink)			///
	values(__SEM_STYLES.familylink)				///
	onselchange(program check_flink)

  TEXT     tx_orient	_ilft	+45	_ibwd	.,		///
	label(resource LBL_ORIENTATION) 
  COMBOBOX cb_orient	@	_ss	120	.,		///
	dropdownlist contents(__SEM_STYLES_LABEL.orient)	///
	values(__SEM_STYLES.orient)
END

PROGRAM main_output
BEGIN
	call program main_get_defaults

	if main.cb_flink.isenabled() & !main.cb_flink.isdefault() {
		call sg__PARAM2.setvalue "SetStyle"
		call sg__ARG_00.setvalue "obssettool.familylink" 
		call sg__ARG_01.setvalue class main.cb_flink.value
		put /program sg__do_output_sub
	}

	if main.rb_vars.isenabled() & main.rb_vars {
		call sg__PARAM2.setvalue "SetStyle"
		call sg__ARG_00.setvalue "obssettool.varlist" 

		if (main.vl_vars_ts.isvisible()) {
			require main.vl_vars_ts
			call sg__ARG_01.setvalue class main.vl_vars_ts.value
		}
		else {
			require main.vl_vars_fvts
			call sg__ARG_01.setvalue class main.vl_vars_fvts.value
		}
		put /program sg__do_output_sub
	}
	if  main.rb_vars.isenabled() & main.rb_k {
		call sg__PARAM2.setvalue "SetStyle"
		call sg__ARG_00.setvalue "obssettool.k" 
		call sg__ARG_01.setvalue class main.sp_k.value
		put /program sg__do_output_sub
	}

	if main.cb_variable.isvisible() {
		require main.cb_variable
	}
	if main.cb_variable.isvisible() & !main.cb_variable.isdefault() {
		require main.cb_variable
		call sg__PARAM2.setvalue "SetStyle"
		call sg__ARG_00.setvalue "obssettool.varlist" 
		call sg__ARG_01.setvalue class main.cb_variable.value
		put /program sg__do_output_sub
	}

	if main.ed_levels.isvisible() & !main.ed_levels.isdefault() {
		call sg__PARAM2.setvalue "SetStyle"
		call sg__ARG_00.setvalue "obssettool.levellist" 
		call sg__ARG_01.setvalue class main.ed_levels.value
		put /program sg__do_output_sub
	}

	if ! main.ck_makegl.isdefault() {
		call sg__PARAM2.setvalue "SetStyle"
		call sg__ARG_00.setvalue "obssettool.isglm"
		if main.ck_makegl {
			call sg__ARG_01.setvalue "yes"
		}
		else {
			call sg__ARG_01.setvalue "no"
		}
		put /program sg__do_output_sub
	}

	if ! main.cb_orient.isdefault() {
		call sg__PARAM2.setvalue "SetStyle"
		call sg__ARG_00.setvalue "obssettool.orient"
		call sg__ARG_01.setvalue class main.cb_orient.value
		put /program sg__do_output_sub
	}
END

/*****************************************************************************/

SCRIPT opts_PREINIT
BEGIN
	create STRING sGap

	program opts_get_defaults
END

SCRIPT opts_POSTINIT
BEGIN
	program opts_initialize_controls
END

PROGRAM opts_get_defaults
BEGIN
	call sGap.setvalue class .__SEMG.dbsettings.gap
	call sGap.withvalue opts.cb_dist1.setdefault "@"
END

PROGRAM opts_initialize_controls
BEGIN
	call opts.cb_dist1.setvalue class sGap.value
END

DIALOG opts, tabtitle(resource LBL_DISTANCES)
BEGIN
  GROUPBOX gb_distance	_lft	_top	_iwd	_ht2h,		///
	label(resource LBL_DISTANCES)
  TEXT     tx_dist1	_ilft	_ss	200	.,		///
	label(resource SG__OBSSET_TOOL_OPTS_TX_DIST1) right
  COMBOBOX cb_dist1	+205	@	60	.,		///
	dropdown contents(__SEM_STYLES_LABEL.size)		///
	values(__SEM_STYLES.size)
  TEXT     tx_dist1_m	+65	@	50	.,		///
	label(resource LBL_PAREN_IN_PAREN)
END

PROGRAM opts_output
BEGIN
	call program opts_get_defaults

	if ! opts.cb_dist1.isdefault() {
		call sg__PARAM2.setvalue "SetStyle"
		call sg__ARG_00.setvalue "obssettool.gap"
		call sg__ARG_01.setvalue class opts.cb_dist1.value
		put /program sg__do_output_sub
	}
END

/*****************************************************************************/

PROGRAM command
BEGIN
	call sg__PARAM1.setvalue class OBJ.value
	
	/* Signal to mata that this dialog interaction is done
	 * and to start processing this signal. From the dialog
	 * point of view this is BeginSet. */
	call sg__PARAM2.setvalue "AddObsSetDlgDone" 
	put /program sg__do_output_sub
	
	put /program main_output
	put /program opts_output

	call sg__PARAM2.setvalue "EndSet"
	call sg__DESCPT.setvalue "add observed variables set"
	put /program sg__do_output_sub
END
