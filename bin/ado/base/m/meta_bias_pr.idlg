/*
	meta_bias_pr.idlg

*!  VERSION 1.0.1  29may2019

*/


/* -------------------- Publication Bias Button -------------------- */

PROGRAM bias_funnel_graphopts 
BEGIN
	if meta.rb_publ_funn_standard {
		call create CHILD meta_funnel_graph AS FunnelGraphOptsStd, message("std")
		if ! _rc {
			call FunnelGraphOptsStd.setExitString FunnelGraphOptsStdResults
			call FunnelGraphOptsStd.setExitAction "program bias_funnel_graphopts_done"
		}
	}
	if meta.rb_publ_funn_contour {
		call create CHILD meta_funnel_graph AS FunnelGraphOptsCon, message("con")
		if ! _rc {
			call FunnelGraphOptsCon.setExitString FunnelGraphOptsConResults
			call FunnelGraphOptsCon.setExitAction "program bias_funnel_graphopts_done"
		}
	}
END

PROGRAM bias_funnel_graphopts_done
BEGIN
	call create STRING STMP
	if meta.rb_publ_funn_standard {
		if FunnelGraphOptsStdResults {
			call STMP.setvalue resource LBL_GRAPH_OPTIONS
			call STMP.append " *"
			call STMP.withvalue meta.bu_publ_funn_graphopts.setlabel "@"
		}
		else {
			call STMP.setvalue resource LBL_GRAPH_OPTIONS
			call STMP.append "  "
			call STMP.withvalue meta.bu_publ_funn_graphopts.setlabel "@"
		}
	}
	if meta.rb_publ_funn_contour {
		if FunnelGraphOptsConResults {
			call STMP.setvalue resource LBL_GRAPH_OPTIONS
			call STMP.append " *"
			call STMP.withvalue meta.bu_publ_funn_graphopts.setlabel "@"
		}
		else {
			call STMP.setvalue resource LBL_GRAPH_OPTIONS
			call STMP.append "  "
			call STMP.withvalue meta.bu_publ_funn_graphopts.setlabel "@"
		}
	}
END

PROGRAM bias_funnel_contour
BEGIN
	if meta.ck_publ_funn_lines {
		call create CHILD gr_line_properties AS FunnelContourLines
		if ! _rc {
			call FunnelContourLines.setExitString FunnelContourLinesResults
			call FunnelContourLines.setExitAction "program bias_funnel_contour_done"
		}
	}
	else {
		call create CHILD gr_area_properties AS FunnelContourArea
		if ! _rc {
			call FunnelContourArea.setExitString FunnelContourAreaResults
			call FunnelContourArea.setExitAction "program bias_funnel_contour_done"
		}
	}
	
END

PROGRAM bias_funnel_contour_done
BEGIN
	call create STRING STMP
	if meta.ck_publ_funn_lines {
		if FunnelContourLinesResults {
			call STMP.setvalue resource LBL_CONTOUR_GRAPH_OPTS
			call STMP.append " *"
			call STMP.withvalue meta.bu_publ_funn_contourgraph.setlabel "@"
		}
		else {
			call STMP.setvalue resource LBL_CONTOUR_GRAPH_OPTS
			call STMP.append "  "
			call STMP.withvalue meta.bu_publ_funn_contourgraph.setlabel "@"
		}
	}
	else {
		if FunnelContourAreaResults {
			call STMP.setvalue resource LBL_CONTOUR_GRAPH_OPTS
			call STMP.append " *"
			call STMP.withvalue meta.bu_publ_funn_contourgraph.setlabel "@"
		}
		else {
			call STMP.setvalue resource LBL_CONTOUR_GRAPH_OPTS
			call STMP.append "  "
			call STMP.withvalue meta.bu_publ_funn_contourgraph.setlabel "@"
		}
	}
END

PROGRAM bias_funnel_by
BEGIN
	call create CHILD gr_metaby AS FunnelBy
	if ! _rc {
		call FunnelBy.setExitString FunnelByResults
		call FunnelBy.setExitAction "program bias_funnel_by_done"
	}
END

PROGRAM bias_funnel_by_done
BEGIN
	call create STRING STMP
	if FunnelByResults {
		call STMP.setvalue resource LBL_BY_OPTS
		call STMP.append " *"
		call STMP.withvalue meta.bu_publ_funn_by.setlabel "@"
	}
	else {
		call STMP.setvalue resource LBL_BY_OPTS
		call STMP.append "  "
		call STMP.withvalue meta.bu_publ_funn_by.setlabel "@"
	}
END

PROGRAM bias_reopts
BEGIN
	call create CHILD meta_reopts AS BiasReopts, message("bias")
	if ! _rc {
		call BiasReopts.setExitString BiasReoptsResults
		call BiasReopts.setExitAction "program bias_reopts_done"
	}
END

PROGRAM bias_reopts_done
BEGIN
	call create STRING STMP
	if BiasReoptsResults {
		call STMP.setvalue resource LBL_RE_OPTIONS
		call STMP.append " *"
		call STMP.withvalue meta.bu_publ_bias_reopts.setlabel "@"
	}
	else {
		call STMP.setvalue resource LBL_RE_OPTIONS
		call STMP.append "  "
		call STMP.withvalue meta.bu_publ_bias_reopts.setlabel "@"
	}
END

PROGRAM bias_tf_funnelplot
BEGIN
	call create CHILD meta_funnel_plot_opts_child AS TrimfillFunnel
	if ! _rc {
		call TrimfillFunnel.setExitString TrimfillFunnelResults
		call TrimfillFunnel.setExitAction "program bias_tf_funnelplot_done"
	}
END

PROGRAM bias_tf_funnelplot_done
BEGIN
	call create STRING STMP
	if TrimfillFunnelResults {
		call STMP.setvalue resource LBL_FUNNEL_PLOT_OPTS
		call STMP.append " *"
		call STMP.withvalue meta.bu_publ_tf_funnel.setlabel "@"
	}
	else {
		call STMP.setvalue resource LBL_FUNNEL_PLOT_OPTS
		call STMP.append "  "
		call STMP.withvalue meta.bu_publ_tf_funnel.setlabel "@"
	}
END

PROGRAM bias_tf_dispopts
BEGIN
	call create CHILD fmt_coef_table_reporting AS TrimfillDisopts, message("-cformat_only-")
	call TrimfillDisopts.setExitString TrimfillDisoptsResults
	call TrimfillDisopts.setExitAction "program bias_tf_dispopts_done"
END

PROGRAM bias_tf_dispopts_done
BEGIN
	call create STRING STMP
	if TrimfillFunnelResults {
		call STMP.setvalue resource LBL_DISPLAY_OPTIONS
		call STMP.append "  "
		call STMP.withvalue meta.bu_publ_tf_opt_display.setlabel "@"
	}
	else {
		call STMP.setvalue resource LBL_DISPLAY_OPTIONS
		call STMP.append "  "
		call STMP.withvalue meta.bu_publ_tf_opt_display.setlabel "@"
	}
END


PROGRAM bias_show
BEGIN
	if meta.btn_bias {
		call meta.gb_publ_tab.show
		call meta.rb_publ_funnel.show
		call meta.rb_publ_bias.show
		call meta.rb_publ_trimfill.show
		call meta.bu_publ_submit.show
		if meta.rb_publ_bias {
			call program publ_bias_show
		}
		if meta.rb_publ_trimfill {
			call program publ_tf_show
		}
		if meta.rb_publ_funnel {
			call program publ_funnel_show
		}
	}
END

SCRIPT bias_hide
BEGIN
	meta.gb_publ_tab.hide
	meta.rb_publ_funnel.hide
	meta.rb_publ_bias.hide
	meta.rb_publ_trimfill.hide
	meta.bu_publ_submit.hide
	program publ_bias_hide
	program publ_tf_hide
	program publ_funnel_hide
END

PROGRAM publ_bias_show
BEGIN
	call program publ_tf_hide
	call program publ_funnel_hide
	call program publ_bias_hide
	
	call meta.rb_publ_bias_main.show
	call meta.rb_publ_bias_ifin.show
	call meta.rb_publ_bias_maxim.show
	if meta.rb_publ_bias_main {
		call program publ_bias_main_show
		call program publ_bias_set_status
	}
	if meta.rb_publ_bias_ifin {
		call program publ_bias_ifin_show
	}
	if meta.rb_publ_bias_maxim {
		call program publ_bias_maxim_show
	}
END

PROGRAM publ_bias_disable_moderators
BEGIN
	call meta.gb_publ_bias_moderators.disable
	call meta.tx_publ_bias_moderators.disable
	call meta.vl_publ_bias_moderators.disable
END

PROGRAM publ_bias_enable_moderators
BEGIN
	call meta.gb_publ_bias_moderators.enable
	call meta.tx_publ_bias_moderators.enable
	call meta.vl_publ_bias_moderators.enable
END

PROGRAM publ_bias_disable_model
BEGIN
	call meta.gb_publ_bias_main.disable
	call meta.rb_publ_bias_declared.disable
	call meta.rb_publ_bias_remethod.disable
	call meta.tx_publ_bias_method.disable
	call meta.rb_publ_bias_common.disable
	call meta.cb_publ_bias_remethod.disable
	call meta.bu_publ_bias_reopts.disable
	call meta.rb_publ_bias_fixed.disable
END

PROGRAM publ_bias_enable_model
BEGIN
	call meta.gb_publ_bias_main.enable
	call meta.rb_publ_bias_declared.enable
	call meta.rb_publ_bias_remethod.enable
	call meta.tx_publ_bias_method.enable
	call meta.rb_publ_bias_common.enable
	call meta.cb_publ_bias_remethod.enable
	call meta.bu_publ_bias_reopts.enable
	call meta.rb_publ_bias_fixed.enable
END

PROGRAM publ_bias_set_status
BEGIN
	call program publ_bias_enable_moderators
	
	if meta.cb_publ_bias_test.equals("begg") | ///
	   meta.rb_publ_bias_common {
		call program publ_bias_disable_moderators
	}
	if meta.ck_publ_bias_trad & ///
	   meta.ck_publ_bias_trad.isenabled() {
		call program publ_bias_disable_moderators
	}

	call meta.ck_publ_bias_tdis.enable
	call meta.ck_publ_bias_multi.enable
	
	if (meta.rb_publ_bias_fixed | ///
		(meta.rb_publ_bias_declared & m_model.equals("fixed"))) {
		call meta.ck_publ_bias_trad.enable
		if meta.ck_publ_bias_trad {
			call meta.ck_publ_bias_multi.disable
			call meta.ck_publ_bias_tdis.disable
		}
	}
	else {
		call meta.ck_publ_bias_trad.disable
		call meta.ck_publ_bias_multi.disable
	}
	
	if meta.cb_publ_bias_test.equals("begg") {
		call meta.ck_publ_bias_tdis.disable
		call meta.ck_publ_bias_trad.disable
		call meta.ck_publ_bias_multi.disable
		call program publ_bias_disable_model
	}
	else {
		call program publ_bias_enable_model
	}
	
	if meta.rb_publ_bias_declared {
		call meta.tx_publ_bias_method.hide
		call meta.cb_publ_bias_remethod.hide
		call meta.bu_publ_bias_reopts.hide
	}
	else {
		call meta.tx_publ_bias_method.show
		call meta.cb_publ_bias_remethod.show
	}

	if meta.rb_publ_bias_remethod & ! meta.cb_publ_bias_test.equals("begg"){
		call meta.tx_publ_bias_method.enable
		call meta.cb_publ_bias_remethod.enable
		call meta.cb_publ_bias_remethod.setcontentslist re_method
		call meta.cb_publ_bias_remethod.setvalueslist re_method_vals
		call meta.bu_publ_bias_reopts.show
		
		call meta.cb_publ_bias_remethod.repopulate
		call meta.cb_publ_bias_remethod.setvalue "reml"
		if meta.ck_publ_bias_tdis & meta.ck_publ_bias_tdis.isenabled() {
			call meta.bu_publ_bias_reopts.disable
		}
		
	}
	else {
		call meta.tx_publ_bias_method.disable
		call meta.cb_publ_bias_remethod.disable
		call meta.cb_publ_bias_remethod.setcontentslist cefe_method_fake
		call meta.cb_publ_bias_remethod.setvalueslist cefe_method_vals_fake
		call meta.bu_publ_bias_reopts.hide
		
		call meta.cb_publ_bias_remethod.repopulate
		call meta.cb_publ_bias_remethod.setvalue "invvariance"
	}
END

PROGRAM publ_bias_test_change
BEGIN
	call program publ_bias_set_status
END

PROGRAM publ_bias_rb_change
BEGIN
	call program publ_bias_set_status
END

PROGRAM publ_bias_ifin_show
BEGIN
	call meta.tx_publ_bias_if.show
	call meta.ex_publ_bias_if.show
	call meta.ck_publ_bias_in.show
	call meta.tx_publ_bias_from.show
	call meta.sp_publ_bias_from.show
	call meta.tx_publ_bias_to.show
	call meta.sp_publ_bias_to.show
	call program publ_bias_ifin_in
END

SCRIPT publ_bias_ifin_hide
BEGIN
	meta.tx_publ_bias_if.hide
	meta.ex_publ_bias_if.hide
	meta.ck_publ_bias_in.hide
	meta.tx_publ_bias_from.hide
	meta.sp_publ_bias_from.hide
	meta.tx_publ_bias_to.hide
	meta.sp_publ_bias_to.hide
END

PROGRAM publ_bias_ifin_in
BEGIN
	if meta.ck_publ_bias_in {
		call meta.tx_publ_bias_from.enable
		call meta.sp_publ_bias_from.enable
		call meta.tx_publ_bias_to.enable
		call meta.sp_publ_bias_to.enable
	}
	else {
		call meta.tx_publ_bias_from.disable
		call meta.sp_publ_bias_from.disable
		call meta.tx_publ_bias_to.disable
		call meta.sp_publ_bias_to.disable
	}
END

PROGRAM publ_bias_main_show
BEGIN
	call meta.tx_publ_bias_test.show
	call meta.cb_publ_bias_test.show
	call meta.gb_publ_bias_moderators.show
	call meta.tx_publ_bias_moderators.show
	call meta.vl_publ_bias_moderators.show
	
	call meta.gb_publ_bias_main.show
	call meta.rb_publ_bias_declared.show
	call meta.rb_publ_bias_remethod.show
	call meta.tx_publ_bias_method.show
	call meta.bu_publ_bias_reopts.show
	call meta.cb_publ_bias_remethod.show
	call meta.rb_publ_bias_common.show
	call meta.rb_publ_bias_fixed.show
	call meta.ck_publ_bias_multi.show
	call meta.ck_publ_bias_tdis.show
	call meta.ck_publ_bias_trad.show
	call meta.ck_publ_bias_detail.show
	call meta.ck_publ_bias_nometashow.show
END

PROGRAM publ_bias_maxim_show
BEGIN
	call meta.gb_publ_bias_maxim.show
	call meta.sp_publ_bias_maxim_iter.show
	call meta.tx_publ_bias_maxim_iter.show
	call meta.ck_publ_bias_maxim_trace.show
	call meta.gb_publ_bias_maxim_tol.show
	call meta.ed_publ_bias_maxim_tol.show
	call meta.tx_publ_bias_maxim_tol.show
	call meta.ed_publ_bias_maxim_nrtol.show
	call meta.tx_publ_bias_maxim_nrtol.show
	call meta.ck_publ_bias_maxim_nonrtol.show
	call meta.tx_publ_bias_maxim_from.show
	call meta.ed_publ_bias_maxim_from.show
END

PROGRAM publ_bias_hide
BEGIN
	call meta.rb_publ_bias_main.hide
	call meta.rb_publ_bias_ifin.hide
	call meta.rb_publ_bias_maxim.hide
	call program publ_bias_main_hide
	call script publ_bias_ifin_hide
	call program publ_bias_maxim_hide
END

PROGRAM publ_bias_main_hide
BEGIN
	call meta.tx_publ_bias_test.hide
	call meta.cb_publ_bias_test.hide
	call meta.gb_publ_bias_moderators.hide
	call meta.tx_publ_bias_moderators.hide
	call meta.vl_publ_bias_moderators.hide
	
	call meta.gb_publ_bias_main.hide
	call meta.rb_publ_bias_declared.hide
	call meta.rb_publ_bias_remethod.hide
	call meta.tx_publ_bias_method.hide
	call meta.bu_publ_bias_reopts.hide
	call meta.cb_publ_bias_remethod.hide
	call meta.rb_publ_bias_common.hide
	call meta.rb_publ_bias_fixed.hide
	call meta.ck_publ_bias_multi.hide
	call meta.ck_publ_bias_tdis.hide
	call meta.ck_publ_bias_trad.hide
	call meta.ck_publ_bias_detail.hide
	call meta.ck_publ_bias_nometashow.hide
END

PROGRAM publ_bias_maxim_hide
BEGIN
	call meta.gb_publ_bias_maxim.hide
	call meta.sp_publ_bias_maxim_iter.hide
	call meta.tx_publ_bias_maxim_iter.hide
	call meta.ck_publ_bias_maxim_trace.hide
	call meta.gb_publ_bias_maxim_tol.hide
	call meta.ed_publ_bias_maxim_tol.hide
	call meta.tx_publ_bias_maxim_tol.hide
	call meta.ed_publ_bias_maxim_nrtol.hide
	call meta.tx_publ_bias_maxim_nrtol.hide
	call meta.ck_publ_bias_maxim_nonrtol.hide
	call meta.tx_publ_bias_maxim_from.hide
	call meta.ed_publ_bias_maxim_from.hide
END

PROGRAM publ_tf_show
BEGIN
	call program publ_bias_hide
	call program publ_funnel_hide
	call program publ_tf_hide
	
	call meta.rb_publ_tf_main.show
	call meta.rb_publ_tf_ifin.show
	call meta.rb_publ_tf_options.show
	call meta.rb_publ_tf_iter.show
	if meta.rb_publ_tf_main {
		call program publ_tf_main_show
	}
	if meta.rb_publ_tf_ifin {
		call program publ_tf_ifin_show
	}
	if meta.rb_publ_tf_options {
		call program publ_tf_options_show
	}
	if meta.rb_publ_tf_iter {
		call program publ_tf_iter_show
	}
	call program publ_tf_set_status
END

PROGRAM publ_tf_set_status
BEGIN
	if meta.ck_publ_tf_funnel {
		call meta.bu_publ_tf_funnel.enable
	}
	else {
		call meta.bu_publ_tf_funnel.disable
	}
END

PROGRAM publ_tf_main_show
BEGIN
	call meta.ck_publ_tf_estimator.show
	call meta.cb_publ_tf_estimator.show
	call meta.ck_publ_tf_left.show
	call meta.ck_publ_tf_right.show
	call meta.ck_publ_tf_funnel.show
	call meta.bu_publ_tf_funnel.show
END

PROGRAM publ_tf_ifin_show
BEGIN
	call meta.tx_publ_tf_if.show
	call meta.ex_publ_tf_if.show
	call meta.ck_publ_tf_in.show
	call meta.tx_publ_tf_from.show
	call meta.sp_publ_tf_from.show
	call meta.tx_publ_tf_to.show
	call meta.sp_publ_tf_to.show
	call program publ_tf_ifin_in
END

SCRIPT publ_tf_ifin_hide
BEGIN
	meta.tx_publ_tf_if.hide
	meta.ex_publ_tf_if.hide
	meta.ck_publ_tf_in.hide
	meta.tx_publ_tf_from.hide
	meta.sp_publ_tf_from.hide
	meta.tx_publ_tf_to.hide
	meta.sp_publ_tf_to.hide
END

PROGRAM publ_tf_ifin_in
BEGIN
	if meta.ck_publ_tf_in {
		call meta.tx_publ_tf_from.enable
		call meta.sp_publ_tf_from.enable
		call meta.tx_publ_tf_to.enable
		call meta.sp_publ_tf_to.enable
	}
	else {
		call meta.tx_publ_tf_from.disable
		call meta.sp_publ_tf_from.disable
		call meta.tx_publ_tf_to.disable
		call meta.sp_publ_tf_to.disable
	}
END

PROGRAM publ_tf_options_show
BEGIN
	call meta.cb_publ_tf_opt_ci.show
	call meta.tx_publ_tf_opt_ci.show
	call meta.cb_publ_tf_opt_eform.show
	call meta.ck_publ_tf_opt_nometashow.show
	call meta.bu_publ_tf_opt_display.show
	call program publ_tf_opt_eform_change
END

PROGRAM publ_tf_opt_eform_change
BEGIN
	if meta.cb_publ_tf_opt_eform.equals("eformstring") {
		call meta.ed_publ_tf_opt_eform.show
	}
	else {
		call meta.ed_publ_tf_opt_eform.hide
	}
END

PROGRAM publ_tf_iter_show
BEGIN
	call meta.gb_publ_tf_pooliter.show
	call meta.rb_publ_tf_same_pooliter.show
	call meta.rb_publ_tf_diff_pooliter.show
	call meta.sp_publ_tf_iter_iterations.show
	call meta.tx_publ_tf_iter_iterations.show
	call meta.ck_publ_tf_iter_log.show
	
	call program publ_tf_iter_same_show
	call program publ_tf_iter_diff_show
END

PROGRAM publ_tf_iter_same_show
BEGIN
	if meta.rb_publ_tf_same_pooliter {
		call program publ_tf_iter_diff_hide
		
		call meta.tx_publ_tf_same_t.show
		call meta.cb_publ_tf_same.show
	}
END

PROGRAM publ_tf_iter_diff_show
BEGIN
	if meta.rb_publ_tf_diff_pooliter {
		call program publ_tf_iter_same_hide
		
		call meta.tx_publ_tf_diff_iter.show
		call meta.cb_publ_tf_iter_diff_iter.show
		call meta.tx_publ_tf_diff_pool.show
		call meta.cb_publ_tf_iter_diff_pool.show
	}
END

PROGRAM publ_tf_hide
BEGIN
	call meta.rb_publ_tf_main.hide
	call meta.rb_publ_tf_ifin.hide
	call meta.rb_publ_tf_options.hide
	call meta.rb_publ_tf_iter.hide
	call program publ_tf_main_hide
	call script publ_tf_ifin_hide
	call program publ_tf_options_hide
	call program publ_tf_iter_hide
END

PROGRAM publ_tf_main_hide
BEGIN
	call meta.ck_publ_tf_estimator.hide
	call meta.cb_publ_tf_estimator.hide
	call meta.ck_publ_tf_left.hide
	call meta.ck_publ_tf_right.hide
	call meta.ck_publ_tf_funnel.hide
	call meta.bu_publ_tf_funnel.hide
END

PROGRAM publ_tf_options_hide
BEGIN
	call meta.cb_publ_tf_opt_ci.hide
	call meta.tx_publ_tf_opt_ci.hide
	call meta.cb_publ_tf_opt_eform.hide
	call meta.ed_publ_tf_opt_eform.hide
	call meta.ck_publ_tf_opt_nometashow.hide
	call meta.bu_publ_tf_opt_display.hide
END

PROGRAM publ_tf_iter_hide
BEGIN
	call meta.sp_publ_tf_iter_iterations.hide
	call meta.tx_publ_tf_iter_iterations.hide
	call meta.ck_publ_tf_iter_log.hide
	call meta.gb_publ_tf_pooliter.hide
	call meta.rb_publ_tf_same_pooliter.hide
	call meta.rb_publ_tf_diff_pooliter.hide
	
	call program publ_tf_iter_same_hide
	call program publ_tf_iter_diff_hide
END

PROGRAM publ_tf_iter_same_hide
BEGIN
	call meta.tx_publ_tf_same_t.hide
	call meta.cb_publ_tf_same.hide
END

PROGRAM publ_tf_iter_diff_hide
BEGIN
	call meta.tx_publ_tf_diff_iter.hide
	call meta.tx_publ_tf_diff_pool.hide
	call meta.cb_publ_tf_iter_diff_iter.hide
	call meta.cb_publ_tf_iter_diff_pool.hide
END


PROGRAM publ_funnel_show
BEGIN
	call program publ_funnel_hide
	call program publ_bias_hide
	call program publ_tf_hide
	
	call meta.rb_publ_funnel_main.show
	call meta.rb_publ_funnel_ifin.show
	call meta.rb_publ_funnel_model.show
	call meta.rb_publ_funnel_opt.show
	
	if meta.rb_publ_funnel_main {
		call program publ_funnel_main_show
	}
	if meta.rb_publ_funnel_ifin {
		call program publ_funnel_ifin_show
	}
	if meta.rb_publ_funnel_model {
		call program publ_funnel_model_show
	}
	if meta.rb_publ_funnel_opt {
		call program publ_funnel_opt_show
	}
	
	call program publ_funnel_set_status
END

PROGRAM publ_funnel_main_show
BEGIN
	call meta.gb_publ_funn.show
	call meta.rb_publ_funn_standard.show
	call meta.rb_publ_funn_contour.show
	
	call meta.gb_publ_funn_cont_opts.show
	call meta.tx_publ_funn_numl.show
	call meta.ed_publ_funn_numl.show
	call meta.ck_publ_funn_lines.show
	call meta.tx_publ_funn_sides.show
	call meta.cb_publ_funn_sides.show
	call meta.bu_publ_funn_contourgraph.show
END

SCRIPT publ_funnel_byon
BEGIN
	meta.tx_publ_funn_by.enable
	meta.vl_publ_funn_by.enable
	meta.bu_publ_funn_by.enable
END

SCRIPT publ_funnel_byoff
BEGIN
	meta.tx_publ_funn_by.disable
	meta.vl_publ_funn_by.disable
	meta.bu_publ_funn_by.disable
END

PROGRAM publ_funnel_set_status 
BEGIN
	call program bias_funnel_graphopts_done
	
	if meta.rb_publ_funn_standard {
		call program publ_funnel_main_cont_disable
		
		if meta.rb_publ_funnel_opt {
			call meta.cb_publ_funn_level.show
			call meta.tx_publ_funn_level.show
		}
		call meta.sp_publ_funn_n.setposition . 380
		call meta.tx_publ_funn_n.setposition . 380
		call meta.ck_publ_funn_nometashow.setposition . 415
		call meta.bu_publ_funn_graphopts.setposition . 445
		
		call meta.tx_publ_funn_n.setlabel resource LBL_NUM_PTS_AT_TO_EVAL_CI
	}
	
	if meta.rb_publ_funn_contour {
		call meta.gb_publ_funn_cont_opts.enable
		call meta.tx_publ_funn_numl.enable
		call meta.ed_publ_funn_numl.enable
		call meta.ck_publ_funn_lines.enable
		call meta.tx_publ_funn_sides.enable
		call meta.cb_publ_funn_sides.enable
		call meta.bu_publ_funn_contourgraph.enable
		
		if meta.rb_publ_funnel_opt {
			call meta.cb_publ_funn_level.hide
			call meta.tx_publ_funn_level.hide
		}
		
		call meta.sp_publ_funn_n.setposition . 345
		call meta.tx_publ_funn_n.setposition . 345
		call meta.ck_publ_funn_nometashow.setposition . 380
		call meta.bu_publ_funn_graphopts.setposition . 410
		
		call meta.tx_publ_funn_n.setlabel resource LBL_NUM_PTS_AT_TO_EVAL_CONTOURS
	}
END

PROGRAM publ_funnel_ifin_show
BEGIN
	call meta.tx_publ_funn_if.show
	call meta.ex_publ_funn_if.show
	call meta.ck_publ_funn_in.show
	call meta.tx_publ_funn_from.show
	call meta.sp_publ_funn_from.show
	call meta.tx_publ_funn_to.show
	call meta.sp_publ_funn_to.show
	call program publ_funnel_ifin_in
END

SCRIPT publ_funnel_ifin_hide
BEGIN
	meta.tx_publ_funn_if.hide
	meta.ex_publ_funn_if.hide
	meta.ck_publ_funn_in.hide
	meta.tx_publ_funn_from.hide
	meta.sp_publ_funn_from.hide
	meta.tx_publ_funn_to.hide
	meta.sp_publ_funn_to.hide
END

PROGRAM publ_funnel_ifin_in
BEGIN
	if meta.ck_publ_funn_in {
		call meta.tx_publ_funn_from.enable
		call meta.sp_publ_funn_from.enable
		call meta.tx_publ_funn_to.enable
		call meta.sp_publ_funn_to.enable
	}
	else {
		call meta.tx_publ_funn_from.disable
		call meta.sp_publ_funn_from.disable
		call meta.tx_publ_funn_to.disable
		call meta.sp_publ_funn_to.disable
	}
END

PROGRAM publ_funnel_model_show
BEGIN
	call meta.gb_publ_funn_model.show
	call meta.rb_publ_funn_declared.show
	call meta.rb_publ_funn_remethod.show
	call meta.rb_publ_funn_common.show
	call meta.rb_publ_funn_fixed.show
	call program publ_funn_tab_main_model_changed
END

PROGRAM publ_funn_tab_main_model_changed
BEGIN
	call meta.tx_publ_funn_method.hide
	call meta.cb_publ_funn_method.hide
	if meta.rb_publ_funn_remethod {
		call meta.tx_publ_funn_method.show
		call meta.cb_publ_funn_method.show
	}
	if meta.rb_publ_funn_common {
		call meta.tx_publ_funn_method.show
		call meta.cb_publ_funn_method.show
	}
	if meta.rb_publ_funn_fixed {
		call meta.tx_publ_funn_method.show
		call meta.cb_publ_funn_method.show
	}
END

PROGRAM publ_funn_main_model_changed
BEGIN
	call meta.tx_publ_funn_method.hide
	call meta.cb_publ_funn_method.hide
	if meta.rb_publ_funn_remethod {
		call meta.tx_publ_funn_method.show
		call meta.cb_publ_funn_method.show
		call meta.cb_publ_funn_method.enable

		call meta.cb_publ_funn_method.setcontentslist re_method
		call meta.cb_publ_funn_method.setvalueslist re_method_vals

		call meta.cb_publ_funn_method.repopulate
		call meta.cb_publ_funn_method.setvalue "reml"
	}
	if meta.rb_publ_funn_common {
		call meta.tx_publ_funn_method.show
		call meta.cb_publ_funn_method.show

		call meta.cb_publ_funn_method.setcontentslist cefe_method
		call meta.cb_publ_funn_method.setvalueslist cefe_method_vals

		call meta.cb_publ_funn_method.repopulate
		call meta.cb_publ_funn_method.setvalue "mhaenszel"
		call meta.cb_publ_funn_method.enable
	}
	if meta.rb_publ_funn_fixed {
		call meta.tx_publ_funn_method.show
		call meta.cb_publ_funn_method.show

		call meta.cb_publ_funn_method.setcontentslist cefe_method
		call meta.cb_publ_funn_method.setvalueslist cefe_method_vals

		call meta.cb_publ_funn_method.repopulate
		call meta.cb_publ_funn_method.setvalue "mhaenszel"
		call meta.cb_publ_funn_method.enable
	}
END

PROGRAM publ_funnel_opt_show
BEGIN
	call meta.tx_publ_funn_metric.show
	call meta.cb_publ_funn_metric.show
	call meta.ck_publ_funn_by.show
	call meta.tx_publ_funn_by.show
	call meta.vl_publ_funn_by.show
	call meta.bu_publ_funn_by.show
	call meta.ck_publ_funn_nometashow.show
	call meta.bu_publ_funn_graphopts.show
	call meta.sp_publ_funn_n.show
	call meta.tx_publ_funn_n.show
END

PROGRAM publ_funnel_hide
BEGIN
	call meta.rb_publ_funnel_main.hide
	call meta.rb_publ_funnel_ifin.hide
	call meta.rb_publ_funnel_model.hide
	call meta.rb_publ_funnel_opt.hide
	
	call program publ_funnel_main_hide
	call script publ_funnel_ifin_hide
	call program publ_funnel_model_hide
	call program publ_funnel_opt_hide
END

PROGRAM publ_funnel_main_hide
BEGIN
	call meta.gb_publ_funn.hide
	call meta.rb_publ_funn_standard.hide
	call meta.rb_publ_funn_contour.hide
	
	call meta.gb_publ_funn_cont_opts.hide
	call meta.tx_publ_funn_numl.hide
	call meta.ed_publ_funn_numl.hide
	call meta.ck_publ_funn_lines.hide
	call meta.tx_publ_funn_sides.hide
	call meta.cb_publ_funn_sides.hide
	call meta.bu_publ_funn_contourgraph.hide
END

PROGRAM publ_funnel_main_cont_disable
BEGIN
	call meta.gb_publ_funn_cont_opts.disable
	call meta.tx_publ_funn_numl.disable
	call meta.ed_publ_funn_numl.disable
	call meta.ck_publ_funn_lines.disable
	call meta.tx_publ_funn_sides.disable
	call meta.cb_publ_funn_sides.disable
	call meta.bu_publ_funn_contourgraph.disable
END

PROGRAM publ_funnel_model_hide
BEGIN
	call meta.gb_publ_funn_model.hide
	call meta.rb_publ_funn_declared.hide
	call meta.rb_publ_funn_remethod.hide
	call meta.rb_publ_funn_common.hide
	call meta.rb_publ_funn_fixed.hide
	call meta.tx_publ_funn_method.hide
	call meta.cb_publ_funn_method.hide
END

PROGRAM publ_funnel_opt_hide
BEGIN
	call meta.tx_publ_funn_metric.hide
	call meta.cb_publ_funn_metric.hide
	call meta.ck_publ_funn_by.hide
	call meta.tx_publ_funn_by.hide
	call meta.vl_publ_funn_by.hide
	call meta.bu_publ_funn_by.hide
	call meta.ck_publ_funn_nometashow.hide
	call meta.bu_publ_funn_graphopts.hide
	call meta.cb_publ_funn_level.hide
	call meta.tx_publ_funn_level.hide
	call meta.sp_publ_funn_n.hide
	call meta.tx_publ_funn_n.hide
END

PROGRAM publ_bias_set_tests
BEGIN
	call meta.cb_publ_bias_test.setcontentslist bias_test
	call meta.cb_publ_bias_test.setvalueslist bias_test_vals

	if m_estype.equals("lnoratio") {
		call meta.cb_publ_bias_test.setcontentslist bias_test_lno
		call meta.cb_publ_bias_test.setvalueslist bias_test_lno_vals
	}
	
	if m_estype.equals("lnrratio") {
		call meta.cb_publ_bias_test.setcontentslist bias_test_lnr
		call meta.cb_publ_bias_test.setvalueslist bias_test_lnr_vals
	}
		
	call meta.cb_publ_bias_test.repopulate
	call meta.cb_publ_bias_test.setvalue "egger"
END

LIST bias_test_lno
BEGIN
	resource LBL_REG_EGGER_TEST
	resource LBL_REG_HARBORD_TEST
	resource LBL_REG_PETERS_TEST
	resource LBL_NONPARM_RANK_CORR_BEGG_TEST
END
LIST bias_test_lno_vals
BEGIN
	egger
	harbord
	peters
	begg
END

LIST bias_test_lnr
BEGIN
	resource LBL_REG_EGGER_TEST
	resource LBL_REG_HARBORD_TEST
	resource LBL_NONPARM_RANK_CORR_BEGG_TEST
END
LIST bias_test_lnr_vals
BEGIN
	egger
	harbord
	begg
END

LIST bias_test
BEGIN
	resource LBL_REG_EGGER_TEST
	resource LBL_NONPARM_RANK_CORR_BEGG_TEST
END
LIST bias_test_vals
BEGIN
	egger
	begg
END

LIST trimfill_estimator
BEGIN
	resource LBL_LINEAR_L0
	resource LBL_RUN_R0
	resource LBL_QUADRATIC_Q0
END
LIST trimfill_estimator_vals
BEGIN
	linear
	run
	quadratic
END

PROGRAM bias_submit
BEGIN
	if meta.rb_publ_funnel {
		put /program publ_funnel_submit
	}
	
	if meta.rb_publ_bias {
		put /program publ_bias_submit
	}
	
	if meta.rb_publ_trimfill {
		put /program publ_trimfill_submit
	}

	stata
END

PROGRAM publ_funnel_submit
BEGIN
	if meta.rb_publ_funn_contour {
		if meta.ed_publ_funn_numl.equals("") {
			call create STRING _MSG_TMP
			call _MSG_TMP.format				///
			"resource LBL_MSGBOX_ON_TAB_REQUIRED_FMT"	///
				"resource LBL_TAB_MAIN"			///
				"resource LBL_SPECIFY_SIGNIFICANCE_CONTOURS"
			stopbox stop "class _MSG_TMP.value"
		}
	}
	
	put "meta funnelplot"
	
	if meta.ex_publ_funn_if {
		put /hidden " " "if " meta.ex_publ_funn_if
	}
	if meta.ck_publ_funn_in {
		put " " "in "
		put /hidden meta.sp_publ_funn_from
		put "/"
		put /hidden meta.sp_publ_funn_to
	}
	
	beginoptions
	
	if meta.rb_publ_funn_standard {
		if ! meta.cb_publ_funn_level.equals(m_ci_level) {
			put " level("
			put /hidden meta.cb_publ_funn_level
			put ")"
		}
	}
	if meta.rb_publ_funn_contour {
		put " contours("
		put /hidden meta.ed_publ_funn_numl
		put /program publ_funn_contour_options
		put ")"
	}
	put " "
	put /program publ_funnel_model_submit
	put " "
	put /program publ_funnel_options_submit
	
	endoptions
END

PROGRAM publ_funn_contour_options
BEGIN
	if (!meta.cb_publ_funn_sides.equals("default") | ///
	    meta.ck_publ_funn_lines | ///
	    !FunnelContourAreaResults.equals("")) {
		put ", "
		if ! meta.cb_publ_funn_sides.equals("default") {
			put " "
			put /hidden meta.cb_publ_funn_sides
		}
		if meta.ck_publ_funn_lines {
			put " lines"
			put " "
			put /hidden FunnelContourLinesResults
		}
		else {
			put /hidden FunnelContourAreaResults
		}
	}
END

PROGRAM publ_funnel_model_submit
BEGIN
	if meta.rb_publ_funn_remethod {
		put " random("
		put /hidden meta.cb_publ_funn_remethod
		put ")"
	}
	if meta.rb_publ_funn_common {
		put " common"
	}
	if meta.rb_publ_funn_fixed {
		put " fixed"
	}
END

PROGRAM publ_funnel_options_submit
BEGIN
	if ! meta.cb_publ_funn_metric.equals("se") {
		put " metric("
		put /hidden meta.cb_publ_funn_metric
		put ")"
	}
	if meta.ck_publ_funn_by {
		put " by("
		put /hidden meta.vl_publ_funn_by
		put ", "
		put /hidden FunnelByResults
		put ")"
	}
	if meta.ck_publ_funn_nometashow {
		put " nometashow"
	}
	if ! meta.sp_publ_funn_n.isdefault() {
		put " n(" 
		put /hidden meta.sp_publ_funn_n
		put ")"
	}
	put " "
	if meta.rb_publ_funn_standard {
		put /hidden FunnelGraphOptsStdResults
	}
	if meta.rb_publ_funn_contour {
		put /hidden FunnelGraphOptsConResults
	}	
	
END


PROGRAM publ_bias_submit
BEGIN
	put "meta bias "
	
	if ! meta.cb_publ_bias_test.equals("begg") & ! meta.rb_publ_bias_common {
		put /hidden meta.vl_publ_bias_moderators
	}
	
	if meta.ex_publ_bias_if {
		put /hidden " " "if " meta.ex_publ_bias_if
	}
	if meta.ck_publ_bias_in {
		put " " "in "
		put /hidden meta.sp_publ_bias_from
		put "/"
		put /hidden meta.sp_publ_bias_to
	}
	
	beginoptions
	
	put " "
	put /hidden meta.cb_publ_bias_test
	
	if ! meta.cb_publ_bias_test.equals("begg") {
		if meta.rb_publ_bias_remethod {
			put " random("
			put /hidden meta.cb_publ_bias_remethod
			put ") "
			put /hidden BiasReoptsResults
		}
	
		if meta.rb_publ_bias_common {
			put " common"
		}
		
		if meta.rb_publ_bias_fixed {
			if meta.ck_publ_bias_trad {
				put " traditional"
			}
			else {
				put " fixed"
				if meta.ck_publ_bias_multi {
					put " multiplicative"
				}
			}
		}
		
		if meta.rb_publ_bias_declared & m_model.equals("fixed") {
			if meta.ck_publ_bias_trad {
				put " traditional"
			}
			else {
				if meta.ck_publ_bias_multi {
					put " multiplicative"
				}
			}
		}
	}
	
	if meta.ck_publ_bias_tdis & meta.ck_publ_bias_tdis.isenabled() {
		put " tdistribution"
	}
	
	if meta.ck_publ_bias_detail {
		put " detail"
	}
	
	if meta.ck_publ_bias_nometashow {
		put " nometashow"
	}
	
	if meta.rb_publ_bias_maxim.isenabled() {
		put " "
		put /program publ_bias_maxim_submit
	}
	
	endoptions
END

PROGRAM publ_bias_maxim_submit
BEGIN
	if ! meta.sp_publ_bias_maxim_iter.isdefault() {
		put " iterate("
		put /hidden meta.sp_publ_bias_maxim_iter
		put ")"
	}
	
	if meta.ck_publ_bias_maxim_trace {
		put " showtrace"
	}
	
	
	if ! meta.ed_publ_bias_maxim_tol.equals("1e-6") {
		put " tolerance("
		put /hidden meta.ed_publ_bias_maxim_tol
		put ")"
	}
	if meta.ck_publ_bias_maxim_nonrtol {
		put " nonrtolerance"
	}
	else {
		if ! meta.ed_publ_bias_maxim_nrtol.equals("1e-5") {
			put " nrtolerance("
			put /hidden meta.ed_publ_bias_maxim_nrtol
			put ")"
		}
	}

	if ! meta.ed_publ_bias_maxim_from.equals("") {
		put " from("
		put /hidden meta.ed_publ_bias_maxim_from
		put ")"
	}
END

PROGRAM publ_trimfill_submit
BEGIN
	put "meta trimfill"
	
	if meta.ex_publ_tf_if {
		put /hidden " " "if " meta.ex_publ_tf_if
	}
	if meta.ck_publ_tf_in {
		put " " "in "
		put /hidden meta.sp_publ_tf_from
		put "/"
		put /hidden meta.sp_publ_tf_to
	}
	
	beginoptions
	
	if meta.ck_publ_tf_estimator {
		put " estimator("
		put /hidden meta.cb_publ_tf_estimator
		put ")"
	}
	if meta.ck_publ_tf_left {
		put " left"
	}
	if meta.ck_publ_tf_right {
		put " right"
	}
	if meta.ck_publ_tf_funnel {
		put " funnel"
		if ! TrimfillFunnelResults.equals("") {
			put "("
			put /hidden TrimfillFunnelResults
			put ")"
		}
	}
	put " "
	put /program publ_tf_options_submit
	put " "
	put /program publ_tf_iteration_submit
	
	endoptions
END

PROGRAM publ_tf_options_submit
BEGIN
	if ! meta.cb_publ_tf_opt_ci.equals(m_ci_level) {
		put " level("
		put /hidden meta.cb_publ_tf_opt_ci
		put ") "
	}
	
	if meta.cb_publ_tf_opt_eform.equals("eform") {
		put " eform"
	}
	if meta.cb_publ_tf_opt_eform.equals("eformstring") {
		put " eform("
		put /hidden meta.cb_publ_tf_opt_eform
		put ")"
	}
	if meta.ck_publ_tf_opt_nometashow {
		put " nometashow"
	}
	put " "
	put /hidden TrimfillDisoptsResults
END

PROGRAM publ_tf_iteration_submit
BEGIN
	if meta.rb_publ_tf_same_pooliter {
		if ! meta.cb_publ_tf_same.equals("default") {
			if (meta.cb_publ_tf_same.equals("fixed") | ///
			    meta.cb_publ_tf_same.equals("common")) {
				put " "
				put /hidden meta.cb_publ_tf_same
			}
			else {
				put " random("
				put /hidden meta.cb_publ_tf_same
				put ")"
			}
		}
	}
	
	if meta.rb_publ_tf_diff_pooliter {
		if ! meta.cb_publ_tf_iter_diff_iter.equals("default") {
			put " itermethod("
			put /hidden meta.cb_publ_tf_iter_diff_iter
			put ")"
		}
		if ! meta.cb_publ_tf_iter_diff_pool.equals("default") {
			put " poolmethod("
			put /hidden meta.cb_publ_tf_iter_diff_pool
			put ")"
		}
	}
	
	if ! meta.sp_publ_tf_iter_iterations.equals(100) {
		put " iterate("
		put /hidden meta.sp_publ_tf_iter_iterations
		put ")"
		
	}
	if meta.ck_publ_tf_iter_log {
		put " log"
	}
END
