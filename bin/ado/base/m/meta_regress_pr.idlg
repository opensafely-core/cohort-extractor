/*
	meta_regress_pr.idlg

*!  VERSION 1.0.1  16may2019

*/

/* -------------------- Regression Button -------------------- */

PROGRAM regression_show
BEGIN
	if meta.btn_reg {
		call meta.tx_general.hide
		call meta.tb_general.hide
		call script regression_hide

		call meta.gb_regress.show
		call meta.rb_reg_model.show
		call meta.rb_reg_ifin.show
		call meta.rb_reg_reporting.show
		call meta.rb_reg_maxim.show
		call meta.bu_reg_submit.show
		call meta.bu_reg_postest.show

		if meta.rb_reg_model {
			call program regress_model_show
		}
		if meta.rb_reg_ifin {
			call program regress_ifin_show
		}
		if meta.rb_reg_reporting {
			call program regress_reporting_show
		}
		if meta.rb_reg_maxim {
			call program regress_maxim_show
		}
		call program reg_maxim_set_status
	}
END

SCRIPT regression_hide
BEGIN
	meta.gb_regress.hide
	meta.rb_reg_model.hide
	meta.rb_reg_ifin.hide
	meta.rb_reg_reporting.hide
	meta.rb_reg_maxim.hide
	meta.bu_reg_submit.hide
	meta.bu_reg_postest.hide

	script regress_model_hide
	script regress_ifin_hide
	script regress_reporting_hide
	script regress_maxim_hide
END

// MODEL
PROGRAM regress_model_show
BEGIN
	call meta.gb_reg_moderators.show
	call meta.tx_reg_moderators.show
	call meta.vl_reg_moderators.show
	call meta.ck_reg_noconstant.show
	call meta.ck_reg_estimate.show
	call meta.gb_reg_model.show
	call meta.rb_reg_declared.show
	call meta.rb_reg_remethod.show
	call meta.rb_reg_fixed.show
	call meta.ck_reg_multip.show
	call meta.ck_reg_opt_tdist.show

	call program reg_tab_model_changed
END

SCRIPT regress_model_hide
BEGIN
	meta.gb_reg_moderators.hide
	meta.tx_reg_moderators.hide
	meta.vl_reg_moderators.hide
	meta.ck_reg_noconstant.hide
	meta.ck_reg_estimate.hide
	meta.gb_reg_model.hide
	meta.rb_reg_declared.hide
	meta.rb_reg_remethod.hide
	meta.rb_reg_fixed.hide
	meta.tx_reg_method.hide
	meta.cb_reg_method.hide
	meta.bu_reg_method_reopts.hide
	meta.ck_reg_multip.hide
	meta.ck_reg_opt_tdist.hide
END

PROGRAM reg_tab_model_changed
BEGIN
	call meta.tx_reg_method.hide
	call meta.cb_reg_method.hide
	call meta.bu_reg_method_reopts.hide
	if meta.rb_reg_remethod {
		call meta.tx_reg_method.show
		call meta.cb_reg_method.show
		call meta.bu_reg_method_reopts.show
	}
	if meta.rb_reg_fixed {
		call meta.tx_reg_method.show
		call meta.cb_reg_method.show
	}

	call program reg_maxim_set_status
END

PROGRAM reg_model_changed
BEGIN
	call meta.tx_reg_method.hide
	call meta.cb_reg_method.hide
	call meta.tx_reg_method.disable
	call meta.cb_reg_method.disable
	call meta.bu_reg_method_reopts.hide
	if m_model.iseq("fixed") {
		call meta.ck_reg_multip.enable
	}
	else {
		call meta.ck_reg_multip.disable
	}
	if meta.rb_reg_remethod {
		call meta.tx_reg_method.enable
		call meta.cb_reg_method.enable
		call meta.tx_reg_method.show
		call meta.cb_reg_method.show
		call meta.bu_reg_method_reopts.show

		call meta.cb_reg_method.setcontentslist re_method
		call meta.cb_reg_method.setvalueslist re_method_vals

		call meta.cb_reg_method.repopulate
		call meta.cb_reg_method.setvalue "reml"
	}
	if meta.rb_reg_fixed {
		call meta.tx_reg_method.show
		call meta.cb_reg_method.show

		call meta.cb_reg_method.setcontentslist cefe_method
		call meta.cb_reg_method.setvalueslist cefe_method_vals

		call meta.cb_reg_method.repopulate
		call meta.cb_reg_method.setvalue "invvariance"
		call meta.ck_reg_multip.enable
	}

	call program reg_maxim_set_status
END

SCRIPT reg_model_estimate_on
BEGIN
	meta.vl_reg_moderators.disable
	meta.ck_reg_noconstant.disable
	meta.tx_reg_moderators.disable
END

SCRIPT reg_model_estimate_off
BEGIN
	meta.vl_reg_moderators.enable
	meta.ck_reg_noconstant.enable
	meta.tx_reg_moderators.enable
END

//IFIN
PROGRAM regress_ifin_show
BEGIN
	call meta.tx_reg_if.show
	call meta.ex_reg_if.show
	call meta.ck_reg_in.show
	call meta.tx_reg_from.show
	call meta.sp_reg_from.show
	call meta.tx_reg_to.show
	call meta.sp_reg_to.show
	call program regress_ifin_in
END

SCRIPT regress_ifin_hide
BEGIN
	meta.tx_reg_if.hide
	meta.ex_reg_if.hide
	meta.ck_reg_in.hide
	meta.tx_reg_from.hide
	meta.sp_reg_from.hide
	meta.tx_reg_to.hide
	meta.sp_reg_to.hide
END

PROGRAM regress_ifin_in
BEGIN
	if meta.ck_reg_in {
		call meta.tx_reg_from.enable
		call meta.sp_reg_from.enable
		call meta.tx_reg_to.enable
		call meta.sp_reg_to.enable
	}
	else {
		call meta.tx_reg_from.disable
		call meta.sp_reg_from.disable
		call meta.tx_reg_to.disable
		call meta.sp_reg_to.disable
	}
END

// REPORTING

PROGRAM regress_reporting_show
BEGIN
	call meta.gb_reg_rpt.show
	call meta.cb_reg_opt_ci.show
	call meta.tx_reg_opt_ci.show
	call meta.ck_reg_opt_noheader.show
	call meta.ck_reg_opt_nometashow.show

	call meta.rb_report_columns_dflt.show
	call meta.rb_report_columns_noci.show
	call meta.rb_report_columns_nopv.show

	call meta.bu_facvars.show
	call meta.bu_fmtcoef.show
END

SCRIPT regress_reporting_hide
BEGIN
	meta.gb_reg_rpt.hide
	meta.cb_reg_opt_ci.hide
	meta.tx_reg_opt_ci.hide

	meta.ck_reg_opt_noheader.hide
	meta.ck_reg_opt_nometashow.hide

	meta.rb_report_columns_dflt.hide
	meta.rb_report_columns_noci.hide
	meta.rb_report_columns_nopv.hide

	meta.bu_facvars.hide
	meta.bu_fmtcoef.hide
END

PROGRAM regress_maxim_show
BEGIN
	call meta.gb_reg_maxim.show
	call meta.sp_reg_maxim_iter.show
	call meta.tx_reg_maxim_iter.show
	call meta.ck_reg_maxim_showtrace.show
	call meta.gb_reg_maxim_tol.show
	call meta.ed_reg_maxim_tol.show
	call meta.tx_reg_maxim_tol.show
	call meta.ed_reg_maxim_nrtol.show
	call meta.tx_reg_maxim_nrtol.show
	call meta.ck_reg_maxim_nonrtol.show
	call meta.tx_reg_maxim_from.show
	call meta.ed_reg_maxim_from.show
END

SCRIPT regress_maxim_hide
BEGIN
	meta.gb_reg_maxim.hide
	meta.sp_reg_maxim_iter.hide
	meta.tx_reg_maxim_iter.hide
	meta.ck_reg_maxim_showtrace.hide
	meta.gb_reg_maxim_tol.hide
	meta.ed_reg_maxim_tol.hide
	meta.tx_reg_maxim_tol.hide
	meta.ed_reg_maxim_nrtol.hide
	meta.tx_reg_maxim_nrtol.hide
	meta.ck_reg_maxim_nonrtol.hide
	meta.tx_reg_maxim_from.hide
	meta.ed_reg_maxim_from.hide
END

PROGRAM reg_maxim_set_status
BEGIN
	if (meta.rb_reg_remethod |					///
		(meta.rb_reg_declared & m_model.equals("random"))) {
		if ((meta.rb_reg_declared & ( m_method.equals("reml")	///
			| m_method.equals("mle")			///
			| m_method.equals("ebayes")))			///
			| (meta.rb_reg_remethod &			///
			( meta.cb_reg_method.equals("reml")		///
			| meta.cb_reg_method.equals("mle")		///
			| meta.cb_reg_method.equals("ebayes")))) { 
			call meta.rb_reg_maxim.enable
		}
		else {
			call meta.rb_reg_maxim.disable
		}
	}
	else {
		call meta.rb_reg_maxim.disable
	}
END

PROGRAM regression_reopts 
BEGIN
	call create CHILD meta_reopts AS RegReopts, message("regress")
	call RegReopts.setExitString RegReoptsResults
	call RegReopts.setExitAction "program regression_reopts_done"
	
END

PROGRAM regression_reopts_done
BEGIN
	call create STRING STMP
	if RegReoptsResults {
		call STMP.setvalue resource LBL_RE_OPTIONS
		call STMP.append " *"
		call STMP.withvalue meta.bu_reg_method_reopts.setlabel "@"
	}
	else {
		call STMP.setvalue resource LBL_RE_OPTIONS
		call STMP.append "  "
		call STMP.withvalue meta.bu_reg_method_reopts.setlabel "@"
	}
END

PROGRAM rpt_bu_facvars_getOpts
BEGIN
	call create CHILD factor_vars_reporting AS rpt_bu_facvars
	call rpt_bu_facvars.setExitString rpt_bu_facvarsResults
	call rpt_bu_facvars.setExitAction "program reg_rpt_facvars_done"
END

PROGRAM reg_rpt_facvars_done
BEGIN
	if rpt_bu_facvarsResults {
		call meta.bu_facvars.formatlabel "resource LBL_BU_FACTOR_VARIABLE_DISPLAY_OPTIONS_FMT" " *"
	}
	else {
		call meta.bu_facvars.formatlabel "resource LBL_BU_FACTOR_VARIABLE_DISPLAY_OPTIONS_FMT" "  "
	}	
END

PROGRAM rpt_bu_fmtcoef_getOpts
BEGIN
	call create CHILD fmt_coef_table_reporting AS rpt_bu_fmtcoef
	call rpt_bu_fmtcoef.setExitString rpt_bu_fmtcoefResults
	call rpt_bu_fmtcoef.setExitAction "program reg_rpt_fmtcoef_done"
END

PROGRAM reg_rpt_fmtcoef_done
BEGIN
	if rpt_bu_fmtcoefResults {
		call meta.bu_fmtcoef.formatlabel "resource LBL_BU_SET_TABLE_FORMATS_FMT" " *"
	}
	else {
		call meta.bu_fmtcoef.formatlabel "resource LBL_BU_SET_TABLE_FORMATS_FMT" "  "
	}	
END


PROGRAM regress_options_submit
BEGIN
	if ! meta.cb_reg_opt_ci.equals(m_ci_level) {
		put " level("
		put /hidden meta.cb_reg_opt_ci
		put ") "
	}
	
	if meta.ck_reg_opt_tdist {
		put " tdistribution"
	}
	
	if meta.ck_reg_opt_noheader {
		put " noheader"
	}
	
	if meta.ck_reg_opt_nometashow {
		put " nometashow"
	}
	
	if meta.rb_report_columns_noci {
		put " noci"
	}
	
	if meta.rb_report_columns_nopv {
		put " nopvalues"
	}
	put " "
	put /hidden rpt_bu_facvarsResults
	put  " "
	put /hidden rpt_bu_fmtcoefResults
END

PROGRAM regress_maxim_submit
BEGIN
	if ! meta.sp_reg_maxim_iter.isdefault() {
		put " iterate("
		put /hidden meta.sp_reg_maxim_iter
		put ")"
	}
	
	if meta.ck_reg_maxim_showtrace {
		put " showtrace"
	}
	
	
	if ! meta.ed_reg_maxim_tol.equals("1e-6") {
		put " tolerance("
		put /hidden meta.ed_reg_maxim_tol
		put ")"
	}
	if meta.ck_reg_maxim_nonrtol {
		put " nonrtolerance"
	}
	else {
		if ! meta.ed_reg_maxim_nrtol.equals("1e-5") {
			put " nrtolerance("
			put /hidden meta.ed_reg_maxim_nrtol
			put ")"
		}
	}

	if ! meta.ed_reg_maxim_from.equals("") {
		put " from("
		put /hidden meta.ed_reg_maxim_from
		put ")"
	}
END

PROGRAM regression_submit
BEGIN
	if ! meta.ck_reg_estimate {
		if meta.vl_reg_moderators.equals("") {
			call create STRING _MSG_TMP
			call _MSG_TMP.format				///
			"resource LBL_MSGBOX_ON_TAB_REQUIRED_FMT"	///
				"resource LBL_TAB_MAIN"			///
				"resource LBL_MODERATORS"
			stopbox stop "class _MSG_TMP.value"
		}
	}
	
	put "meta regress "
	
	if ! meta.ck_reg_estimate {
		put /hidden meta.vl_reg_moderators
	}
	else {
		put "_cons"
	}

	if meta.ex_reg_if {
		put /hidden " " "if " meta.ex_reg_if
	}
	if meta.ck_reg_in {
		put " " "in "
		put /hidden meta.sp_reg_from
		put "/"
		put /hidden meta.sp_reg_to
	}
	
	beginoptions
	
	if meta.ck_reg_noconstant & ! meta.ck_reg_estimate{
		put " noconstant"
	}
	
	if meta.rb_reg_remethod {
		put " random("
		put /hidden meta.cb_reg_method
		put ") "
		
		put /hidden RegReoptsResults
	}
	
	if meta.rb_reg_fixed {
		put " fixed"
	}
	
	if meta.ck_reg_multip {
		put " multiplicative"
	}
	
	put " "
	put /program regress_options_submit
	if meta.rb_reg_maxim.isenabled() {
		put " "
		put /program regress_maxim_submit
	}
	endoptions
	
	stata
END
