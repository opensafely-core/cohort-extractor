/*
  menl_exp.dlg

*!  VERSION 1.0.9  16jul2019

*/

VERSION 15.0

INCLUDE _std_xlarge
DEFINE _dlght 600
INCLUDE header

RESET res1

SCRIPT PREINIT
BEGIN
	create STRING STMP
	create STRING exp
	create STRING parent_exp
	create STRING parent_name
	create STRING funcx_res
	create STRING funcy_res
	create DOUBLE eqcounter
	create DOUBLE isDefined
	create DOUBLE isRE
	isRE.setvalue 1

	parent_name.setvalue class PARENT._dlg_rsrcname

	create STRING main_spec_tmp
	create STRING main_spec_tmp2
	create STRING main_spec_childdlg
	create STRING main_spec_dlgname
	create STRING main_spec_child_result
	create STRING main_spec_cmd_output

	create ARRAY main_spec_list

	create SVECTOR mainSPECCommandDisplayList
	create SVECTOR mainSPECCommandList
	create SVECTOR mainSPECCommandValues
	create SVECTOR mainSPECStatusList
	create SVECTOR mainSPECChildDialogList

	create DOUBLE main_spec_count
	create DOUBLE main_spec_position
	create DOUBLE main_spec_arraysize

	main.bu_spec_edit.disable
	main.bu_spec_disable.disable
	main.bu_spec_enable.disable

END

SCRIPT POSTINIT
BEGIN
	program main_category_sel_check
	program main_sp_levar_check

	main.bu_spec_edit.disable
	main.bu_spec_disable.disable
	main.bu_spec_enable.disable

	mainSPECCommandDisplayList.copyToArray main_spec_list
	main.lb_spec_build.repopulate

	parent_name.withvalue parent_exp.setvalue class @.main.ed_subexpr.value
	parent_exp.withvalue main.ed_exp.setvalue @

	eqcounter.setvalue 1
	parent_name.withvalue eqcounter.setvalue class @.eqcounter.value
	
	parent_name.withvalue isDefined.setvalue class @.isDefined.value
END

DIALOG main, label(resource MENL_EXP_DLG_TITLE)
BEGIN
  TEXT tx_exp			_lft	_top	_iwd	.,		///
	label(resource LBL_EXPRESSION)

  EDIT ed_exp			@	_ss	@	_ht4,		///
	multiline							///
	label(resource LBL_EXPRESSION)
  TEXT tx_category		_lft	+90	_iwd	.,		///
	label(resource LBL_INCLUDE_COLON)
  LISTBOX lb_category		@	_ss	_cwd0	_ht8,		///
	contents(main_category_list)					///
	values(main_category_value)					///
	onselchange(program main_category_sel_check)			///
	label(resource LBL_INCLUDE_COLON)
DEFINE bsep +25
  BUTTON bu_7			_iilft2	@	20	.,		///
	onpush(main.ed_exp.insert 7)					///
	label("7")
  BUTTON bu_8			bsep	@	20	.,		///
	onpush(main.ed_exp.insert 8)					///
	label("8")
  BUTTON bu_9			bsep	@	20	.,		///
	onpush(main.ed_exp.insert 9)					///
	label("9")
  BUTTON bu_plus		bsep	@	20	.,		///
	onpush(main.ed_exp.insert +)					///
	label("+")
  BUTTON bu_minus		bsep	@	20	.,		///
	onpush(main.ed_exp.insert -)					///
	label("-")
  BUTTON bu_multp		bsep	@	20	.,		///
	onpush(main.ed_exp.insert *)					///
	label("*")
  BUTTON bu_divid		bsep	@	20	.,		///
	onpush(main.ed_exp.insert /)					///
	label("/")
  BUTTON bu_4			_iilft2	_ls	20	.,		///
	onpush(main.ed_exp.insert 4)					///
	label("4")
  BUTTON bu_5			bsep	@	20	.,		///
	onpush(main.ed_exp.insert 5)					///
	label("5")
  BUTTON bu_6			bsep	@	20	.,		///
	onpush(main.ed_exp.insert 6)					///
	label("6")
  BUTTON bu_le			bsep	@	20	.,		///
	onpush(main.ed_exp.insert <=)					///
	label("<=")
  BUTTON bu_ge			bsep	@	20	.,		///
	onpush(main.ed_exp.insert >=)					///
	label(">=")
  BUTTON bu_less		bsep	@	20	.,		///
	onpush(main.ed_exp.insert <)					///
	label("<")
  BUTTON bu_grter		bsep	@	20	.,		///
	onpush(main.ed_exp.insert >)					///
	label(">")
  BUTTON bu_1			_iilft2	_ls	20	.,		///
	onpush(main.ed_exp.insert 1)					///
	label("1")
  BUTTON bu_2			bsep	@	20	.,		///
	onpush(main.ed_exp.insert 2)					///
	label("2")
  BUTTON bu_3			bsep	@	20	.,		///
	onpush(main.ed_exp.insert 3)					///
	label("3")
  BUTTON bu_equal		bsep	@	20	.,		///
	onpush(main.ed_exp.insert ==)					///
	label("==")
  BUTTON bu_neq			bsep	@	20	.,		///
	onpush(main.ed_exp.insert !=)					///
	label("!=")
  BUTTON bu_lbrac		bsep	@	20	.,		///
	onpush(main.ed_exp.insert "(")					///
	label("(")
  BUTTON bu_rbrac		bsep	@	20	.,		///
	onpush(main.ed_exp.insert ")")					///
	label(")")
  BUTTON bu_0			_iilft2	_ls	45	.,		///
	onpush(main.ed_exp.insert 0)					///
	label("0")
  BUTTON bu_dot			+50	@	20	.,		///
	onpush(main.ed_exp.insert .)					///
	label(".")
  BUTTON bu_pi			bsep	@	45	.,		///
	onpush(main.ed_exp.insert _pi)					///
	label("pi")
  BUTTON bu_caret		+50	@	20	.,		///
	onpush(main.ed_exp.insert ^)					///
	label("^")

  GROUPBOX gb_expcat		_lft	_ls	_iwd	_ht30h,		///
	label(resource LBL_LINEAR_COMBINATIONS)

//linear combinations
  TEXT tx_spec			_ilft	_ss	215	.,		///
	label(resource MENL_EXP_TX_LINEARSPEC)
DEFINE ystart @y
  LISTBOX lb_spec_build		@	_ss	@	120,		///
	contents(main_spec_list)					///
	ondblclick(program main_spec_edit)				///
	onselchange(program main_spec_sel_changed)			///
	nomemory
  BUTTON bu_spec_create		240	@	80	.,		///
	tooltip(resource LBL_CREATE_SPECIFICATION)			///
	onpush(program main_spec_create)				///
	label(resource LBL_BU_CREATE)
  BUTTON bu_spec_edit		@	_ms	@	.,		///
	onpush(program main_spec_edit)					///
	tooltip(resource LBL_EDIT_SPECIFICATION)			///
	label(resource LBL_BU_EDIT)
  BUTTON bu_spec_disable	@	_ms	@	.,		///
	onpush(program main_spec_disable)				///
	tooltip(resource LBL_CLICK_TO_DISABLE_A_SPECIFICATION)		///
	label(resource LBL_BU_DISABLE)
  BUTTON bu_spec_enable		@	_ms	@	.,		///
	onpush(program main_spec_enable)				///
	tooltip(resource LBL_CLICK_TO_ENABLE_PREV_DISABLED_SPEC)	///
	label(resource LBL_BU_ENABLE)
  TEXTBOX tb_spec_note		_ilft	+50	_ibwd	_tb2,		///
	label(resource LBL_PRESS_CREATE_DEFINE_SPECIFICATION)

//random-effects
  DEFINE rey ystart
  INCLUDE menl_exp_re_opts

  TEXT tx_vlist			_ilft	ystart	_ibwd	.,		///
	label(resource LBL_VARIABLES)
  VARLIST vl_vlist		@	_ss	@	.,		///
  	fvtsmenl							///
	label(resource LBL_GB_VARIABLES)

//parameters
  RADIO rb_param		_ilft	ystart _cwd3	., first	///
	onclickon(program main_check_params)				///
	label(resource LBL_PARAMETER)
  TEXT tx_paramname		_iilft	_ss	_cwd3	.,		///
	label(resource LBL_NAME)
  EDIT ed_paramname		@	_ss	150	.,		///
	label(resource LBL_NAME)
  RADIO rb_paramgr		_ilft	_ls	_cwd3	.,		///
	onclickon(program main_check_params)				///
	label(resource LBL_PARAMETER_GROUP_LABEL)
  TEXT tx_grname		_iilft	_ss	_cwd3	.,		///
	label(resource LBL_GROUP_NAME)
  TEXT tx_paramgrname		_lft2	@	_cwd3	.,		///
	label(resource LBL_PARAMETER_NAME)
  EDIT ed_grname		_iilft	_ss	150	.,		///
	label(resource LBL_GROUP_NAME)
  EDIT ed_paramgrname		_lft2	@	@	.,		///
	label(resource LBL_PARAMETER_NAME)
  RADIO rb_paramexp		_ilft	_ls	_cwd3	., 		///
	onclickon(program main_check_params)				///
	label(resource LBL_PARAMETER_EXPRESSION_NAME)
  TEXT tx_paramexpname		_iilft	_ss	_cwd3	.,		///
	label(resource LBL_NAME)
  EDIT ed_paramexpname		@	_ss	150	.,		///
	label(resource LBL_NAME)
  CHECKBOX ck_paramexp_ts	+160	@	250	.,		///
	label("Include 1-period lag for expression name")
//	label(resource MENL_EXP_MAIN_CK_PARAMEXP_TS)
  TEXTBOX tb_paramnote		_iilft	_ls	450	30,		///
          label(resource LBL_MAIN_TX_PARAMNOTE)
  RADIO rb_paramts		_ilft	_xls	_cwd3	., last		///
	onclickon(program main_check_params)				///
	label("Lagged predicted mean function, L._yhat")
//	label(resource MENL_EXP_MAIN_RB_PARAMTS)


//Functions,math
  TEXT tx_funcmath		_ilft	ystart	_vnwd	.,		///
	label(resource LBL_FUNCTIONS)
  COMBOBOX cb_funcmath		@	_ss	@	.,		///
	dropdownlist							///
	contents(main_funcmath_list)					///
	values(main_funcmath_value)					///
	onselchange(program main_funcmath_sel_change)
  TEXT tx_functionx		_ilft	_ls	_ibwd	.,		///
	label(resource LBL_SPECIFY_X)
  VARLIST vl_functionx		@	_ss	_ilw80	.,		///
	label(resource LBL_SPECIFY_X)
  BUTTON bu_functionx		_irj80	@	80	.,		///
	onpush(program main_functionx_show_child)			///
	label(resource LBL_BU_CREATE)
  TEXT tx_functiony		_ilft	_ss	_ibwd	.,		///
	label(resource LBL_SPECIFY_Y)
  VARLIST vl_functiony		@	_ss	_ilw80	.,		///
	label(resource LBL_SPECIFY_Y)
  BUTTON bu_functiony		_irj80	@	80	.,		///
	onpush(program main_functiony_show_child)			///
	label(resource LBL_BU_CREATE)
  GROUPBOX gb_descrpt		_ilft	_ls	_ibwd	_ht5,		///
	label(resource LBL_DESCRIPTION)
  TEXTBOX tb_descrpt		_iilft	_ss	_inwd	_tb3,		///
	label("")

//Functions,tri
  TEXT tx_functri		_ilft	ystart	_vnwd	.,		///
	label(resource LBL_FUNCTIONS)
  COMBOBOX cb_functri		@	_ss	@	.,		///
	dropdownlist							///
	contents(main_functri_list)					///
	values(main_functri_value)					///
	onselchange(program main_functri_sel_change)			///
	label(resource LBL_FUNCTIONS)
  TEXT tx_add			20	565	425	.,		///
	right								///
	label(`"Press "Add" to add a random effect to the expression"')
  BUTTON bu_add			_irj80	@	80	.,		///
	onpush(program main_add_expression)				///
	label(resource LBL_BU_ADD)
END

INCLUDE menl_exp_re_opts_sc

LIST main_category_list
BEGIN
	resource LBL_LINEAR_COMBINATIONS	
	resource LBL_GB_VARIABLES	
	resource LBL_PARAMETERS	
	resource LBL_RANDOM_EFFECTS	
	resource LBL_FUNCTIONS_MATH
	resource LBL_FUNCTIONS_TRI

END

LIST main_category_value
BEGIN
	linear
	vlist
	params
	randomeffects
	math
	trigonometric
END

LIST main_funcmath_list
BEGIN
	"abs()"
	"ceil()"
	"cloglog()"
	"comb()"
	"digamma()"
	"exp()"
	"floor()"
	"int()"
	"invcloglog()"
	"invlogit()"
	"ln()"
	"lnfactorial()"
	"lngamma()"
	"log()"
	"log10()"
	"logit()"
	"max()"
	"min()"
	"mod()"
	"reldif()"
	"round()"
	"sign()"
	"sqrt()"
	"sum()"
	"trigamma()"
	"trunc()"
END

LIST main_functri_list
BEGIN
	"acos()"
	"acosh()"
	"asin()"
	"asinh()"
	"atan()"
	"atan2()"
	"atanh()"
	"cos()"
	"cosh()"
	"sin()"
	"sinh()"
	"tan()"
	"tanh()"
END

PROGRAM main_check_params
BEGIN
	if main.rb_param {
		call main.tx_paramname.enable
		call main.ed_paramname.enable
		call main.tx_grname.disable
		call main.tx_paramgrname.disable
		call main.ed_grname.disable
		call main.ed_paramgrname.disable
		call main.tx_paramexpname.disable
		call main.ed_paramexpname.disable
		call main.tb_paramnote.disable
  		call main.ck_paramexp_ts.disable
	}
	if main.rb_paramgr {
		call main.tx_paramname.disable
		call main.ed_paramname.disable
		call main.tx_grname.enable
		call main.tx_paramgrname.enable
		call main.ed_grname.enable
		call main.ed_paramgrname.enable
		call main.tx_paramexpname.disable
		call main.ed_paramexpname.disable
		call main.tb_paramnote.disable
  		call main.ck_paramexp_ts.disable
	}
	if main.rb_paramexp {
		call main.tx_paramname.disable
		call main.ed_paramname.disable
		call main.tx_grname.disable
		call main.tx_paramgrname.disable
		call main.ed_grname.disable
		call main.ed_paramgrname.disable
		call main.tx_paramexpname.enable
  		call main.ck_paramexp_ts.enable
		call main.ed_paramexpname.enable
		call main.tb_paramnote.enable
	}
	if main.rb_paramts {
		call main.tx_paramname.disable
		call main.ed_paramname.disable
		call main.tx_grname.disable
		call main.tx_paramgrname.disable
		call main.ed_grname.disable
		call main.ed_paramgrname.disable
		call main.tx_paramexpname.disable
		call main.ed_paramexpname.disable
		call main.tb_paramnote.disable
  		call main.ck_paramexp_ts.disable
	}
END

PROGRAM main_category_sel_check
BEGIN
	call script main_expcat_hide_all
	if main.lb_category.iseq(linear) {
		call main.tx_add.setlabel "resource MENL_EXP_ADD_LINEAR_COMBINATION_NOTE"
//  		call main.tx_add.setlabel `"Press "Add" to add the selected linear combination to the expression"'
		//
		call script main_linear_show
	}
	if main.lb_category.iseq(vlist) {
		call main.tx_add.setlabel "resource MENL_EXP_ADD_VARIABLES_NOTE"
//  		call main.tx_add.setlabel `"Press "Add" to add variables to the expression"'
		//
		call script main_vlist_show
	}
	if main.lb_category.iseq(params) {
		call main.tx_add.setlabel "resource MENL_EXP_ADD_PARAMETER_NOTE"	
//  		call main.tx_add.setlabel `"Press "Add" to add a parameter to the expression"'
		//
		call script main_params_show
	}
	if main.lb_category.iseq(randomeffects) {
		call main.tx_add.setlabel "resource MENL_EXP_ADD_RANDOM_EFFECT_NOTE"
//  		call main.tx_add.setlabel `"Press "Add" to add a random effect to the expression"'
		//
		call script main_randomeffects_show
	}
	if main.lb_category.iseq(math) {
		call main.tx_add.setlabel "resource MENL_EXP_ADD_FUNCTION_NOTE"
//  		call main.tx_add.setlabel `"Press "Add" to add a function to the expression"'
		//
		call script main_funcmath_show
	}
	if main.lb_category.iseq(trigonometric) {
		call main.tx_add.setlabel "resource MENL_EXP_ADD_FUNCTION_NOTE"
//  		call main.tx_add.setlabel `"Press "Add" to add a function to the expression"'
		//
		call script main_functri_show
	}
END

SCRIPT main_expcat_hide_all
BEGIN
	main.tx_spec.hide
	main.lb_spec_build.hide
	main.bu_spec_create.hide
	main.bu_spec_edit.hide
	main.bu_spec_disable.hide
	main.bu_spec_enable.hide
	main.tb_spec_note.hide

	script menl_exp_re_opts_hide

	main.tx_vlist.hide
	main.vl_vlist.hide

	main.rb_param.hide
	main.tx_paramname.hide
	main.ed_paramname.hide
	main.rb_paramgr.hide
	main.tx_grname.hide
	main.tx_paramgrname.hide
	main.ed_grname.hide
	main.ed_paramgrname.hide
	main.rb_paramexp.hide
 	main.ck_paramexp_ts.hide
	main.rb_paramts.hide
	main.tx_paramexpname.hide
	main.ed_paramexpname.hide
	main.tb_paramnote.hide

	main.tx_funcmath.hide
	main.cb_funcmath.hide
	main.tx_functionx.hide
	main.vl_functionx.hide
	main.bu_functionx.hide
	main.tx_functiony.hide
	main.vl_functiony.hide
	main.bu_functiony.hide
	main.gb_descrpt.hide
	main.tb_descrpt.hide
	main.tx_functri.hide
	main.cb_functri.hide
END

SCRIPT main_linear_show
BEGIN	
	main.gb_expcat.setlabel resource LBL_LINEAR_COMBINATIONS
	main.tx_spec.show
	main.lb_spec_build.show
	main.bu_spec_create.show
	main.bu_spec_edit.show
	main.bu_spec_disable.show
	main.bu_spec_enable.show
	main.tb_spec_note.show
END

SCRIPT main_vlist_show
BEGIN
	main.gb_expcat.setlabel resource LBL_GB_VARIABLES
	main.tx_vlist.show
	main.vl_vlist.show
END

SCRIPT main_params_show
BEGIN
	main.gb_expcat.setlabel resource LBL_PARAMETERS
	main.rb_param.show
	main.tx_paramname.show
	main.ed_paramname.show
	main.rb_paramgr.show
	main.tx_grname.show
	main.tx_paramgrname.show
	main.ed_grname.show
	main.ed_paramgrname.show
	main.rb_paramexp.show
 	main.ck_paramexp_ts.show
	main.rb_paramts.show
	main.tx_paramexpname.show
	main.ed_paramexpname.show
	main.tb_paramnote.show
END

SCRIPT main_randomeffects_show
BEGIN
	main.gb_expcat.setlabel resource LBL_RANDOM_EFFECTS
	program menl_exp_re_opts_show
END

SCRIPT main_funcmath_show
BEGIN
	main.gb_expcat.setlabel resource LBL_FUNCTIONS_MATH
	main.tx_funcmath.show
	main.cb_funcmath.show
	main.tx_functionx.show
	main.vl_functionx.show
	main.bu_functionx.show
	main.gb_descrpt.show
	main.tb_descrpt.show
	program main_funcmath_sel_change
END

SCRIPT main_functri_show
BEGIN
	main.gb_expcat.setlabel resource LBL_FUNCTIONS_TRI
	main.tx_functri.show
	main.cb_functri.show
	main.tx_functionx.show
	main.vl_functionx.show
	main.bu_functionx.show
	main.gb_descrpt.show
	main.tb_descrpt.show
	program main_functri_sel_change
END

PROGRAM main_spec_create
BEGIN
	call main_spec_count.setvalue class mainSPECChildDialogList.size
	call main_spec_count.increment
	call main_spec_tmp.setvalue "main_spec_"
	call main_spec_tmp.append class main_spec_count.value
	call main_spec_tmp.withvalue main_spec_childdlg.setvalue @
	call program main_show_spec_child
END

PROGRAM main_spec_edit
BEGIN
	call mainSPECCommandDisplayList.findstr class			///
		main.lb_spec_build.value
	call main_spec_position.setvalue class				///
		mainSPECCommandDisplayList.position
	call main_spec_position.withvalue				///
		main_spec_childdlg.setvalue				///
		class mainSPECChildDialogList.values[@]
	call program main_show_spec_child_edit
END

PROGRAM main_show_spec_child
BEGIN
	call main_spec_tmp.setvalue "menl_exp_linearspec AS "
	call main_spec_tmp.append class main_spec_childdlg.value
	call main_spec_tmp.withvalue create CHILD @
	call main_spec_childdlg.withvalue @.setExitString		///
		"main_spec_child_result"
	call main_spec_childdlg.withvalue @.setExitAction		///
		"program main_spec_child_create_done"


	call main_spec_count.withvalue STMP.format			///
		"resource LBL_SPECIFICATION_FMT" "@" ""
	call STMP.withvalue main_spec_tmp.setvalue "@"
	call main_spec_childdlg.withvalue				///
		main_spec_tmp2.setvalue "@.settitle"
	call main_spec_tmp2.append `" ""'
	call main_spec_tmp2.append class main_spec_tmp.value
	call main_spec_tmp2.append `"""'
	call main_spec_tmp2.withvalue @
END

PROGRAM main_show_spec_child_edit
BEGIN
	call main_spec_tmp.setvalue "menl_exp_linearspec AS "
	call main_spec_tmp.append class main_spec_childdlg.value
	call main_spec_tmp.withvalue create CHILD @
	call main_spec_childdlg.withvalue @.setExitString		///
		"main_spec_child_result"
	call main_spec_childdlg.withvalue @.setExitAction		///
		"program main_spec_child_edit_done"

	call main_spec_position.withvalue				///
		main_spec_tmp.setvalue					///
		class mainSPECCommandDisplayList.values[@]
	call main_spec_childdlg.withvalue				///
		main_spec_tmp2.setvalue "@.settitle"
	call main_spec_tmp2.append `" ""'
	call main_spec_tmp2.append class main_spec_tmp.value
	call main_spec_tmp2.append `"""'
	call main_spec_tmp2.withvalue @
END

PROGRAM main_spec_child_create_done
BEGIN
	call main_spec_arraysize.setvalue class				///
		mainSPECChildDialogList.size
	call main_spec_arraysize.increment

	/* Store child dialog name */
	call mainSPECChildDialogList.store class			///
		main_spec_arraysize.value class main_spec_childdlg.value

	/* Store listbox display specification string */
	call main_spec_arraysize.withvalue STMP.format			///
		"resource LBL_SPECIFICATION_FMT" "@" ""

	call STMP.withvalue						///
		mainSPECCommandDisplayList.store class			///
		main_spec_arraysize.value "@"

	/* Store child dialog result string */
	call mainSPECCommandList.store class				///
		main_spec_arraysize.value				///
		class main_spec_child_result.value

	/* Store child dialog result string for final command
	   For disable/enable */
	call mainSPECCommandValues.store class				///
		main_spec_arraysize.value				///
		class main_spec_child_result.value

	/* Store disable/enable status */
	call mainSPECStatusList.store class				///
		main_spec_arraysize.value "active"

	call mainSPECCommandDisplayList.copyToArray main_spec_list
	call main.lb_spec_build.repopulate
	call STMP.withvalue main.lb_spec_build.setvalue "@"
END

PROGRAM main_spec_child_edit_done
BEGIN
	call mainSPECChildDialogList.findstr class			///
		main_spec_childdlg.value
	call main_spec_position.setvalue class				///
		mainSPECChildDialogList.position
	call main_spec_position.withvalue main_spec_tmp.setvalue	///
		class mainSPECStatusList.values[@]
	if main_spec_tmp.iseq("active") {
		call main_spec_position.withvalue STMP.format		///
			"resource LBL_SPECIFICATION_FMT" "@" ""
		call STMP.withvalue					///
			mainSPECCommandDisplayList.store class		///
			main_spec_position.value "@"
		call mainSPECCommandValues.store class			///
			main_spec_position.value class			///
			main_spec_child_result.value
		call STMP.withvalue main_spec_tmp2.setvalue "@"
	}
	else {
		call main_spec_position.withvalue STMP.format		///
			"resource LBL_SPECIFICATION_FMT" "@"
			"resource LBL_PAREN_DISABLED"

		call STMP.withvalue					///
			main_spec_tmp2.setvalue "@"

		call STMP.withvalue					///
			mainSPECCommandDisplayList.store		///
			class main_spec_position.value "@"
	}
	call mainSPECCommandList.store class				///
		main_spec_position.value class				///
		main_spec_child_result.value

	call mainSPECCommandDisplayList.copyToArray main_spec_list
	call main.lb_spec_build.repopulate
	call main.lb_spec_build.setvalue class main_spec_tmp2.value
END

PROGRAM main_spec_sel_changed
BEGIN
	call mainSPECCommandDisplayList.findstr class			///
		main.lb_spec_build.value
	call main_spec_position.setvalue class				///
		mainSPECCommandDisplayList.position
	call main_spec_position.withvalue main_spec_tmp.setvalue	///
		class mainSPECStatusList.values[@]
	if main_spec_position {
		call main.bu_spec_edit.enable
		call main_spec_position.withvalue			///
			main.tb_spec_note.setlabel			///
			class mainSPECCommandList.values[@]
	}

	if main_spec_tmp.iseq("disable") {
		call main.bu_spec_enable.enable
		call main.bu_spec_disable.disable
	}
	if main_spec_tmp.iseq("active") {
		call main.bu_spec_enable.disable
		call main.bu_spec_disable.enable
	}
END

PROGRAM main_spec_disable
BEGIN
	call mainSPECCommandDisplayList.findstr class			///
		main.lb_spec_build.value
	call main_spec_position.setvalue class				///
		mainSPECCommandDisplayList.position

	call main_spec_tmp.setvalue class main.lb_spec_build.value
	call mainSPECStatusList.store class				///
		main_spec_position.value "disable"
	call mainSPECCommandValues.store class main_spec_position.value ""
	call STMP.format "resource LBL_PAREN_DISABLED"
	call main_spec_tmp.append " "
	call main_spec_tmp.append class STMP.value
	call main_spec_tmp.withvalue STMP.setvalue "@"

	call main_spec_tmp.withvalue					///
		mainSPECCommandDisplayList.store			///
		class main_spec_position.value "@"

	call mainSPECCommandDisplayList.copyToArray main_spec_list
	call main.lb_spec_build.repopulate
	call main.lb_spec_build.setvalue class STMP.value
END

PROGRAM main_spec_enable
BEGIN
	call mainSPECCommandDisplayList.findstr class			///
		main.lb_spec_build.value
	call main_spec_position.setvalue class				///
		mainSPECCommandDisplayList.position

	call mainSPECStatusList.store class				///
		main_spec_position.value "active"
	call main_spec_position.withvalue				///
		mainSPECCommandValues.store				///
		class main_spec_position.value class			///
		mainSPECCommandList.values[@]

	call main_spec_position.withvalue STMP.format			///
		"resource LBL_SPECIFICATION_FMT" "@" ""
	call STMP.withvalue						///
		mainSPECCommandDisplayList.store			///
		class main_spec_position.value "@"

	call mainSPECCommandDisplayList.copyToArray main_spec_list
	call main_spec_position.withvalue				///
		main_spec_tmp2.setvalue class				///
		mainSPECCommandDisplayList.values[@]
	call main.lb_spec_build.repopulate
	call main.lb_spec_build.setvalue class main_spec_tmp2.value
END

PROGRAM main_funcmath_sel_change
BEGIN
	if main.cb_funcmath.isvisible() & main.cb_funcmath.isenabled() {
		if main.cb_funcmath.iseq("abs()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_ABS

		}
		if main.cb_funcmath.iseq("ceil()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_CEIL			
		}
		if main.cb_funcmath.iseq("cloglog()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_CLOGLOG

		}
		if main.cb_funcmath.iseq("comb()") {
			call main.tx_functiony.show
			call main.vl_functiony.show
			call main.bu_functiony.show
			call main.tx_functionx.setlabel resource LBL_SPECIFY_N
			call main.tx_functiony.setlabel resource LBL_SPECIFY_K
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_COMB

		}
		if main.cb_funcmath.iseq("digamma()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_DIGAMMA

		}
		if main.cb_funcmath.iseq("exp()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_EXP

		}
		if main.cb_funcmath.iseq("floor()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_FLOOR
		}
		if main.cb_funcmath.iseq("int()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_INT
		}
		if main.cb_funcmath.iseq("invcloglog()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_INVCLOGLOG
		}
		if main.cb_funcmath.iseq("invlogit()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_INVLOGIT
		}
		if main.cb_funcmath.iseq("ln()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_LN
		}
		if main.cb_funcmath.iseq("lnfactorial()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_N
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_LNFACTORIAL
		}
		if main.cb_funcmath.iseq("lngamma()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_LNGAMMA
		}
		if main.cb_funcmath.iseq("log()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_LOG
		}
		if main.cb_funcmath.iseq("log10()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_LOG10
		}
		if main.cb_funcmath.iseq("logit()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_LOGIT
		}
		if main.cb_funcmath.iseq("max()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_CONTENTS
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_MAX
		}
		if main.cb_funcmath.iseq("min()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_CONTENTS
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_MIN
		}
		if main.cb_funcmath.iseq("mod()") {
			call main.tx_functiony.show
			call main.vl_functiony.show
			call main.bu_functiony.show
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tx_functiony.setlabel resource LBL_SPECIFY_Y
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_MOD
		}
		if main.cb_funcmath.iseq("reldif()") {
			call main.tx_functiony.show
			call main.vl_functiony.show
			call main.bu_functiony.show
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tx_functiony.setlabel resource LBL_SPECIFY_Y
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_RELDIF
		}
		if main.cb_funcmath.iseq("round()") {
			call main.tx_functiony.show
			call main.vl_functiony.show
			call main.bu_functiony.show
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tx_functiony.setlabel resource LBL_SPECIFY_Y
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_ROUND
		}
		if main.cb_funcmath.iseq("sign()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_SIGN
		}
		if main.cb_funcmath.iseq("sqrt()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_SQRT
		}
		if main.cb_funcmath.iseq("sum()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_SUM
		}
		if main.cb_funcmath.iseq("trigamma()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_TRIGAMMA
		}
		if main.cb_funcmath.iseq("trunc()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_TRUNC
		}
	}
END

PROGRAM main_functri_sel_change
BEGIN
	if main.cb_functri.isvisible() & main.cb_funcmath.isenabled() {
		if main.cb_functri.iseq("acos()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_ACOS
		}
		if main.cb_functri.iseq("acosh()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_ACOSH
		}
		if main.cb_functri.iseq("asin()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_ASIN
		}
		if main.cb_functri.iseq("asinh()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_ASINH
		}
		if main.cb_functri.iseq("atan()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_ATAN
		}
		if main.cb_functri.iseq("atan2()") {
			call main.tx_functiony.show
			call main.vl_functiony.show
			call main.bu_functiony.show
			call main.tx_functionx.setlabel resource LBL_SPECIFY_Y
			call main.tx_functiony.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_ATAN2
		}
		if main.cb_functri.iseq("atanh()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_ATANH
		}
		if main.cb_functri.iseq("cos()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_COS
		}
		if main.cb_functri.iseq("cosh()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_COSH
		}
		if main.cb_functri.iseq("sin()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_SIN
		}
		if main.cb_functri.iseq("sinh()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_SINH
		}
		if main.cb_functri.iseq("tan()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_TAN
		}
		if main.cb_functri.iseq("tanh()") {
			call main.tx_functiony.hide
			call main.vl_functiony.hide
			call main.bu_functiony.hide
			call main.tx_functionx.setlabel resource LBL_SPECIFY_X
			call main.tb_descrpt.setlabel resource LBL_DESCRPT_TANH
		}
	}
END


PROGRAM main_add_expression
BEGIN
	call exp.setvalue ""
	if main.lb_category.iseq(linear) {
		call program linearform_output
	}
	if main.lb_category.iseq(vlist) {
		call program vlist_output
	}
	if main.lb_category.iseq(params) {
		call program params_output
	}
	if main.lb_category.iseq(randomeffects) {
		call program randomeffects_output
	}
	if main.lb_category.iseq(math) {
		call program funcmath_output
	}
	if main.lb_category.iseq(trigonometric) {
		call program functri_output
	}
	call exp.withvalue main.ed_exp.insert "@"
END

PROGRAM linearform_output
BEGIN
	call mainSPECCommandDisplayList.findstr class			///
		main.lb_spec_build.value
	call main_spec_position.setvalue class				///
		mainSPECCommandDisplayList.position
	call main_spec_position.withvalue main_spec_tmp.setvalue	///
		class mainSPECStatusList.values[@]
	if main_spec_tmp.iseq("active") {
		call main_spec_position.withvalue			///
			main_spec_tmp.setvalue				///
			class mainSPECCommandValues.values[@]
		call exp.setvalue " "
		call main_spec_tmp.withvalue exp.append "@"
	}
	else {
		stopbox stop resource MENL_EXP_MSGBOX_NO_ENABLED_LINEAR_COMBINATION
//		stopbox stop "No enabled linear combination specified"
	}

	//call mainSPECCommandValues.copyToString exp
END

PROGRAM vlist_output
BEGIN
	require main.vl_vlist
	call exp.setvalue " "
	call main.vl_vlist.withvalue exp.append "@"
END

PROGRAM params_output
BEGIN
	if main.rb_param {
		require main.ed_paramname
	}
	if main.rb_paramgr {
		require main.ed_grname
		require main.ed_paramgrname
	}
	if main.rb_paramexp {
		require main.ed_paramexpname
	}
	call exp.setvalue ""
	if main.rb_paramexp {
		if main.ck_paramexp_ts {
			call exp.append `" L.{"'
		}
		else {
			call exp.append `" {"'
		}
	}
	else {
		call exp.append `" {"'
	}
	if main.rb_param {
		call exp.append class main.ed_paramname.value
	}
	if main.rb_paramgr {
		call exp.append class main.ed_grname.value
		call exp.append ":"
		call exp.append class main.ed_paramgrname.value
	}
	if main.rb_paramexp {
		call exp.append class main.ed_paramexpname.value
		call exp.append ":"
	}
	call exp.append `"}"'
	if main.rb_paramts {
		call exp.setvalue "L._yhat"
	}
END

PROGRAM randomeffects_output
BEGIN
	if main.vn_intervar.iseq("(none)") & main.ck_cat {
		call create STRING _MSG_TMP
		call _MSG_TMP.format						///
			"resource LBL_MSGBOX_SPECIFY_RANDOM_COEFF_VAR_FMT"	///
			"resource LBL_RANDOM_COEFFICIENT_VARIABLE"		///
			"resource LBL_IDOT"
		stopbox stop "class _MSG_TMP.value"
//		stopbox stop `"You must specify a "Random-coefficient variable" when "i." is checked."'
	}
	call create STRING re
	call re.setvalue ""
	call program menl_exp_re_opts_output
	if re.isneq("") {
		call exp.append `" {"'
		call re.withvalue exp.append "@"
		call exp.append `"} "'
	}
END

PROGRAM funcmath_output
BEGIN
	if main.vl_functionx.isvisible() {
		require main.vl_functionx
	}
	if main.vl_functiony.isvisible() {
		require main.vl_functiony
	}
	call exp.setvalue " "
	if main.cb_funcmath.iseq("abs()") {
		call exp.append "abs("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_funcmath.iseq("ceil()") {
		call exp.append "ceil("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_funcmath.iseq("cloglog()") {
		call exp.append "cloglog("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_funcmath.iseq("comb()") {
		call exp.append "comb("
		call main.vl_functionx.withvalue exp.append @
		call exp.append ","
		call main.vl_functiony.withvalue exp.append @
	}
	if main.cb_funcmath.iseq("digamma()") {
		call exp.append "digamma("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_funcmath.iseq("exp()") {
		call exp.append "exp("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_funcmath.iseq("floor()") {
		call exp.append "floor("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_funcmath.iseq("int()") {
		call exp.append "int("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_funcmath.iseq("invcloglog()") {
		call exp.append "invcloglog("
		call main.vl_functionx.withvalue exp.append @
	}	
	if main.cb_funcmath.iseq("invlogit()") {
		call exp.append "invlogit("
		call main.vl_functionx.withvalue exp.append @
	}	
	if main.cb_funcmath.iseq("ln()") {
		call exp.append "ln("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_funcmath.iseq("lnfactorial()") {
		call exp.append "lnfactorial("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_funcmath.iseq("lngamma()") {
		call exp.append "lngamma("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_funcmath.iseq("log()") {
		call exp.append "log("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_funcmath.iseq("log10()") {
		call exp.append "log10("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_funcmath.iseq("logit()") {
		call exp.append "logit("
		call main.vl_functionx.withvalue exp.append @
	}
	
	if main.cb_funcmath.iseq("max()") {
		call exp.append "max("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_funcmath.iseq("min()") {
		call exp.append "min("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_funcmath.iseq("mod()") {
		call exp.append "mod("
		call main.vl_functionx.withvalue exp.append @
		call exp.append ","
		call main.vl_functiony.withvalue exp.append @
	}
	
	if main.cb_funcmath.iseq("reldif()") {
		call exp.append "reldif("
		call main.vl_functionx.withvalue exp.append @
		call exp.append ","
		call main.vl_functiony.withvalue exp.append @
	}
	if main.cb_funcmath.iseq("round()") {
		call exp.append "round("
		call main.vl_functionx.withvalue exp.append @
		call exp.append "["
		call exp.append ","
		call main.vl_functiony.withvalue exp.append @
		call exp.append "]"
	}
	if main.cb_funcmath.iseq("sign()") {
		call exp.append "sign("
		call main.vl_functionx.withvalue exp.append @
	}
	
	if main.cb_funcmath.iseq("sqrt()") {
		call exp.append "sqrt("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_funcmath.iseq("sum()") {
		call exp.append "sum("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_funcmath.iseq("trigamma()") {
		call exp.append "trigamma("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_funcmath.iseq("trunc()") {
		call exp.append "trunc("
		call main.vl_functionx.withvalue exp.append @
	}
	call exp.append ")"
END

PROGRAM functri_output
BEGIN
	if main.vl_functionx.isvisible() {
		require main.vl_functionx
	}
	if main.vl_functiony.isvisible() {
		require main.vl_functiony
	}
	call exp.setvalue " "
	if main.cb_functri.iseq("acos()") {
		call exp.append "acos("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_functri.iseq("acosh()") {
		call exp.append "acosh("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_functri.iseq("asin()") {
		call exp.append "asin("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_functri.iseq("asinh()") {
		call exp.append "asinh("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_functri.iseq("atan()") {
		call exp.append "atan("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_functri.iseq("atan2()") {
		call exp.append "atan2("
		call main.vl_functionx.withvalue exp.append @
		call exp.append ","
		call main.vl_functiony.withvalue exp.append @
	}
	if main.cb_functri.iseq("atanh()") {
		call exp.append "atanh("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_functri.iseq("cos()") {
		call exp.append "cos("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_functri.iseq("cosh()") {
		call exp.append "cosh("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_functri.iseq("sin()") {
		call exp.append "sin("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_functri.iseq("sinh()") {
		call exp.append "sinh("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_functri.iseq("tan()") {
		call exp.append "tan("
		call main.vl_functionx.withvalue exp.append @
	}
	if main.cb_functri.iseq("tanh()") {
		call exp.append "tanh("
		call main.vl_functionx.withvalue exp.append @
	}
	call exp.append ")"
END

PROGRAM main_functionx_show_child
BEGIN
	call create CHILD menl_exp AS funcx
	call funcx.setExitString funcx_res
	call funcx.setExitAction "program main_funcx_results"
END

PROGRAM main_funcx_results
BEGIN
	call funcx_res.withvalue main.vl_functionx.setvalue "@"
END

PROGRAM main_functiony_show_child
BEGIN
	call create CHILD menl_exp AS funcy
	call funcy.setExitString funcy_res
	call funcy.setExitAction "program main_funcy_results"
END

PROGRAM main_funcy_results
BEGIN
	call funcy_res.withvalue main.vl_functiony.setvalue "@"
END

PROGRAM command
BEGIN
	call eqcounter.withvalue PARENT.callthru "eqcounter.setvalue @"
	put main.ed_exp
END
