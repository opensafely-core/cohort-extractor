/*
	predict (after mlogit)

*!  VERSION 1.2.2  19mar2019

*/

VERSION 14.0

INCLUDE _std_large
INCLUDE _ht290
INCLUDE header

HELP hlp1, view("help mlogit postestimation")
RESET res1

SCRIPT PREINIT
BEGIN
        setscale_hadj resource MLOGIT_P_DLG_HSCALE
        create STRING STMP
        create DOUBLE k_out
        
        k_out.setvalue e(k_out)
		main.tx_vars.formatlabel					///
		"resource LBL_NEW_#_VAR_NAMES_FMT" "e(k_out)"
END

DIALOG main, label(resource PREDICT_DLG_TITLE) tabtitle(resource LBL_TAB_MAIN)
BEGIN
    TEXT     tx_vars		_lft	_top	_vlwd	.,		///
  	label(resource LBL_NEW_#_VAR_NAMES_FMT)
    EDIT     ed_vars		@	_ss	@	.,		///
  	label(resource LBL_NEW_#_VAR_NAMES_FMT)
    TEXT     tx_eq_vars		_lft	_top	_vlwd	.,		///
  	label(resource LBL_NEW_VARIABLE_NAMES_STUB)
    EDIT     ed_eq_vars		@	_ss	@	.,		///
  	label(resource LBL_NEW_VARIABLE_NAMES_STUB)
    TEXT     tx_var		_lft	_top	@	.,		///
  	label(resource LBL_NEW_VARIABLE_NAME)
    EDIT     ed_var		@	_ss	_vnwd	.,		///
  	label(resource LBL_NEW_VARIABLE_NAME) max(32)
    TEXT     tx_var1            _lft      _top      @         .,	///
      	label(resource LBL_NEW_VARIABLE_NAME)
    EDIT     ed_var1            @         _ss       _vnwd     .,	///
    	label(resource LBL_NEW_VARIABLE_NAME) max(32)
    TEXT     tx_var2            _lft      _top      @         .,	///
      	label(resource LBL_NEW_VARIABLE_NAME)
    EDIT     ed_var2            @         _ss       _vnwd     .,	///
    	label(resource LBL_NEW_VARIABLE_NAME) max(32)
    TEXT     tx_var3            _lft      _top      @         .,	///
      	label(resource LBL_NEW_VARIABLE_NAME)
    EDIT     ed_var3            @         _ss       _vnwd     .,	////
  	label(resource LBL_NEW_VARIABLE_NAME) max(32)
    TEXT     tx_type		_vlsep	_top	_vlr	.,		///
  	label(resource LBL_NEW_VARIABLE_TYPE)
    COMBOBOX cb_type		@	_ss	@	.,		///
  	dropdownlist							///
  	contents(type) default(c(type))					///
  	label(resource LBL_TYPE)


  GROUPBOX gb_opts           _lft      _ls       _iwd      _ht19,	///
	label(resource LBL_PRODUCE)
  RADIO    rb_p_all          _ilft     _ss       _ibwd     ., first	///
	option(pr)							///
	clickon("script offboth")					///
	label(resource LBL_PROBABILITIES_FOR_ALL_OUTCOMES)
  DEFINE   holdy@y
  RADIO    rb_p              _ilft     _ss       _comb3_2  .,		///
	option(pr)							///
	clickon("script oneon_p")					///
	label(resource LBL_PROBABILITY_FOR_A_SPECIFIC_OUTCOME)
  RADIO    rb_xb             @         _ss       @         .,		///
	option(xb)							///
	clickon("script oneon_xb")					///
	label(resource LBL_LINEAR_PREDICTION_XB)
  RADIO    rb_stdp           @         _ss       @         .,		///
	option(stdp)							///
	clickon("script oneon_stdp")					///
	label(resource LBL_STANDARD_ERROR_LINEAR_PREDICTION)
  RADIO    rb_stddp          @         _ss       @         ., 	 	///
	option(stddp)							///
	clickon("script oneon_stddp")					///
	label(resource LBL_STANDARD_ERROR_OF_THE_DIFFERENCE)
  RADIO    rb_score          _ilft     _ss       _comb3_2  ., last	///
	option(scores)							///
	clickon("script score_on")					///
	label(resource LBL_EQUATION_LEVEL_SCORES)		

  TEXT     tx_outcome1       _ilft3_3  holdy     _cwd3_2   .,		///
	label(resource LBL_OUTCOME)
  LISTBOX  lb_outcome1       @         _ss       @         _ht3,	///
	contents(ereturn depvar_outcomes)				///
	label(resource LBL_OUTCOME)
  TEXT     tx_outcome2       @         _vs3      @         .,		///
	label(resource MLOGIT_P_MAIN_TX_OUTCOME2)
  LISTBOX  lb_outcome2       @         _ss       @         _ht3,	///
	contents(ereturn depvar_outcomes)				///
	label(resource MLOGIT_P_MAIN_TX_OUTCOME2)
END

INCLUDE _p_gentype_sc
INCLUDE ifin
INCLUDE _type_list_fd

SCRIPT offboth
BEGIN
	script manyvars
	script eq1off
	script eq2off
END

SCRIPT manyvars
BEGIN
	main.tx_vars.show
	main.ed_vars.show
	main.tx_eq_vars.hide
	main.ed_eq_vars.hide
	main.tx_var.hide
	main.ed_var.hide
	main.tx_var1.hide
	main.ed_var1.hide
	main.tx_var2.hide
	main.ed_var2.hide
	main.tx_var3.hide
	main.ed_var3.hide
END

SCRIPT score_on
BEGIN
	script manyeqvars
	script eq1off
	script eq2off
END

SCRIPT manyeqvars
BEGIN
	main.tx_eq_vars.show
	main.ed_eq_vars.show
	main.tx_vars.hide
	main.ed_vars.hide
	main.tx_var.hide
	main.ed_var.hide
	main.tx_var1.hide
	main.ed_var1.hide
	main.tx_var2.hide
	main.ed_var2.hide
	main.tx_var3.hide
	main.ed_var3.hide
END

SCRIPT oneon_p
BEGIN
	script onevar_p
	script eq1on
	script eq2off
END

SCRIPT onevar_p
BEGIN
	main.tx_vars.hide
	main.ed_vars.hide
	main.tx_eq_vars.hide
	main.ed_eq_vars.hide
	main.tx_var.show
	main.ed_var.show
	main.tx_var1.hide
	main.ed_var1.hide
	main.tx_var2.hide
	main.ed_var2.hide
	main.tx_var3.hide
	main.ed_var3.hide
END

SCRIPT oneon_xb
BEGIN
	script onevar_xb
	script eq1on
	script eq2off
END

SCRIPT onevar_xb
BEGIN
	main.tx_vars.hide
	main.ed_vars.hide
	main.tx_eq_vars.hide
	main.ed_eq_vars.hide
	main.tx_var.hide
	main.ed_var.hide
	main.tx_var2.hide
	main.ed_var2.hide
	main.tx_var3.hide
	main.ed_var3.hide
	main.tx_var1.show
	main.ed_var1.show	
END

SCRIPT oneon_stdp
BEGIN
	script onevar_stdp
	script eq1on
	script eq2off
END

SCRIPT onevar_stdp
BEGIN
	main.tx_vars.hide
	main.ed_vars.hide
	main.tx_eq_vars.hide
	main.ed_eq_vars.hide
	main.tx_var.hide
	main.ed_var.hide
	main.tx_var1.hide
	main.ed_var1.hide
	main.tx_var2.show
	main.ed_var2.show
	main.tx_var3.hide
	main.ed_var3.hide	
END


SCRIPT oneon_stddp
BEGIN
	script onevar_stddp
	script eq1on
	script eq2on
END

SCRIPT onevar_stddp
BEGIN
	main.tx_vars.hide
	main.ed_vars.hide
	main.tx_eq_vars.hide
	main.ed_eq_vars.hide
	main.tx_var.hide
	main.ed_var.hide
	main.tx_var1.hide
	main.ed_var1.hide
	main.tx_var2.hide
	main.ed_var2.hide
	main.tx_var3.show
	main.ed_var3.show	
END

SCRIPT eq2on
BEGIN
	main.tx_outcome2.enable
	main.lb_outcome2.enable
END

SCRIPT eq2off
BEGIN
	main.tx_outcome2.disable
	main.lb_outcome2.disable
END

SCRIPT eq1on
BEGIN
	main.tx_outcome1.enable
	main.lb_outcome1.enable
END

SCRIPT eq1off
BEGIN
	main.tx_outcome1.disable
	main.lb_outcome1.disable
END


PROGRAM command
BEGIN
	put "predict "
	if main.cb_type.isdefault() {
			if main.rb_p_all {
				call create ARRAY tmpArray
				call create STRING tmpStr
				call create DOUBLE tmpSize
				call main.ed_vars.withvalue tmpStr.setvalue @
				call tmpStr.tokenizeOnStr tmpArray " "
				call tmpSize.storeClsArraySize tmpArray
					
				if  tmpSize.iseq(0) {			
					call create STRING _MSG_TMP
					call STMP.format					///
						"resource LBL_NEW_#_VAR_NAMES_FMT" "e(k_cat)" 
					call STMP.withvalue _MSG_TMP.format			///
						"resource LBL_MSGBOX_ON_TAB_REQUIRED_FMT" "Main" "@"
					stopbox stop "class _MSG_TMP.value"
	// On the "Main" tab, "Specify 5 new variable names or variables stub*" must be filled in.
				}
			
				require main.ed_vars
				put main.ed_vars " "
			}	
			if main.rb_score {
				require main.ed_eq_vars
				put main.ed_eq_vars " "
			}
	
			if main.rb_p  {
				require main.ed_var
				put main.ed_var " "				
			}
			if main.rb_xb  {
				require main.ed_var1
				put main.ed_var1 " "		
			}
			if main.rb_stdp  {
				require main.ed_var2
				put main.ed_var2 " "
			}
			if main.rb_stddp  {
				require main.ed_var3
				put main.ed_var3 " "				
			}		
		}
		
		if ! main.cb_type.isdefault() {
			put main.cb_type " " "("
			if main.rb_p_all {
				require main.ed_vars
				put main.ed_vars
			}
			if main.rb_score {
				put main.ed_eq_vars
			}		
			if main.rb_xb {
				require main.ed_var1
				put main.ed_var1
			}
			if main.rb_stdp {
				require main.ed_var2
				put main.ed_var2
			}
			if main.rb_stddp {
				require main.ed_var3
				put main.ed_var3
			}
			put ") "
	}
	
	INCLUDE _ifin_pr
	beginoptions
		if !main.rb_p_all & !main.rb_score {
			put "outcome("
			require main.lb_outcome1
			put main.lb_outcome1
			if main.rb_stddp {
				require main.lb_outcome2
				put ", " main.lb_outcome2
			}
			put ") "
		}
		option radio(main rb_p_all rb_p rb_xb rb_stdp /*
			*/ rb_stddp rb_score)
	endoptions
END
