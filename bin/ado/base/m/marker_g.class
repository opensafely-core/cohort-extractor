/*                                 marker_g

	a view of a single marker (may be labeled)

        This is a subview.  When drawn, assumes that the appropriate x and y
        scales have already been set.

*/
*! version 1.2.1  29jan2015

version 8

class {
	double x
	double y
	label		= ""

	draw_view       = .yesno.new, style(yes)

	dragable	= 1

	dialog		= "marker"

	gdi2_y0		= (.)			// position drawn (lower left)
	gdi2_x0		= (.)			// units in the gdi metric
	gdi2_y1		= (.)			// upper-right corner drawn
	gdi2_x1		= (.)			// 2nd set, if labeled

	class seriesstyle style

} , inherit(subview)


/*--------------------------------------------------------------------------*/
/*
      Usage:  .marker_g.new x y [, label() style(stylename) styleref(name|key)]

	if reference is specified the style is assigned by reference rather
	than by copying (by value)
*/

program new

	syntax anything(name=poslist id="2 position numbers") [ , 	///
		LABel(string asis) Style(passthru) STYLEREF(passthru) * ]

	.grid_dragable	= 0
	.deleted	= 0

	numlist "`poslist'" , min(2) max(2) missingok	// Set position
	local poslist `r(numlist)'
	gettoken x y : poslist
	.x = (`x')
	.y = (`y')
	.label = `"`label'"'

	if "`style'" == "" & "`styleref'" == "" {
		local style style(scheme)
	}

	.setstyle , `style' `styleref' `options'
end


// --------------------------------------------------------------------------

program draw
	args style

	if (! `.draw_view.istrue')  exit				// Exit

	if ("`style'" == "")  local style style

	.`style'.marker.setgdifull

	if `.`style'.marker.drawn' {
		gdi point `.x' `.y' 
	}
	else {
		gdi moveto `.x' `.y'
	}

	local sz2 = `gdi(gbeta)' * `.`style'.marker.size.gmval' / 2
	.set_gdi_posn_notrans `=`gdi(ycur)'-`sz2'' `=`gdi(xcur)'-`sz2''	///
			      `=`gdi(ycur)'+`sz2'' `=`gdi(xcur)'+`sz2''

	if `"`.label'"' != `""' {

		.gdi2_y0 = `.gdi_y0'
		.gdi2_x0 = `.gdi_x0'
		.gdi2_y1 = `.gdi_y1'
		.gdi2_x1 = `.gdi_x1'
		
		.`style'.label.setgdifull

		local angle `.`style'.label.position.angle'
		local shift = `.`style'.marker.size.gmval' / 2 + 	///
			      `.`style'.label.textgap.gmval'
		local yshift = `shift' * sin(`angle')
		local xshift = `shift' * cos(`angle')

		gdi gm_rmoveto `xshift' `yshift'

		gdi extctext `.label'
		.set_gdi_posn_notrans `gdi(y0text)' `gdi(x0text)'	///
				      `gdi(y1text)' `gdi(x1text)'

	}
end



// ----------------------------------------------------------------------------
// Determine if a position is in/on the view

program at_pos

	class exit = 0`.AtClickedPos'
end


// ---------------------------------------------------------------------------
// Returns true if the view is at the clicked position

program AtClickedPos

	if (0`.Super.AtClickedPos') class exit = 1

	if (`"`.label'"' == `""')    class exit = 0

	if (! 0`.draw_view.istrue')  class exit = 0
	if (0`.locked')  	     class exit = 0	
	if (0`.Local.deleted' == 1)  class exit = 0	

	class exit = (0`._Gr_Global.click_y' > `.gdi2_y0' &		///
		      0`._Gr_Global.click_y' < `.gdi2_y1' &		///
		      0`._Gr_Global.click_x' > `.gdi2_x0' &		///
		      0`._Gr_Global.click_x' < `.gdi2_x1')
end



// ----------------------------------------------------------------------------
// Respond to a .DragBy by moving the position

program DragBy
	args y_shift x_shift

	.y = `.y' + `y_shift'
	.x = `.x' + `x_shift'
end

// ----------------------------------------------------------------------------
// Possibly map supplied name to one appropriate for the object browser

program BrowserName
	args name

	if bsubstr("`name'",1,14) == "added_markers[" {
		gettoken pre index: name , parse("[")
		class exit "added markers.markers`index'"
	}
end

// ----------------------------------------------------------------------------
// Sets the extnet to the graphics editor.  marker_g has a custom extent.

program gedi_extent

	local y0 = `.gdi_y0'
	local x0 = `.gdi_x0'
	local y1 = `.gdi_y1'
	local x1 = `.gdi_x1'

	if (`"`.label'"' != `""') {
		local y0 = min(`y0', `.gdi2_y0')
		local x0 = min(`x0', `.gdi2_x0')
		local y1 = max(`y1', `.gdi2_y1')
		local x1 = max(`x1', `.gdi2_x1')
	}

	if (`y0' < . & `x0' < . & `y1' < . & `x1' < .) {
		_gedi extent "`.dialog'" "`._Gr_Global.edit_object'"	///
			     `x0' `y0' `x1' `y1'

if ("$grdebug"!="") di in white `"_gedi extent "`.dialog'" "`._Gr_Global.edit_object'" `x0' `y0' `x1' `y1'"'
	}

	class exit = 1

end
