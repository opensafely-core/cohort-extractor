/*
	irt model options

*!  VERSION 1.1.6  31jan2019
*/

VERSION 16.0

INCLUDE _std_xlarge
DEFINE _dlght 330
INCLUDE header

HELP hlp1, view("help irt")
RESET res1

SCRIPT PREINIT
BEGIN
	create STRING parent_name
	create STRING model_name
	create STRING byoutput
	create STRING svyoutput
	create STRING m_name
	create BOOLEAN hassubpop
	create BOOLEAN svyhasoptions
	create DOUBLE isSvy
	create STRING model_svyset

	model_name.setvalue "irt "
	parent_name.setvalue class PARENT._dlg_rsrcname
	parent_name.withvalue model_name.append		///
		class @.ModelDisplayName.value
	model_name.append " - Advanced options"
	model_name.withvalue settitle `"@"'
	parent_name.withvalue isSvy.setvalue		///
		class @.hasSvy.value
	parent_name.withvalue m_name.setvalue		///
		class @.ModelDisplayName.value
	
	program check_model
	script se_createAsSvyInternalML
	setscale_hadj resource IRT_MODEL_OPTIONS_DLG_HSCALE
END

PROGRAM check_model
BEGIN
	if m_name.isneq("3pl") {
		call model.ck_sepguessing.hide
		call model.ck_gsepguessing.hide
	}
	else {
		call model.ck_sepguessing.show
		call model.ck_gsepguessing.show
	}
	if isSvy {
		call se.ck_svy.seton
	}
	else {
		call se.ck_svy.setoff
	}
END

PROGRAM POSTINIT_PROGRAM
BEGIN
	call script sub_set_by_on
	if isSvy {
		call se.ck_svy.seton
	}
	else {
		call se.ck_svy.setoff
	}
	call program se_setFinalInitState
	call program model_cns_setup
END

DIALOG model, tabtitle(resource LBL_TAB_MODEL)
BEGIN
  DEFINE cns_y _top
  INCLUDE irt_model_opt_cns

  CHECKBOX ck_listwise			_lft	+45	_iwd	.,	///
	option(listwise)						///
	label(resource IRT_MODEL_OPTIONS_MODEL_CK_LISTWISE)
  CHECKBOX ck_sepguessing		@	_ms	@	.,	///
	option(sepguessing)						///
	label(resource IRT_MODEL_OPTIONS_MODEL_CK_SEPGUESSING)
  CHECKBOX ck_gsepguessing		@	_ms	@	.,	///
	option(gsepguessing)						///
	label(resource IRT_MODEL_OPTIONS_MODEL_CK_GSEPGUESSING)
END

SCRIPT model_cns_hide_all
BEGIN
	model.rb_irt.hide
	model.rb_slope_intercept.hide

	model.tx_discrim.hide
	model.ed_discrim.hide
	model.tx_diff.hide
	model.ed_diff.hide
	model.tx_guess.hide
	model.ed_guess.hide

	model.tx_alpha.hide
	model.ed_alpha.hide
	model.tx_beta.hide
	model.ed_beta.hide

	model.tx_discrim1.hide
	model.ed_discrim1.hide
	model.tx_discrim2.hide
	model.ed_discrim2.hide
	model.tx_discrim3.hide
	model.ed_discrim3.hide
	model.tx_discrim4.hide
	model.ed_discrim4.hide
	model.tx_diff1.hide
	model.ed_diff1.hide
	model.tx_diff2.hide
	model.ed_diff2.hide
	model.tx_diff3.hide
	model.ed_diff3.hide
	model.tx_diff4.hide
	model.ed_diff4.hide
END

PROGRAM model_cns_setup
BEGIN
	call create STRING sTMP
	call script model_cns_hide_all
	call model.ck_cns.show
	call model.ck_cns.setposition . . . 155
	call model.ck_listwise.setposition . 180
	call model.ck_sepguessing.setposition . 205
	call model.ck_gsepguessing.setposition . 230

	if m_name.iseq("1pl") {
		call model.rb_irt.show
		call model.rb_slope_intercept.show
		call model.tx_discrim.show
		call model.ed_discrim.show
		call model.tx_diff.show
		call model.ed_diff.show
		call model.tx_guess.hide
		call model.ed_guess.hide

		call model.tx_alpha.show
		call model.ed_alpha.show
		call model.tx_beta.show
		call model.ed_beta.show
	}
	if m_name.iseq("2pl") {
		call model.rb_irt.show
		call model.rb_slope_intercept.show
		call model.tx_discrim.show
		call model.ed_discrim.show
		call model.tx_diff.show
		call model.ed_diff.show
		call model.tx_guess.hide
		call model.ed_guess.hide

		call model.tx_alpha.show
		call model.ed_alpha.show
		call model.tx_beta.show
		call model.ed_beta.show
	}
	if m_name.iseq("3pl") {
		call model.rb_irt.show
		call model.rb_slope_intercept.show
		call model.tx_discrim.show
		call model.ed_discrim.show
		call model.tx_diff.show
		call model.ed_diff.show
		call model.tx_guess.show
		call model.ed_guess.show

		call model.tx_alpha.show
		call model.ed_alpha.show
		call model.tx_beta.show
		call model.ed_beta.show
	}
	if m_name.iseq("grm") |	m_name.iseq("pcm") |		///
		m_name.iseq("gpcm") | m_name.iseq("rsm") {
		call model.ck_cns.setposition . . . 120
		call model.ck_listwise.setposition . 140
		call model.tx_discrim1.show
		call model.ed_discrim1.show
		call model.tx_diff1.show
		call model.ed_diff1.show
		call model.tx_diff2.show
		call model.ed_diff2.show
		call model.tx_diff3.show
		call model.ed_diff3.show
		call model.tx_diff4.show
		call model.ed_diff4.show
		call sTMP.format "resource LBL_DISCRIMINATION"
		call sTMP.append " (a):"
		call sTMP.withvalue model.tx_discrim1.setlabel "@"
		call sTMP.withvalue model.ed_discrim1.setlabel "@"
	}
	if m_name.iseq("nrm") {
		call model.ck_cns.setposition . . . 120
		call model.ck_listwise.setposition . 140
		call model.tx_discrim1.show
		call model.ed_discrim1.show
		call model.tx_discrim2.show
		call model.ed_discrim2.show
		call model.tx_discrim3.show
		call model.ed_discrim3.show
		call model.tx_discrim4.show
		call model.ed_discrim4.show
		call model.tx_diff1.show
		call model.ed_diff1.show
		call model.tx_diff2.show
		call model.ed_diff2.show
		call model.tx_diff3.show
		call model.ed_diff3.show
		call model.tx_diff4.show
		call model.ed_diff4.show
		call sTMP.format "resource LBL_DISCRIMINATION"
		call sTMP.append " (a1):"
		call sTMP.withvalue model.tx_discrim1.setlabel "@"
		call sTMP.withvalue model.ed_discrim1.setlabel "@"
	}
	if m_name.iseq("hybrid") {
		call model.ck_cns.hide
		call model.ck_listwise.setposition . 20
	}

	call sTMP.format "resource LBL_DISCRIMINATION"
	call sTMP.append " (a):"
	call sTMP.withvalue model.tx_discrim.setlabel "@"
	call sTMP.withvalue model.ed_discrim.setlabel "@"

	call sTMP.format "resource LBL_DIFFICULTY"
	call sTMP.append " (b):"
	call sTMP.withvalue model.tx_diff.setlabel "@"
	call sTMP.withvalue model.ed_diff.setlabel "@"

	call sTMP.format "resource LBL_GUESSING"
	call sTMP.append " (c):"
	call sTMP.withvalue model.tx_guess.setlabel "@"
	call sTMP.withvalue model.ed_guess.setlabel "@"

	call sTMP.format "resource LBL_SLOPE"
	call sTMP.append " (alpha):"
	call sTMP.withvalue model.tx_alpha.setlabel "@"
	call sTMP.withvalue model.ed_alpha.setlabel "@"

	call sTMP.format "resource LBL_INTERCEPT"
	call sTMP.append " (beta):"
	call sTMP.withvalue model.tx_beta.setlabel "@"
	call sTMP.withvalue model.ed_beta.setlabel "@"

	call sTMP.format "resource LBL_DISCRIMINATION"
	call sTMP.append " (a2):"
	call sTMP.withvalue model.tx_discrim2.setlabel "@"
	call sTMP.withvalue model.ed_discrim2.setlabel "@"
	call sTMP.format "resource LBL_DISCRIMINATION"
	call sTMP.append " (a3):"
	call sTMP.withvalue model.tx_discrim3.setlabel "@"
	call sTMP.withvalue model.ed_discrim3.setlabel "@"
	call sTMP.format "resource LBL_DISCRIMINATION"
	call sTMP.append " (a4):""
	call sTMP.withvalue model.tx_discrim4.setlabel "@"
	call sTMP.withvalue model.ed_discrim4.setlabel "@"
	call sTMP.format "resource LBL_DIFFICULTY"
	call sTMP.append " (b1):"
	call sTMP.withvalue model.tx_diff1.setlabel "@"
	call sTMP.withvalue model.ed_diff1.setlabel "@"
	call sTMP.format "resource LBL_DIFFICULTY"
	call sTMP.append " (b2):"
	call sTMP.withvalue model.tx_diff2.setlabel "@"
	call sTMP.withvalue model.ed_diff2.setlabel "@"
	call sTMP.format "resource LBL_DIFFICULTY"
	call sTMP.append " (b3):"
	call sTMP.withvalue model.tx_diff3.setlabel "@"
	call sTMP.withvalue model.ed_diff3.setlabel "@"
	call sTMP.format "resource LBL_DIFFICULTY"
	call sTMP.append " (b4):"
	call sTMP.withvalue model.tx_diff4.setlabel "@"
	call sTMP.withvalue model.ed_diff4.setlabel "@"
END

PROGRAM model_cns_on
BEGIN
	if m_name.iseq("1pl") {
		call program model_1pl_2pl_on
	}
	if m_name.iseq("2pl") {
		call program model_1pl_2pl_on
	}
	if m_name.iseq("3pl") {
		call program model_3pl_on
	}
	if m_name.iseq("grm") | m_name.iseq("pcm") |		///
		m_name.iseq("gpcm") | m_name.iseq("rsm") |	///
		m_name.iseq("nrm") {
		call model.tx_discrim1.enable
		call model.ed_discrim1.enable
		call model.tx_discrim2.enable
		call model.ed_discrim2.enable
		call model.tx_discrim3.enable
		call model.ed_discrim3.enable
		call model.tx_discrim4.enable
		call model.ed_discrim4.enable
		call model.tx_diff1.enable
		call model.ed_diff1.enable
		call model.tx_diff2.enable
		call model.ed_diff2.enable
		call model.tx_diff3.enable
		call model.ed_diff3.enable
		call model.tx_diff4.enable
		call model.ed_diff4.enable

	}
END

SCRIPT model_cns_off
BEGIN
	model.rb_irt.disable
	model.rb_slope_intercept.disable

	model.tx_discrim.disable
	model.ed_discrim.disable
	model.tx_diff.disable
	model.ed_diff.disable
	model.tx_guess.disable
	model.ed_guess.disable

	model.tx_alpha.disable
	model.ed_alpha.disable
	model.tx_beta.disable
	model.ed_beta.disable

	model.tx_discrim1.disable
	model.ed_discrim1.disable
	model.tx_discrim2.disable
	model.ed_discrim2.disable
	model.tx_discrim3.disable
	model.ed_discrim3.disable
	model.tx_discrim4.disable
	model.ed_discrim4.disable
	model.tx_diff1.disable
	model.ed_diff1.disable
	model.tx_diff2.disable
	model.ed_diff2.disable
	model.tx_diff3.disable
	model.ed_diff3.disable
	model.tx_diff4.disable
	model.ed_diff4.disable
END

PROGRAM model_1pl_2pl_on
BEGIN
	call model.rb_irt.enable
	call model.rb_slope_intercept.enable
	if model.rb_irt {
		call program model_irt_on
	}
	else {
		call program model_slope_intercept_on
	}
END

PROGRAM model_3pl_on
BEGIN
	call model.rb_irt.enable
	call model.rb_slope_intercept.enable
	if model.rb_irt  {
		call program model_irt_on
	}
	else {
		call program model_slope_intercept_on
	}
END

PROGRAM model_irt_on
BEGIN
	if model.ck_cns {
		call model.tx_discrim.enable
		call model.ed_discrim.enable
		call model.tx_diff.enable
		call model.ed_diff.enable
		call model.tx_guess.enable
		call model.ed_guess.enable

		call model.tx_alpha.disable
		call model.ed_alpha.disable
		call model.tx_beta.disable
		call model.ed_beta.disable
	}
END

SCRIPT model_slope_intercept_on
BEGIN
	if model.ck_cns {
		call model.tx_discrim.disable
		call model.ed_discrim.disable
		call model.tx_diff.disable
		call model.ed_diff.disable
		call model.tx_guess.disable
		call model.ed_guess.disable

		call model.tx_alpha.enable
		call model.ed_alpha.enable
		call model.tx_beta.enable
		call model.ed_beta.enable
	}
END

PROGRAM cns_output
BEGIN
	if model.ck_cns {
		put "cns("
		if m_name.iseq("1pl") | m_name.iseq("2pl") | m_name.iseq("3pl"){
			if model.rb_irt {
				if m_name.isneq("3pl") {
					if model.ed_discrim.iseq("") &	///
						model.ed_diff.iseq("") {
							call create STRING _MSG_TMP
							call _MSG_TMP.format 			   	 ///
								"resource LBL_MSGBOX_SPECIFY_EITHER_FMT" ///
								"resource LBL_DISCRIMINATION"	   	 ///
								"resource LBL_DIFFICULTY"
							stopbox stop "class _MSG_TMP.value"
//stopbox stop `"You must specify either "Discrimination" or "Difficulty"."'
					}
				}
				else {
					if model.ed_discrim.iseq("") &	///
						model.ed_diff.iseq("") & ///
						model.ed_guess.iseq("") {
							call create STRING _MSG_TMP
							call _MSG_TMP.format 			   	///
								"resource LBL_MSGBOX_SPECIFY_THREE_FMT" ///
								"resource LBL_DISCRIMINATION"	   	///
								"resource LBL_DIFFICULTY"		///
								"resource LBL_GUESSING"
						stopbox stop "class _MSG_TMP.value"
//stopbox stop `"You must specify either "Discrimination", "Difficulty", or "Guessing"."'
					}
				} 
				if model.ed_discrim  {
					put "a@"
					put model.ed_discrim
				}
				if model.ed_diff {
					put " b@"
					put model.ed_diff
				}
				if model.ed_guess {
					put " c@"
					put model.ed_guess
				}
			}
			if model.rb_slope_intercept {
				if model.ed_alpha.iseq("") &		///
					model.ed_beta.iseq("") {
						call create STRING _MSG_TMP
						call _MSG_TMP.format 			   	 ///
							"resource LBL_MSGBOX_SPECIFY_EITHER_FMT" ///
							"resource LBL_SLOPE"	   		 ///
							"resource LBL_INTERCEPT"
						stopbox stop "class _MSG_TMP.value"
//stopbox stop `"You must specify either "Slope" or "Intercept"."'
				} 
				if model.ed_alpha {
					put "alpha@"
					put model.ed_alpha
				}
				if model.ed_beta {
					put " beta@"
					put model.ed_beta
				}
			}
		}
		if m_name.iseq("grm") | m_name.iseq("pcm") |		///
			m_name.iseq("gpcm") | m_name.iseq("rsm") {
			if model.ed_discrim1.iseq("") &			///
				model.ed_diff1.iseq("") &		///
				model.ed_diff2.iseq("") &		///
				model.ed_diff3.iseq("") &		///
				model.ed_diff4.iseq("") {
					call create STRING _MSG_TMP
					call _MSG_TMP.format 			   		///
						"resource LBL_MSGBOX_SPECIFY_EITHER_OR_ONE_FMT"	///
						"resource LBL_DISCRIMINATION"	   		///
						"resource LBL_DIFFICULTY"
				stopbox stop "class _MSG_TMP.value"
//stopbox stop `"You must specify either "Discrimination" or one "Difficulty"."'
			} 
			if model.ed_discrim1 {
				put "a@"
				put model.ed_discrim1
			}

			if model.ed_diff1 {
				put " b1@"
				put model.ed_diff1
			}
			if model.ed_diff2 {
				put " b2@"
				put model.ed_diff2
			}
			if model.ed_diff3 {
				put " b3@"
				put model.ed_diff3
			}
			if model.ed_diff4 {
				put " b4@"
				put model.ed_diff4
			}
		}
		if m_name.iseq("nrm") {
			if model.ed_discrim1.iseq("") &			///
				model.ed_discrim2.iseq("") &		///
				model.ed_discrim3.iseq("") &		///
				model.ed_discrim4.iseq("") &		///
				model.ed_diff1.iseq("") &		///
				model.ed_diff2.iseq("") &		///
				model.ed_diff3.iseq("") &		///
				model.ed_diff4.iseq("") {
					call create STRING _MSG_TMP
					call _MSG_TMP.format 			   		    ///
						"resource LBL_MSGBOX_SPECIFY_EITHER_ONE_OR_ONE_FMT" ///
						"resource LBL_DISCRIMINATION"	   		    ///
						"resource LBL_DIFFICULTY"
				stopbox stop "class _MSG_TMP.value"
//stopbox stop `"You must specify either one "Discrimination" or one "Difficulty"."'
			} 
			if model.ed_discrim1 {
				put "a1@"
				put model.ed_discrim1
			}
			if model.ed_discrim2 {
				put " a2@"
				put model.ed_discrim2
			}
			if model.ed_discrim3 {
				put " a3@"
				put model.ed_discrim3
			}
			if model.ed_discrim4 {
				put " a4@"
				put model.ed_discrim4
			}

			if model.ed_diff1 {
				put " b1@"
				put model.ed_diff1
			}
			if model.ed_diff2 {
				put " b2@"
				put model.ed_diff2
			}
			if model.ed_diff3 {
				put " b3@"
				put model.ed_diff3
			}
			if model.ed_diff4 {
				put " b4@"
				put model.ed_diff4
			}
		}
		put ")"
	}
END

INCLUDE sub_by_ifin_over_subpop
INCLUDE weights_fpi
INCLUDE se

SCRIPT rpt_POSTINIT
BEGIN
	create STRING rpt_bu_fmtcoefResults
	program rpt_bu_fmtcoef_ckResults
END

DIALOG rpt, tabtitle(resource LBL_TAB_REPORTING)
BEGIN
  DEFINE _x _lft
  DEFINE _cx _spr
  DEFINE _y _top
  INCLUDE _sp_level
  
  CHECKBOX ck_notable 			_lft    _ls	_iwd	.,	///
	option("notable")						///
  	label(resource LBL_SUPPRESS_COEFFICIENT_TABLE)

  CHECKBOX ck_noheader 			_lft    _ms	_iwd	.,	///
	option("noheader")						///
  	label(resource LBL_SUPPRESS_OUTPUT_HEADER)

  DEFINE _x _lft
  DEFINE _y _ls
  DEFINE _cx _iwd
  INCLUDE _report_columns
	
  DEFINE _x _lft
  DEFINE _y _ls
  INCLUDE _bu_coef_table_reporting
END

INCLUDE fmt_coef_table_reporting_pr

DIALOG int,  tabtitle(resource LBL_TAB_INTEGRATION)
BEGIN
  TEXT	tx_intm				_lft	_top	_iwd	.,	///
	label(resource LBL_INTEGRATION_METHOD)
  COMBOBOX cb_intm			@	_ss	325	.,	///
	dropdownlist							///
	contents(int_intm_contents)					///
	values(int_intm_values)						///
	onselchangelist(int_intm_sel)					///
	option(intmethod)						///
	label(resource LBL_INTEGRATION_METHOD)

  SPINNER sp_intp			@	_ls	_spwd	.,	///
	min(1) default(7)						///
	option(intpoints)						///
	label(resource LBL_NUMBER_OF_INTEGRATION_POINTS)
  TEXT	tx_intp				_spsep	@	200	.,	///
	label(resource LBL_NUMBER_OF_INTEGRATION_POINTS)
END

LIST int_intm_contents
BEGIN
	resource LBL_DEFAULT
	resource LBL_MEAN_VARIANCE_ADAPTIVE_GAUSS_HERMITE_QUAD
	resource LBL_MODE_CURVATURE_ADAPTIVE_GAUSS_HERMITE_QUAD
	resource LBL_NONADAPTIVE_GAUSS_HERMITE_QUADRATURE
END

LIST int_intm_values
BEGIN
	""
	"mvaghermite"
	"mcaghermite"
	"ghermite"
END

INCLUDE max_ml

PROGRAM get_by_output
BEGIN
	call PARENT.callthru `"pbyoutput.setvalue `""'"'
	if sub.ck_by.isvisible() & sub.ck_by {
		require sub.vl_by
		call byoutput.append "by "
		call sub.vl_by.withvalue byoutput.append @
		call byoutput.append ", sort: "
		call byoutput.withvalue PARENT.callthru		///
			`"pbyoutput.setvalue `"@"'"'
	}
END

PROGRAM get_svyoutput
BEGIN
	call PARENT.callthru `"psvyoutput.setvalue `""'"'
	if se.ck_svy {
		call hassubpop.setfalse
		call svyhasoptions.setfalse
		
		call svyoutput.append "svy" 
		if se_svyvcetype.equals(resource SE_LBL_LINEARIZED) {
			call svyoutput.append " linearized"
		}
		if se_svyvcetype.equals(resource SE_LBL_BOOTSTRAP) {
			call svyoutput.append " bootstrap"
		}
		if se_svyvcetype.equals(resource SE_LBL_BRR) {
			call svyoutput.append " brr"
		}
		if se_svyvcetype.equals(resource SE_LBL_JACKKNIFE) {
			call svyoutput.append " jackknife"
		}
		if se_svyvcetype.equals(resource SE_LBL_SDR) {
			call svyoutput.append " sdr"
		}
		
		if sub.vn_subpop.isvisible() | sub.ex_subif.isvisible() {
			if sub.vn_subpop | sub.ex_subif {
				call hassubpop.settrue
			}
		}
		if hassubpop {
			call svyhasoptions.settrue
		}
		if se.en_dof.isvisible() & se.en_dof {
			call svyhasoptions.settrue
		}
		if se.ck_mse.isvisible() & se.ck_mse {
			call svyhasoptions.settrue
		}
		if se.ck_nodots.isvisible() & se.ck_nodots {
			call svyhasoptions.settrue
		}
		if se.ed_bsn.isvisible() & se.ed_bsn {
			call svyhasoptions.settrue
		}
		if se.ed_hadamard.isvisible() & se.ed_hadamard {
			call svyhasoptions.settrue
		}
		if se.ed_fay.isvisible() & se.ed_fay {
			call svyhasoptions.settrue
		}
		if svyhasoptions {
			call svyoutput.append ","
		}
		
		if hassubpop {
			call svyoutput.append " subpop("
			if sub.vn_subpop {
				call sub.vn_subpop.withvalue svyoutput.append @
			}
			if sub.ex_subif {
				call svyoutput.append " if "
				call svyoutput.append sub.ex_subif
			}
			call svyoutput.append ")"
		}
		if se.en_dof.isvisible() & se.en_dof {
			call svyoutput.append " dof("
			call se.en_dof.withvalue svyoutput.append @
			call svyoutput.append ")"
		}
		if se.ck_mse.isvisible() & se.ck_mse {
			call svyoutput.append " mse"
		}
		if se.ck_nodots.isvisible() & se.ck_nodots {
			call svyoutput.append " nodots"
		}
		if se.ed_bsn.isvisible() & se.ed_bsn {
			call svyoutput.append " bsn("
			call se.ed_bsn.withvalue svyoutput.append @
			call svyoutput.append ")"
		}
		if se.ed_hadamard.isvisible() & se.ed_hadamard {
			call svyoutput.append " hadamard("
			call se.ed_hadamard.withvalue svyoutput.append @
			call svyoutput.append ")"
		}
		if se.ed_fay.isvisible() & se.ed_fay {
			call svyoutput.append " fay("
			call se.ed_fay.withvalue svyoutput.append @
			call svyoutput.append ")"
		}
		
		call svyoutput.append ": "
		call svyoutput.withvalue PARENT.callthru		///
			`"psvyoutput.setvalue `"@"'"'
	}
END

PROGRAM command
BEGIN
	if se.ck_svy {
		call model_svyset.setstring char _dta[_svy_version]
		if model_svyset.equals("") {
			call create STRING _MSG_TMP
			call _MSG_TMP.format 				   	///
				"resource SE_MSGBOX_SVY_SETTINGS_REQUIRED_FMT" 	///
				"resource LBL_SURVEY_SETTINGS" 	   		///
				"resource SE_TITLE_SE_ROBUST"
			stopbox stop "class _MSG_TMP.value"
// Survey estimation commands require survey settings. See "Survey settings" on the "SE/Robust" tab.
		}
	}
	call byoutput.setvalue ""
	call svyoutput.setvalue ""
	call program get_svyoutput
	call program get_by_output
	put " " /program ifin_output
	put " " /program weights_output
	beginoptions
		option model.ck_listwise
		option model.ck_sepguessing
		option model.ck_gsepguessing
		put " " /program cns_output
		put " " /program se_output
		optionarg /hidedefault rpt.sp_level
		option rpt.ck_notable
		option rpt.ck_noheader
		INCLUDE _report_columns_pr
		put " " rpt_bu_fmtcoefResults
		optionarg /hidedefault int.cb_intm
		optionarg /hidedefault int.sp_intp
		put " " /program max_output
	endoptions
END
