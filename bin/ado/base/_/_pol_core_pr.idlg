/* _pol_core_pr.idlg

*!  VERSION 1.0.2  07dec2018

*/

LIST term_pol_list
BEGIN
	resource _POLY_CORE_PR_QUADRATIC_POLYNOMIAL
	resource _POLY_CORE_PR_FULL_QUADRATIC_POLYNOMIAL
	resource _POLY_CORE_PR_CUBIC_POLYNOMIAL
	resource _POLY_CORE_PR_FULL_CUBIC_POLYNOMIAL
	resource _POLY_CORE_PR_QUARTIC_POLYNOMIAL
	resource _POLY_CORE_PR_FULL_QUARTIC_POLYNOMIAL
	resource _POLY_CORE_PR_CONTINUOUS_CONTINUOUS_POLYNOMIAL
	resource _POLY_CORE_PR_3_WAY_INTERACTED_POLYNOMIAL
	resource _POLY_CORE_PR_4_WAY_INTERACTED_POLYNOMIAL
END

LIST term_pol_values
BEGIN
	quadratic-polynomial
	full-quadratic-polynomial
	cubic-polynomial
	full-cubic-polynomial
	quartic-polynomial
	full-quartic-polynomial
	continuous-continuous-interaction
	3-way-interacted-polynomial
	4-way-interacted-polynomial
END

PROGRAM _pol_core_disable
BEGIN
	call main.ed_pol_ts1.disable
	call main.bu_pol_ts1.disable
	call main.ed_pol_ts2.disable
	call main.bu_pol_ts2.disable
	call main.ed_pol_ts3.disable
	call main.bu_pol_ts3.disable
	call main.ed_pol_ts4.disable
	call main.bu_pol_ts4.disable
END

PROGRAM _pol_core_enable
BEGIN
	call main.ed_pol_ts1.enable
	call main.bu_pol_ts1.enable
	call main.ed_pol_ts2.enable
	call main.bu_pol_ts2.enable
	call main.ed_pol_ts3.enable
	call main.bu_pol_ts3.enable
	call main.ed_pol_ts4.enable
	call main.bu_pol_ts4.enable
END

PROGRAM hide_pol_terms
BEGIN
	call main.tx_pol1.hide
	call main.vn_pol1.hide
	call main.ed_pol_ts1.hide
	call main.bu_pol_ts1.hide
	call main.tx_pol2.hide
	call main.vn_pol2.hide
	call main.ed_pol_ts2.hide
	call main.bu_pol_ts2.hide
	call main.tx_pol3.hide
	call main.vn_pol3.hide
	call main.ed_pol_ts3.hide
	call main.bu_pol_ts3.hide
	call main.tx_pol4.hide
	call main.vn_pol4.hide
	call main.ed_pol_ts4.hide
	call main.bu_pol_ts4.hide
END

PROGRAM check_pol_term
BEGIN
	call program hide_pol_terms
	
	if (! main.cb_pol_term.isvisible()) {
		exit
	}

	call main.tx_pol1.show
	call main.vn_pol1.show
	call main.ed_pol_ts1.show
	call main.bu_pol_ts1.show

	if main.cb_pol_term.startswith("contin") |			///
		main.cb_pol_term.startswith("3-way") |			///
		main.cb_pol_term.startswith("4-way") {
		call main.tx_pol2.show
		call main.vn_pol2.show
		call main.ed_pol_ts2.show
		call main.bu_pol_ts2.show
	}

	if main.cb_pol_term.startswith("3-way") |			///
		main.cb_pol_term.startswith("4-way") {
		call main.tx_pol3.show
		call main.vn_pol3.show
		call main.ed_pol_ts3.show
		call main.bu_pol_ts3.show
	}
	if main.cb_pol_term.startswith("4-way") {
		call main.tx_pol4.show
		call main.vn_pol4.show
		call main.ed_pol_ts4.show
		call main.bu_pol_ts4.show
	}

	if ! b_allowTS {
		call main.ed_pol_ts1.hide
		call main.bu_pol_ts1.hide
		call main.ed_pol_ts2.hide
		call main.bu_pol_ts2.hide
		call main.ed_pol_ts3.hide
		call main.bu_pol_ts3.hide
		call main.ed_pol_ts4.hide
		call main.bu_pol_ts4.hide
	}
END

PROGRAM var1_pol_output
BEGIN
	call s_local.setvalue ""
	call s_local.append "c"
	if main.ed_pol_ts1 & main.ed_pol_ts1.isenabled()  {
		call s_local.append class main.ed_pol_ts1.value
	}
	if s_local {
		call s_local.append "."
	}
	require main.vn_pol1
	call s_output.append class s_local.value
	call s_output.append class main.vn_pol1.value
END

PROGRAM var2_pol_output
BEGIN
	call s_local.setvalue ""
	call s_local.append "c"
	if main.ed_pol_ts2 & main.ed_pol_ts2.isenabled()  {
		call s_local.append class main.ed_pol_ts2.value
	}
	if s_local {
		call s_local.append "."
	}
	require main.vn_pol2
	call s_output.append class s_local.value
	call s_output.append class main.vn_pol2.value
END

PROGRAM var3_pol_output
BEGIN
	call s_local.setvalue ""
	call s_local.append "c"
	if main.ed_pol_ts3 & main.ed_pol_ts3.isenabled()  {
		call s_local.append class main.ed_pol_ts3.value
	}
	if s_local {
		call s_local.append "."
	}
	require main.vn_pol3
	call s_output.append class s_local.value
	call s_output.append class main.vn_pol3.value
END

PROGRAM var4_pol_output
BEGIN
	call s_local.setvalue ""
	call s_local.append "c"
	if main.ed_pol_ts4 & main.ed_pol_ts4.isenabled()  {
		call s_local.append class main.ed_pol_ts4.value
	}
	if s_local {
		call s_local.append "."
	}
	require main.vn_pol4
	call s_output.append class s_local.value
	call s_output.append class main.vn_pol4.value
END

PROGRAM _pol_core_add
BEGIN
	if main.cb_pol_term.startswith("quad") {
		put /program var1_pol_output
		call s_output.append "#"
		put /program var1_pol_output
	}
	if main.cb_pol_term.startswith("full-quad") {
		put /program var1_pol_output
		call s_output.append "##"
		put /program var1_pol_output
	}
	if main.cb_pol_term.startswith("cubic") {
		put /program var1_pol_output
		call s_output.append "#"
		put /program var1_pol_output
		call s_output.append "#"
		put /program var1_pol_output
	}
	if main.cb_pol_term.startswith("full-cubic") {
		put /program var1_pol_output
		call s_output.append "##"
		put /program var1_pol_output
		call s_output.append "##"
		put /program var1_pol_output
	}
	if main.cb_pol_term.startswith("quart") {
		put /program var1_pol_output
		call s_output.append "#"
		put /program var1_pol_output
		call s_output.append "#"
		put /program var1_pol_output
		call s_output.append "#"
		put /program var1_pol_output
	}
	if main.cb_pol_term.startswith("full-quart") {
		put /program var1_pol_output
		call s_output.append "##"
		put /program var1_pol_output
		call s_output.append "##"
		put /program var1_pol_output
		call s_output.append "##"
		put /program var1_pol_output
	}
	if main.cb_pol_term.startswith("contin") {
		put /program var1_pol_output
		call s_output.append "##"
		put /program var2_pol_output
	}
	if main.cb_pol_term.startswith("3-way") {
		require main.vn_pol1
		require main.vn_pol2
		require main.vn_pol3
		call s_output.append "c.("
		call s_output.append class main.vn_pol1.value
		call s_output.append " "
		call s_output.append class main.vn_pol2.value
		call s_output.append " "
		call s_output.append class main.vn_pol3.value
		call s_output.append ")"
		call s_output.append "##"
		call s_output.append "c.("
		call s_output.append class main.vn_pol1.value
		call s_output.append " "
		call s_output.append class main.vn_pol2.value
		call s_output.append " "
		call s_output.append class main.vn_pol3.value
		call s_output.append ")"
		call s_output.append "##"
		call s_output.append "c.("
		call s_output.append class main.vn_pol1.value
		call s_output.append " "
		call s_output.append class main.vn_pol2.value
		call s_output.append " "
		call s_output.append class main.vn_pol3.value
		call s_output.append ")"
	}
	if main.cb_pol_term.startswith("4-way") {
		require main.vn_pol1
		require main.vn_pol2
		require main.vn_pol3
		require main.vn_pol4
		call s_output.append "c.("
		call s_output.append class main.vn_pol1.value
		call s_output.append " "
		call s_output.append class main.vn_pol2.value
		call s_output.append " "
		call s_output.append class main.vn_pol3.value
		call s_output.append " "
		call s_output.append class main.vn_pol4.value
		call s_output.append ")"
		call s_output.append "##"
		call s_output.append "c.("
		call s_output.append class main.vn_pol1.value
		call s_output.append " "
		call s_output.append class main.vn_pol2.value
		call s_output.append " "
		call s_output.append class main.vn_pol3.value
		call s_output.append " "
		call s_output.append class main.vn_pol4.value
		call s_output.append ")"
		call s_output.append "##"
		call s_output.append "c.("
		call s_output.append class main.vn_pol1.value
		call s_output.append " "
		call s_output.append class main.vn_pol2.value
		call s_output.append " "
		call s_output.append class main.vn_pol3.value
		call s_output.append " "
		call s_output.append class main.vn_pol4.value
		call s_output.append ")"
		call s_output.append "##"
		call s_output.append "c.("
		call s_output.append class main.vn_pol1.value
		call s_output.append " "
		call s_output.append class main.vn_pol2.value
		call s_output.append " "
		call s_output.append class main.vn_pol3.value
		call s_output.append " "
		call s_output.append class main.vn_pol4.value
		call s_output.append ")"
	}
END

PROGRAM show_child_pol_ts1
BEGIN
	call create STRING s_tsResult1
	call create CHILD _ts_operators AS ts_child_1
	if b_isMenl {
		call create CHILD _ts_operators AS ts_child_1, message("-menl-")
	}
	else {
		call create CHILD _ts_operators AS ts_child_1
	}

	call ts_child_1.setExitString "s_tsResult1"
	call ts_child_1.setExitAction "main.ed_pol_ts1.setvalue class s_tsResult1.value"
END

PROGRAM show_child_pol_ts2
BEGIN
	call create STRING s_tsResult2
	if b_isMenl {
		call create CHILD _ts_operators AS ts_child_1, message("-menl-")
	}
	else {
		call create CHILD _ts_operators AS ts_child_1
	}
	call ts_child_2.setExitString "s_tsResult2"
	call ts_child_2.setExitAction "main.ed_pol_ts2.setvalue class s_tsResult2.value"
END

PROGRAM show_child_pol_ts3
BEGIN
	call create STRING s_tsResult3
	if b_isMenl {
		call create CHILD _ts_operators AS ts_child_1, message("-menl-")
	}
	else {
		call create CHILD _ts_operators AS ts_child_1
	}
	call ts_child_3.setExitString "s_tsResult3"
	call ts_child_3.setExitAction "main.ed_pol_ts3.setvalue class s_tsResult3.value"
END

PROGRAM show_child_pol_ts4
BEGIN
	call create STRING s_tsResult4
	if b_isMenl {
		call create CHILD _ts_operators AS ts_child_1, message("-menl-")
	}
	else {
		call create CHILD _ts_operators AS ts_child_1
	}
	call ts_child_4.setExitString "s_tsResult4"
	call ts_child_4.setExitAction "main.ed_pol_ts4.setvalue class s_tsResult4.value"
END

/* end _pol_core_pr.idlg */
