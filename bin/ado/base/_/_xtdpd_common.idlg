*! version 1.1.1  13apr2017

/*
	Defines the Predetermined and Endogenous tabs
	that are used by the dialog boxes for -xtabond-
	and -xtdpdsys-.
	
*/


DIALOG pre, tabtitle(resource _XTDPD_COMMON_TAB_PRE)
BEGIN
  CHECKBOX ck_pre1   _lft      _top      _iwd      _ht8h,		/*
		*/ label(resource _XTDPD_COMMON_PREDETERMINED_VARIABLES)			/*
		*/ groupbox						/*
		*/ clickon("program pre1on")				/*
		*/ clickoff("script pre1off")				/*
		*/
  VARLIST  vl_pre1   _ilft     _ss       _ibwd     .,			/*
  		*/ numeric						/*
		*/ label(resource _XTDPD_COMMON_PREDETERMINED_VARIABLES)			/*
		*/
  CHECKBOX ck_prel1  _ilft     _ls       _ibwd     _ht2h,		/*
		*/ label(resource _XTDPD_COMMON_LAG_STRUCTURE)		/*
		*/ groupbox						/*
		*/ clickon("script prelags1on")				/*
		*/ clickoff("script prelags1off")			/*
		*/
  SPINNER  sp_prel1  _indent   _ms       _spwd     .,			/*
		*/ label(resource _XTDPD_COMMON_LAGS_TO_INCLUDE)				/*
		*/ min(0)						/*
		*/ max(c(N))						/*
		*/ default(0)						/*
		*/
  TEXT     tx_prel1  _spsep    @         130       .,			/*
		*/ label(resource _XTDPD_COMMON_LAGS_TO_INCLUDE)				/*
		*/
  CHECKBOX ck_prem1  +135      @         _ckwd	   .,			/*
		*/ onclickon(program check_prem1)			/*
		*/ onclickoff(pre.sp_prem1.disable)
  SPINNER  sp_prem1  _cksep    @         _spwd     .,			/*
		*/ label(resource _XTDPD_COMMON_MAXIMUM_LAGS_TO_INCLUDE)			/*
		*/ min(1)						/*
		*/ max(c(N))						/*
		*/ default(1)						/*
		*/
  TEXT     tx_prem1  _spsep    @         _spr2b    .,			/*
		*/ label(resource _XTDPD_COMMON_MAXIMUM_LAGS_TO_INCLUDE)			/*
		*/

  CHECKBOX ck_pre2   _lft      _xxls     _iwd      _ht8h,		/*
		*/ label(resource _XTDPD_COMMON_PREDETERMINED_VARIABLES)			/*
		*/ groupbox						/*
		*/ clickon("program pre2on")				/*
		*/ clickoff("script pre2off")				/*
		*/
  VARLIST  vl_pre2   _ilft     _ss       _ibwd     .,			/*
  		*/ numeric						/*
		*/ label(resource _XTDPD_COMMON_PREDETERMINED_VARIABLES)			/*
		*/
  CHECKBOX ck_prel2  _ilft     _ls       _ibwd     _ht2h,		/*
		*/ label(resource _XTDPD_COMMON_LAG_STRUCTURE)		/*
		*/ groupbox						/*
		*/ clickon("script prelags2on")				/*
		*/ clickoff("script prelags2off")			/*
		*/
  SPINNER  sp_prel2  _indent   _ms       _spwd     .,			/*
		*/ label(resource _XTDPD_COMMON_LAGS_TO_INCLUDE)				/*
		*/ min(0)						/*
		*/ max(c(N))						/*
		*/ default(0)						/*
		*/
  TEXT     tx_prel2  _spsep    @         130       .,			/*
		*/ label(resource _XTDPD_COMMON_LAGS_TO_INCLUDE)				/*
		*/
  CHECKBOX ck_prem2  +135      @         _ckwd	   .,			/*
		*/ onclickon(program check_prem2)			/*
		*/ onclickoff(pre.sp_prem2.disable)
  SPINNER  sp_prem2  _cksep    @         _spwd     .,			/*
		*/ label(resource _XTDPD_COMMON_MAXIMUM_LAGS_TO_INCLUDE)			/*
		*/ min(1)						/*
		*/ max(c(N))						/*
		*/ default(1)						/*
		*/
  TEXT     tx_prem2  _spsep    @         _spr2b    .,			/*
		*/ label(resource _XTDPD_COMMON_MAXIMUM_LAGS_TO_INCLUDE)			/*
		*/

  CHECKBOX ck_pre3   _lft      _xxls     _iwd      _ht8h,		/*
		*/ label(resource _XTDPD_COMMON_PREDETERMINED_VARIABLES)			/*
		*/ groupbox						/*
		*/ clickon("program pre3on")				/*
		*/ clickoff("script pre3off")				/*
		*/
  VARLIST  vl_pre3   _ilft     _ss       _ibwd     .,			/*
  		*/ numeric						/*
		*/ label(resource _XTDPD_COMMON_PREDETERMINED_VARIABLES)			/*
		*/
  CHECKBOX ck_prel3  _ilft     _ls       _ibwd     _ht2h,		/*
		*/ label(resource _XTDPD_COMMON_LAG_STRUCTURE)		/*
		*/ groupbox						/*
		*/ clickon("script prelags3on")				/*
		*/ clickoff("script prelags3off")			/*
		*/
  SPINNER  sp_prel3  _indent   _ms       _spwd     .,			/*
		*/ label(resource _XTDPD_COMMON_LAGS_TO_INCLUDE)				/*
		*/ min(0)						/*
		*/ max(c(N))						/*
		*/ default(0)						/*
		*/
  TEXT     tx_prel3  _spsep    @         130       .,			/*
		*/ label(resource _XTDPD_COMMON_LAGS_TO_INCLUDE)				/*
		*/
  CHECKBOX ck_prem3  +135      @         _ckwd	   .,			/*
		*/ onclickon(program check_prem3)			/*
		*/ onclickoff(pre.sp_prem3.disable)
  SPINNER  sp_prem3  _cksep    @         _spwd     .,			/*
		*/ label(resource _XTDPD_COMMON_MAXIMUM_LAGS_TO_INCLUDE)			/*
		*/ min(1)						/*
		*/ max(c(N))						/*
		*/ default(1)						/*
		*/
  TEXT     tx_prem3  _spsep    @         _spr2b    .,			/*
		*/ label(resource _XTDPD_COMMON_MAXIMUM_LAGS_TO_INCLUDE)			/*
		*/

END

PROGRAM check_prem1
BEGIN
	if pre.ck_prem1.isenabled() & pre.ck_prem1 {
		call pre.sp_prem1.enable
	}
END

PROGRAM check_prem2
BEGIN
	if pre.ck_prem2.isenabled() & pre.ck_prem2 {
		call pre.sp_prem2.enable
	}
END

PROGRAM check_prem3
BEGIN
	if pre.ck_prem3.isenabled() & pre.ck_prem3 {
		call pre.sp_prem3.enable
	}
END

PROGRAM pre1on
BEGIN
	call gaction pre.vl_pre1.enable
	call gaction pre.ck_prel1.enable
	if pre.ck_prel1 {
		call script prelags1on
	}
END

SCRIPT pre1off
BEGIN
	pre.vl_pre1.disable
	pre.ck_prel1.disable
	script prelags1off
END

SCRIPT prelags1on
BEGIN
	pre.sp_prel1.enable
	pre.tx_prel1.enable
	pre.ck_prem1.enable
	program check_prem1
	pre.tx_prem1.enable
END

SCRIPT prelags1off
BEGIN
	pre.sp_prel1.disable
	pre.tx_prel1.disable
	pre.ck_prem1.disable
	pre.sp_prem1.disable
	pre.tx_prem1.disable
END

PROGRAM pre2on
BEGIN
	call gaction pre.vl_pre2.enable
	call gaction pre.ck_prel2.enable
	if pre.ck_prel2 {
		call script prelags2on
	}
END

SCRIPT pre2off
BEGIN
	pre.vl_pre2.disable
	pre.ck_prel2.disable
	script prelags2off
END

SCRIPT prelags2on
BEGIN
	pre.sp_prel2.enable
	pre.tx_prel2.enable
	pre.ck_prem2.enable
	program check_prem2
	pre.tx_prem2.enable
END

SCRIPT prelags2off
BEGIN
	pre.sp_prel2.disable
	pre.tx_prel2.disable
	pre.ck_prem2.disable
	pre.sp_prem2.disable
	pre.tx_prem2.disable
END

PROGRAM pre3on
BEGIN
	call gaction pre.vl_pre3.enable
	call gaction pre.ck_prel3.enable
	if pre.ck_prel3 {
		call script prelags3on
	}
END

SCRIPT pre3off
BEGIN
	pre.vl_pre3.disable
	pre.ck_prel3.disable
	script prelags3off
END

SCRIPT prelags3on
BEGIN
	pre.sp_prel3.enable
	pre.tx_prel3.enable
	pre.ck_prem3.enable
	program check_prem3
	pre.tx_prem3.enable
END

SCRIPT prelags3off
BEGIN
	pre.sp_prel3.disable
	pre.tx_prel3.disable
	pre.ck_prem3.disable
	pre.sp_prem3.disable
	pre.tx_prem3.disable
END


DIALOG endog, tabtitle(resource LBL_ENDOGENOUS)
BEGIN
  CHECKBOX ck_endog1   _lft      _top      _iwd      _ht8h,		/*
		*/ label(resource _XTDPD_COMMON_ENDOGENOUS_VARIABLES)	/*
		*/ groupbox						/*
		*/ clickon("program endog1on")				/*
		*/ clickoff("script endog1off")				/*
		*/
  VARLIST  vl_endog1   _ilft     _ss       _ibwd     .,			/*
  		*/ numeric						/*
		*/ label(resource _XTDPD_COMMON_ENDOGENOUS_VARIABLES)	/*
		*/
  CHECKBOX ck_endogl1  _ilft     _ls       _ibwd     _ht2h,		/*
		*/ label(resource _XTDPD_COMMON_LAG_STRUCTURE)		/*
		*/ groupbox						/*
		*/ clickon("script endoglags1on")			/*
		*/ clickoff("script endoglags1off")			/*
		*/
  SPINNER  sp_endogl1  _indent   _ms       _spwd     .,			/*
		*/ label(resource _XTDPD_COMMON_LAGS_TO_INCLUDE)				/*
		*/ min(0)						/*
		*/ max(c(N))						/*
		*/ default(0)						/*
		*/
  TEXT     tx_endogl1  _spsep    @         130       .,			/*
		*/ label(resource _XTDPD_COMMON_LAGS_TO_INCLUDE)				/*
		*/
  CHECKBOX ck_endogm1  +135      @         _ckwd     .,			/*
		*/ onclickon(program check_endogm1)			/*
		*/ onclickoff(endog.sp_endogm1.disable)
  SPINNER  sp_endogm1  _cksep    @         _spwd     .,			/*
		*/ label(resource _XTDPD_COMMON_MAXIMUM_LAGS_TO_INCLUDE)			/*
		*/ min(1)						/*
		*/ max(c(N))						/*
		*/ default(1)						/*
		*/
  TEXT     tx_endogm1  _spsep    @         _spr2b    .,			/*
		*/ label(resource _XTDPD_COMMON_MAXIMUM_LAGS_TO_INCLUDE)			/*
		*/

  CHECKBOX ck_endog2   _lft      _xxls      _iwd      _ht8h,		/*
		*/ label(resource _XTDPD_COMMON_ENDOGENOUS_VARIABLES)	/*
		*/ groupbox						/*
		*/ clickon("program endog2on")				/*
		*/ clickoff("script endog2off")				/*
		*/
  VARLIST  vl_endog2   _ilft     _ss       _ibwd     .,			/*
  		*/ numeric						/*
		*/ label(resource _XTDPD_COMMON_ENDOGENOUS_VARIABLES)	/*
		*/
  CHECKBOX ck_endogl2  _ilft     _ls       _ibwd     _ht2h,		/*
		*/ label(resource _XTDPD_COMMON_LAG_STRUCTURE)		/*
		*/ groupbox						/*
		*/ clickon("script endoglags2on")			/*
		*/ clickoff("script endoglags2off")			/*
		*/
  SPINNER  sp_endogl2  _indent   _ms       _spwd     .,			/*
		*/ label(resource _XTDPD_COMMON_LAGS_TO_INCLUDE)				/*
		*/ min(0)						/*
		*/ max(c(N))						/*
		*/ default(0)						/*
		*/
  TEXT     tx_endogl2  _spsep    @         130       .,			/*
		*/ label(resource _XTDPD_COMMON_LAGS_TO_INCLUDE)				/*
		*/
  CHECKBOX ck_endogm2  +135      @         _ckwd     .,			/*
		*/ onclickon(program check_endogm2)			/*
		*/ onclickoff(endog.sp_endogm2.disable)
  SPINNER  sp_endogm2  _cksep    @         _spwd     .,			/*
		*/ label(resource _XTDPD_COMMON_MAXIMUM_LAGS_TO_INCLUDE)			/*
		*/ min(1)						/*
		*/ max(c(N))						/*
		*/ default(1)						/*
		*/
  TEXT     tx_endogm2  _spsep    @         _spr2b    .,			/*
		*/ label(resource _XTDPD_COMMON_MAXIMUM_LAGS_TO_INCLUDE)			/*
		*/

  CHECKBOX ck_endog3   _lft      _xxls      _iwd      _ht8h,		/*
		*/ label(resource _XTDPD_COMMON_ENDOGENOUS_VARIABLES)	/*
		*/ groupbox						/*
		*/ clickon("program endog3on")				/*
		*/ clickoff("script endog3off")				/*
		*/
  VARLIST  vl_endog3   _ilft     _ss       _ibwd     .,			/*
  		*/ numeric						/*
		*/ label(resource _XTDPD_COMMON_ENDOGENOUS_VARIABLES)	/*
		*/
  CHECKBOX ck_endogl3  _ilft     _ls       _ibwd     _ht2h,		/*
		*/ label(resource _XTDPD_COMMON_LAG_STRUCTURE)		/*
		*/ groupbox						/*
		*/ clickon("script endoglags3on")			/*
		*/ clickoff("script endoglags3off")			/*
		*/
  SPINNER  sp_endogl3  _indent   _ms       _spwd     .,			/*
		*/ label(resource _XTDPD_COMMON_LAGS_TO_INCLUDE)				/*
		*/ min(0)						/*
		*/ max(c(N))						/*
		*/ default(0)						/*
		*/
  TEXT     tx_endogl3  _spsep    @         130       .,			/*
		*/ label(resource _XTDPD_COMMON_LAGS_TO_INCLUDE)				/*
		*/
  CHECKBOX ck_endogm3  +135      @         _ckwd     .,			/*
		*/ onclickon(program check_endogm3)			/*
		*/ onclickoff(endog.sp_endogm3.disable)
  SPINNER  sp_endogm3  _cksep    @         _spwd     .,			/*
		*/ label(resource _XTDPD_COMMON_MAXIMUM_LAGS_TO_INCLUDE)			/*
		*/ min(1)						/*
		*/ max(c(N))						/*
		*/ default(1)						/*
		*/
  TEXT     tx_endogm3  _spsep    @         _spr2b    .,			/*
		*/ label(resource _XTDPD_COMMON_MAXIMUM_LAGS_TO_INCLUDE)			/*
		*/
END

PROGRAM check_endogm1
BEGIN
	if endog.ck_endogm1.isenabled() & endog.ck_endogm1 {
		call endog.sp_endogm1.enable
	}
END

PROGRAM check_endogm2
BEGIN
	if endog.ck_endogm2.isenabled() & endog.ck_endogm2 {
		call endog.sp_endogm2.enable
	}
END

PROGRAM check_endogm3
BEGIN
	if endog.ck_endogm3.isenabled() & endog.ck_endogm3 {
		call endog.sp_endogm3.enable
	}
END

PROGRAM endog1on
BEGIN
	call gaction endog.vl_endog1.enable
	call gaction endog.ck_endogl1.enable
	if endog.ck_endogl1 {
		call script endoglags1on
	}
END

SCRIPT endog1off
BEGIN
	endog.vl_endog1.disable
	endog.ck_endogl1.disable
	script endoglags1off
END

SCRIPT endoglags1on
BEGIN
	endog.sp_endogl1.enable
	endog.tx_endogl1.enable
	endog.ck_endogm1.enable
	program check_endogm1
	endog.tx_endogm1.enable
END

SCRIPT endoglags1off
BEGIN
	endog.sp_endogl1.disable
	endog.tx_endogl1.disable
	endog.ck_endogm1.disable
	endog.sp_endogm1.disable
	endog.tx_endogm1.disable
END

PROGRAM endog2on
BEGIN
	call gaction endog.vl_endog2.enable
	call gaction endog.ck_endogl2.enable
	if endog.ck_endogl2 {
		call script endoglags2on
	}
END

SCRIPT endog2off
BEGIN
	endog.vl_endog2.disable
	endog.ck_endogl2.disable
	script endoglags2off
END

SCRIPT endoglags2on
BEGIN
	endog.sp_endogl2.enable
	endog.tx_endogl2.enable
	endog.ck_endogm2.enable
	program check_endogm2
	endog.tx_endogm2.enable
END

SCRIPT endoglags2off
BEGIN
	endog.sp_endogl2.disable
	endog.tx_endogl2.disable
	endog.ck_endogm2.disable
	endog.sp_endogm2.disable
	endog.tx_endogm2.disable
END



PROGRAM endog3on
BEGIN
	call gaction endog.vl_endog3.enable
	call gaction endog.ck_endogl3.enable
	if endog.ck_endogl3 {
		call script endoglags3on
	}
END

SCRIPT endog3off
BEGIN
	endog.vl_endog3.disable
	endog.ck_endogl3.disable
	script endoglags3off
END

SCRIPT endoglags3on
BEGIN
	endog.sp_endogl3.enable
	endog.tx_endogl3.enable
	endog.ck_endogm3.enable
	program check_endogm3
	endog.tx_endogm3.enable
END

SCRIPT endoglags3off
BEGIN
	endog.sp_endogl3.disable
	endog.tx_endogl3.disable
	endog.ck_endogm3.disable
	endog.sp_endogm3.disable
	endog.tx_endogm3.disable
END


PROGRAM pre1_output
BEGIN
	require pre.vl_pre1
	put pre.vl_pre1
	if pre.ck_prel1 {
		put ", "
		put "lagstruct("
		put pre.sp_prel1 "," 
		if pre.sp_prem1.isenabled() {
			put pre.sp_prem1
		}
		else {
			put "."
		}
		put ")"
	}
END

PROGRAM pre2_output
BEGIN
	require pre.vl_pre2
	put pre.vl_pre2
	if pre.ck_prel2 {
		put ", "
		put "lagstruct("
		put pre.sp_prel2 "," 
		if pre.sp_prem2.isenabled() {
			put pre.sp_prem2
		}
		else {
			put "."
		}
		put ")"
	}
END

PROGRAM pre3_output
BEGIN
	require pre.vl_pre3
	put pre.vl_pre3
	if pre.ck_prel3 {
		put ", "
		put "lagstruct("
		put pre.sp_prel3 "," 
		if pre.sp_prem3.isenabled() {
			put pre.sp_prem3
		}
		else {
			put "."
		}
		put ")"
	}
END

PROGRAM endo1_output
BEGIN
	require endog.vl_endog1
	put endog.vl_endog1
	if endog.ck_endogl1 {
		put ", "
		put "lagstruct("
		put endog.sp_endogl1 ","
		if endog.sp_endogm1.isenabled() {
			put endog.sp_endogm1
		}
		else {
			put "."
		}
		put ")"
	}
END

PROGRAM endo2_output
BEGIN
	require endog.vl_endog2
	put endog.vl_endog2
	if endog.ck_endogl2 {
		put ", "
		put "lagstruct("
		put endog.sp_endogl2 ","
		if endog.sp_endogm2.isenabled() {
			put endog.sp_endogm2
		}
		else {
			put "."
		}
		put ")"
	}
END

PROGRAM endo3_output
BEGIN
	require endog.vl_endog3
	put endog.vl_endog3
	if endog.ck_endogl3 {
		put ", "
		put "lagstruct("
		put endog.sp_endogl3 ","
		if endog.sp_endogm3.isenabled() {
			put endog.sp_endogm3
		}
		else {
			put "."
		}
		put ")"
	}
END

PROGRAM _xtdpd_common_output
BEGIN
	if pre.ck_pre1 {
		put " pre("
		put /program pre1_output
		put ") "
	}
	if pre.ck_pre2 {
		put " pre("
		put /program pre2_output
		put ") "
	}
	if pre.ck_pre3 {
		put " pre("
		put /program pre3_output
		put ") "
	}

	if endog.ck_endog1 {
		put " endog("
		put /program endo1_output
		put ") "
	}
	if endog.ck_endog2 {
		put " endog("
		put /program endo2_output
		put ") "
	}
	if endog.ck_endog3 {
		put " endog("
		put /program endo3_output
		put ") "
	}
END
