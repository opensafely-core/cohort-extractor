/*                                 twoway_bar_parse

   A parser for the bar type of yxview.  Allows multiple view to be created
   from one parse.  Most of the work is done by twoway_yxview_parse.

*/
*! version 1.0.0  26aug2002

version 8

class {
//	overall_drop_to	= ""
	
} , inherit(twoway_yxview_parse)


// ---------------------------------------------------------------------------

program parse
	if "`.viewtype'" == "" {
		.viewtype = "bar"
	}
	.Super.parse `0'

/* moved to twoway_yxview_parse
	local 0 `", `.options'"'
	syntax [ , HORizontal VERTical * ]

	.options = `"`options'"'

	if `:word count `horizontal' `vertical'' > 1 {
		di as error "may not combine options horizontal and vertical"
		exit 198
	}

	if "`vertical'"   != "" {
		.overall_drop_to = "x"
	}
	if "`horizontal'" != "" {
		.overall_drop_to = "y"
	}
*/

end

// ---------------------------------------------------------------------------


/* moved to twoway_yxview_parse
program FactorPlot
	_parse combop 0 : 0 , option(BARType)  rightmost
	_parse factor 0 : 0 , option(BARType)  to(bartype(X))	
	_parse combop 0 : 0 , option(BARWidth) rightmost
	_parse factor 0 : 0 , option(BARWidth) to(barwidth(X))	
	_parse combop 0 : 0 , option(DROPto)   rightmost
	_parse factor 0 : 0 , option(DROPto)   to(dropto(X))	
	_parse combop 0 : 0 , option(BARGap)   rightmost
	_parse factor 0 : 0 , option(BARGap)   to(bargap(X))	

	_parse combop 0 : 0 , option(BASE)     rightmost
	_parse factor 0 : 0 , option(BASE)     to(base(X))	

	_parse combop 0 : 0 , option(DOTEXtend)  rightmost
	_parse factor 0 : 0 , option(DOTEXtend)  to(dotextend(X))	
	_parse combop 0 : 0 , option(NDOTs)      rightmost
	_parse factor 0 : 0 , option(NDOTs)      to(ndots(X))	

	class exit `"`.Super.FactorPlot `0''"'
end
*/

/* moved to twoway_yxview_parse
/* -------------------------------------------------------------------------*/
/*
	Pushes onto the specified log any post-creation commands implied by 
	the parsed syntax that must be applied to the created view.
*/ 

program log_edits
	args log view i

	.Super.log_edits `log' `view' `i'

	if "`.overall_drop_to'" != "" {
	       .`log'.Arrpush .`view'.bar_drop_to.setstyle ,	///
			style(`.overall_drop_to')
	}

	if `"`.plotsettings[`i']'"' != `""' {
		local 0 , `.plotsettings[`i']'
		syntax [ , BASE(string)					///
			   BARTYPE(string) BARWIDTH(real -1)		///
			   BARGAP(real -1) DROPTO(string) 		///
			   DOTEXTEND(string) NDOTS(real -1) * ]

		if `"`base'"' != `""' {
			capture confirm number `base'
			if _rc {
			    di as error "option base() incorrectly, "	///
				"`base' in not a number"
			}
			.`log'.Arrpush .`view'.base = `base'
		}

		if `"`bartype'"' != `""' {
		       .`log'.Arrpush .`view'.bartype.setstyle ,	///
				style(`bartype')
		}
		if `barwidth' != -1 {
			.`log'.Arrpush .`view'.bar_size = `barwidth'
		}
		if `bargap' != -1 {
			.`log'.Arrpush .`view'.bar_gap = `bargap'
		}
		if `"`dropto'"' != `""' {
		       .`log'.Arrpush .`view'.bar_drop_to.setstyle ,	///
				style(`dropto')
		}

		if "`dotextend'" != "" {
			.`log'.Arrpush .`view'.dots_extend.setstyle	///
				, style(`dotextend')
		}
		if `ndots' != -1 {
			.`log'.Arrpush .`view'.num_dots = `ndots'
		}
	}

	.`log'.Arrpush .`view'.register_with_scale

end
*/
