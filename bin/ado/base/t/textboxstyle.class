*! version 1.1.0  27jan2016
version 8

class {

    instance:
	angle	   = .anglestyle.new,    /* style(horizontal) */
	size	   = .gsize.new,         style(medium)
	color 	   = .color.new, type(text) /* style(white) */
	horizontal = .horizontal.new,    /* style(center) */
	vertical   = .vertical_text.new, /* style(bottom) */
	margin     = .margin.new,        /* style(tiny) */
	linegap	   = .gsize.new, style(zero)

	drawbox   = .yesno.new,     /* style(no) */
	boxmargin = .margin.new,    /* style(zero) */
	fillcolor = .color.new,     /* style(none) */
	linestyle = .linestyle.new

	box_alignment = .compass2dir.new, style(center)	
						// only for sized_textbox
}, inherit(style)


/* -------------------------------------------------------------------------*/

program define new

	syntax [, Style(string) * ]				/* default */
	if "`style'" == "" { 
		.setstyle, style(scheme)
	}

	.Super.new, `.set `0''
end


/* -------------------------------------------------------------------------*/
/*
	Usage:  just like .new
*/

program define set

	syntax [ , Angle(real `.angle.val') Size(real -999) Color(string) /*
		*/ Horizontal(string) Vertical(string) * ]

	if `angle' != `.angle.val' {
		.angle.val = `angle'
	}

	if `size' != -999 {
		.size.val = `size'
	}

	if "`horizontal'" != "" {
		.horizontal.setstyle, style(`horizontal')
	}
	if "`vertical'" != "" {
		.vertical.setstyle, style(`vertical')
	}

	if "`color'" != "" {
		.color.setstyle , style(`color')
	}

	class exit `"`options'"'
end



/* -------------------------------------------------------------------------*/
/* 
	Set this line style to the GDI
*/

program define setgdi

	syntax [ , Angle(real `.angle.val')	 			/*
		*/ Hdefault(string) Vdefault(string) ]

	local halign = cond("`.horizontal.setting'" == "default",	/*
		*/     cond("`hdefault'" == "", "center", "`hdefault'")	/*
		*/	    , "`.horizontal.setting'")
	local valign = cond("`.vertical.setting'" == "default",		/*
		*/     cond("`vdefault'" == "", "bottom", "`vdefault'")	/*
		*/	    , "`.vertical.setting'")

	.color.setgdi , text
	gdi gm_textsize  = `.size.gmval'
	gdi texthalign = `halign'
	gdi textvalign = `valign'
	gdi textangle  = `angle'

	if `.drawbox.istrue' {
		gdi shadelevel   = 100
		gdi shadeopacity = 100
		gdi shadepattern = pattern10
		.fillcolor.setgdi , shade
		.linestyle.setgdi
	}
end


/* -------------------------------------------------------------------------*/
/* 
	Set this line style to the GDI and reset the pen
*/

program define setgdifull

	.setgdi `0'
	gdi textchange

	if `.drawbox.istrue' {
		gdi shadechange
		gdi penchange
	}
end


