/*
	predict (after tpoisson)

*!  VERSION 1.1.1  17apr2015

*/

VERSION 14.0

INCLUDE _std_medium  // ** set POSTINIT to match
DEFINE _dlght 420
INCLUDE header

HELP hlp1, view("help tpoisson postestimation")
RESET res1

SCRIPT PREINIT
BEGIN
        setscale_hadj resource TPOISSON_P_DLG_HSCALE
END

SCRIPT POSTINIT
BEGIN
	script _p_gentype_setMedium
END

DIALOG main, label(resource PREDICT_DLG_TITLE) tabtitle(resource LBL_TAB_MAIN)
BEGIN
  INCLUDE  _p_gentype

  GROUPBOX gb_opts           _lft      _ls      _iwd      _ht29h,	/*
		*/ label(resource LBL_PRODUCE)
  RADIO    rb_n              _indent   _ss       _inwd     ., first	/*
		*/ option(n)						/*
		*/ label(resource LBL_NUMBER_OF_EVENTS)
  RADIO    rb_ir             @         _ss       @         .,		/*
		*/ option(ir)						/*
		*/ label(resource LBL_INCIDENCE_RATE)
  RADIO    rb_cm              @         _ss       @         .,		/*
		*/ option(cm)						/*
		*/ label(resource TPOISSON_P_MAIN_RB_CM)
  RADIO    rb_pr_n           @         _ss       @         .,		/*
		*/ onclickon(script main_pr_n_on)			/*
		*/ onclickoff(script main_pr_n_off)			/*
		*/ label(resource TPOISSON_P_MAIN_RB_PR_N)
  RADIO    rb_pr_a_b       @         +45       @         .,		/*
		*/ onclickon(script main_pr_a_b_on)			/*
		*/ onclickoff(script main_pr_a_b_off)			/*
		*/ label(resource TPOISSON_P_MAIN_RB_PR_A_B)
  RADIO    rb_cpr_n           @        +45       @         .,		/*
		*/ onclickon(script main_cpr_n_on)			/*
		*/ onclickoff(script main_cpr_n_off)			/*
		*/ label(resource TPOISSON_P_MAIN_RB_CPR_N)
  RADIO    rb_cpr_a_b       @         +45       @         .,		/*
		*/ onclickon(script main_cpr_a_b_on)			/*
		*/ onclickoff(script main_cpr_a_b_off)			/*
		*/ label(resource TPOISSON_P_MAIN_RB_CPR_A_B)
  RADIO    rb_xb             @         +45       @         .,		/*
		*/ option(xb)						/*
		*/ label(resource LBL_LINEAR_PREDICTION)
  RADIO    rb_stdp           @         _ss       @         .,		/*
		*/ option(stdp)						/*
		*/ label(resource LBL_STANDARD_ERROR_LINEAR_PREDICTION)
  RADIO    rb_score          @         _ss       @         ., last	/*
		*/ option(score)					/*
		*/ label(resource TPOISSON_P_MAIN_RB_SCORE)
  EDIT      ed_pr_n          _indent2  -200      _en7wd    .,           /*
                */ option(pr)                                           /*
                */ label(resource TPOISSON_P_MAIN_RB_PR_N)

DEFINE x @x
  TEXT      tx_pr_n          _en7sep   @         50        .,		/*
		*/ label("n") // equation; do not localize

  EDIT      ed_pr_a         x         +45       _en7wd    .,		/*
		*/ label(resource TPOISSON_P_MAIN_ED_PR_A)
  TEXT      tx_pr_a         _en7sep   @         50        .,		/*
		*/ label("a") // equation; do not localize

  EDIT      ed_pr_b         +55       @        _en7wd     .,		/*
		*/ label(resource TPOISSON_P_MAIN_ED_PR_B)
  TEXT      tx_pr_b         _en7sep   @        50         .,		/*
		*/ label("b") // equation; do not localize
 
 
  EDIT      ed_cpr_n          x        +45      _en7wd    .,           /*
                */ option(cpr)                                           /*
                */ label(resource TPOISSON_P_MAIN_RB_CPR_N)

  TEXT      tx_cpr_n          _en7sep   @         50        .,		/*
		*/ label("n") // equation; do not localize

  EDIT      ed_cpr_a         x        +45       _en7wd    .,		/*
		*/ label(resource TPOISSON_P_MAIN_ED_CPR_A)
  TEXT      tx_cpr_a         _en7sep   @         50        .,		/*
		*/ label("a") // equation; do not localize

  EDIT      ed_cpr_b         +55       @        _en7wd     .,		/*
		*/ label(resource TPOISSON_P_MAIN_ED_CPR_B)
  TEXT      tx_cpr_b         _en7sep   @        50         .,		/*
		*/ label("b") // equation; do not localize

  CHECKBOX ck_nooffset       _lft      +100     _iwd       .,		/*
		*/ option(nooffset)					/*
		*/ label(resource LBL_IGNORE_OFFSET_VARIABLE)
END

SCRIPT main_pr_n_on
BEGIN
	main.ed_pr_n.enable
	main.tx_pr_n.enable
END

SCRIPT main_pr_n_off
BEGIN
	main.ed_pr_n.disable
	main.tx_pr_n.disable
END

SCRIPT main_pr_a_b_on
BEGIN
	main.ed_pr_a.enable
	main.tx_pr_a.enable
	main.ed_pr_b.enable
	main.tx_pr_b.enable
END

SCRIPT main_pr_a_b_off
BEGIN
	main.ed_pr_a.disable
	main.tx_pr_a.disable
	main.ed_pr_b.disable
	main.tx_pr_b.disable
END

SCRIPT main_cpr_n_on
BEGIN
	main.ed_cpr_n.enable
	main.tx_cpr_n.enable
END

SCRIPT main_cpr_n_off
BEGIN
	main.ed_cpr_n.disable
	main.tx_cpr_n.disable
END

SCRIPT main_cpr_a_b_on
BEGIN
	main.ed_cpr_a.enable
	main.tx_cpr_a.enable
	main.ed_cpr_b.enable
	main.tx_cpr_b.enable
END

SCRIPT main_cpr_a_b_off
BEGIN
	main.ed_cpr_a.disable
	main.tx_cpr_a.disable
	main.ed_cpr_b.disable
	main.tx_cpr_b.disable
END

INCLUDE _p_gentype_sc
INCLUDE ifin
INCLUDE _type_list_fd

PROGRAM main_ed_pr_a_b_output
BEGIN
	put "pr("
	put main.ed_pr_a
	put ","
	put main.ed_pr_b
	put ")"
END

PROGRAM main_ed_cpr_a_b_output
BEGIN
	put "cpr("
	put main.ed_cpr_a
	put ","
	put main.ed_cpr_b
	put ")"
END

PROGRAM command
BEGIN
	put "predict "
	put " " /program _p_gentype_output
	INCLUDE _ifin_pr
	beginoptions
		option radio(main rb_n rb_ir rb_cm rb_xb rb_stdp rb_score)
		if main.rb_pr_n {
			require main.ed_pr_n
			optionarg main.ed_pr_n
		}
		if main.rb_pr_a_b {
			require main.ed_pr_a
			require main.ed_pr_b
			put " " /program main_ed_pr_a_b_output
		}
		if main.rb_cpr_n {
			require main.ed_cpr_n
			optionarg main.ed_cpr_n
		}
		if main.rb_cpr_a_b {
			require main.ed_cpr_a
			require main.ed_cpr_b
			put " " /program main_ed_cpr_a_b_output
		}
		option main.ck_nooffset
	endoptions
END
