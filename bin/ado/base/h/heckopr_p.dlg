/*
  heckoprobit_predict

*! VERSION 1.1.3  16apr2019


*/
VERSION 14.0

INCLUDE _std_wide
DEFINE _dlght 380
INCLUDE header

HELP hlp1, view("help heckoprobit postestimation")
RESET res1


SCRIPT PREINIT
BEGIN
        create STRING STMP
        create STRING STMP2
        setscale_hadj resource HECKOPR_P_DLG_HSCALE
        create DOUBLE k
        k.setvalue e(k_cat)
        create ARRAY main_outcome_k_list
        program gen_k_list
        create DOUBLE k_cat
        create DOUBLE k_eq
	
		k_cat.setvalue e(k_cat)
		main.tx_vars.formatlabel					///
			"resource LBL_NEW_#_VAR_NAMES_FMT" "e(k_cat)" 
		
		k_cat.setvalue e(k_eq)
		main.tx_eq_vars.formatlabel					///
			"resource LBL_NEW_#_VAR_NAMES_FMT" "e(k_eq)"
               
END

PROGRAM gen_k_list
BEGIN
	call create DOUBLE count
	call create STRING num
	call count.setvalue 1

	if (k.isgt(1000)) {
		call k.setvalue 0
	}

	while(count.isle(k)) {
		call num.setvalue "#"
		call num.append class count.value
		call num.withvalue main_outcome_k_list.Arrpush @
		call count.increment
	}
END

DIALOG main, label(resource PREDICT_DLG_TITLE) tabtitle(resource LBL_TAB_MAIN)
BEGIN
  TEXT tx_vars			_lft	_top	_vlwd	.,		///
	label(resource LBL_NEW_#_VAR_NAMES_FMT)
  EDIT ed_vars			@	_ss	@	.,		///
	label(resource LBL_NEW_#_VAR_NAMES_FMT)
  TEXT tx_eq_vars		_lft	_top	@	.,		///
	label(resource LBL_NEW_VARIABLE_NAMES_STUB)
  EDIT ed_eq_vars		@	_ss	@	.,		///
	label(resource LBL_NEW_VARIABLE_NAMES_STUB)	
  TEXT tx_var			_lft	_top	@	.,		///
	label(resource LBL_NEW_VARIABLE_NAME)
  EDIT ed_var			@	_ss	_vnwd	.,		///
	label(resource LBL_NEW_VARIABLE_NAME) max(32)

  TEXT tx_type			_vlsep	_top	_vlr	.,		///
	label(resource LBL_NEW_VARIABLE_TYPE)
  COMBOBOX cb_type		@	_ss	@	.,		///
	dropdownlist							///
	contents(type) default(c(type))					///
	label(resource LBL_TYPE)

  GROUPBOX gb_opts		_lft	_ls	_iwd	_ht20,		///
	label(resource LBL_PRODUCE)
  RADIO rb_pmargin		_ilft	_ss	_ibwd	., first	///
	option(pmargin)							///
	clickon("script oneon_p")					///
	label(resource LBL_MARGINAL_PROBABILITIES)
  DEFINE   holdy@y
  
  RADIO rb_p1			@	_ss	@	.,		///
	option(p1)							///
	clickon("script oneon_p")					///
	label(resource HECKOPR_P_MAIN_RB_P1)
  RADIO rb_p0			@	_ss	@	.,		///
	option(p0)							///
	clickon("script oneon_p")					///
	label(resource HECKOPR_P_MAIN_RB_P0)
  RADIO rb_pcond1		@	_ss	@	.,		///
	option(pcond1)							///
	clickon("script oneon_p")					///
	label(resource HECKOPR_P_MAIN_RB_PCOND1)
  RADIO rb_pcond0		@	_ss	@	.,		///
	option(pcond0)							///
	clickon("script oneon_p")					///
	label(resource HECKOPR_P_MAIN_RB_PCOND0)
  RADIO rb_xb			@	_ss	@	.,		///
	option(xb)							///
	clickon("script oneon")						///
	label(resource LBL_LINEAR_PREDICTION_XB)
  RADIO rb_stdp			_ilft	_ss	_ibwd	.,		///
	option(stdp)							///
	clickon("script oneon")						///
	label(resource LBL_STANDARD_ERROR_OF_LINEAR_PREDICTION)
  RADIO rb_xbsel		@	_ss	@	.,		///
	option(xbsel)							///
	clickon("script oneon")						///
	label(resource HECKOPR_MAIN_RB_XBSEL)
  RADIO rb_stdpsel		@	_ss	@	.,		///
	option(stdpsel)							///
	clickon("script oneon")						///
	label(resource LBL_SE_LINEAR_PREDICTION_SELECTION_EQUATION)
  RADIO rb_score		@	_ss	@	., last		///
	option(scores)							///
	clickon("script score_on")					///
	label(resource LBL_EQUATION_LEVEL_SCORES)

  CHECKBOX ck_outcome		_ilft3_3	holdy	_cwd3_2	.,	///
	onclickon(program check_label)					///
  	onclickoff(program check_label_off)				///
  	label(resource ZIOPROBIT_P_MAIN_TX_OUTCOME)
  COMBOBOX cb_outcome		@	_ss	@	.,		///
  	option(outcome)							///
  	default(#1)							///
  	dropdown							///
  	contents(main_outcome_k_list)					///
	label(resource LBL_OUTCOME)
	
  CHECKBOX ck_nooffset		_lft	+200	_iwd	.,		///
	option(nooffset)						///
	label(resource LBL_IGNORE_OFFSET_VARIABLE)
END

INCLUDE _p_gentype_sc
INCLUDE ifin
INCLUDE _type_list_fd

SCRIPT score_on
BEGIN
	script manyon
	main.ck_nooffset.disable
END

SCRIPT spin_on
BEGIN
	main.sp_select.enable
END

SCRIPT spin_off
BEGIN
	main.sp_select.disable
END


SCRIPT manyon
BEGIN
	script manyvars_scores
	script eqoff
	main.ck_nooffset.enable
END

SCRIPT oneon
BEGIN
	script onevar
	script eqoff
	main.ck_nooffset.enable
	program ck_enable_outcome_opt
END

SCRIPT oneon_p
BEGIN
	script manyvars
	program eqon
	program check_label
	main.ck_nooffset.enable
END

SCRIPT manyvars_scores
BEGIN
	main.tx_eq_vars.show
	main.ed_eq_vars.show
	main.tx_vars.hide
	main.ed_vars.hide
	main.tx_var.hide
	main.ed_var.hide
END

SCRIPT manyvars
BEGIN
	main.tx_vars.show
	main.ed_vars.show
	main.tx_eq_vars.hide
	main.ed_eq_vars.hide
	main.tx_var.hide
	main.ed_var.hide
END

SCRIPT onevar
BEGIN
	main.tx_var.show
	main.ed_var.show
	main.tx_vars.hide
	main.ed_vars.hide
	main.tx_eq_vars.hide
	main.ed_eq_vars.hide
END

PROGRAM eqon
BEGIN
	call main.ck_outcome.enable
	if main.ck_outcome {
		call main.cb_outcome.enable	
	}
	else {
		call main.cb_outcome.disable	
	}
END

PROGRAM check_label
BEGIN
	call main.ck_outcome.enable
	if  main.ck_outcome {
		call main.cb_outcome.enable
		call main.tx_vars.setlabel resource LBL_NEW_VARIABLE_NAME
		call main.ed_vars.setposition . . 120 .
		call STMP.format "resource LBL_NEW_VARIABLE_NAME"
		call STMP.withvalue main.tx_vars.setlabel "@"	
	}
	
	else {
		call main.cb_outcome.disable
		call main.tx_vars.setlabel resource LBL_NEW_#_VAR_NAMES_FMT
		call main.ed_vars.setposition . . 440 .
		call STMP.format "resource LBL_NEW_#_VAR_NAMES_FMT" "e(k_cat)" 
		call STMP.withvalue main.tx_vars.setlabel "@"	
	}
	
END

PROGRAM check_label_off
BEGIN
	if  !main.ck_outcome {
		call main.cb_outcome.disable
		call main.tx_vars.setlabel resource LBL_NEW_#_VAR_NAMES_FMT
		call main.ed_vars.setposition . . 440 .
		call STMP.format "resource LBL_NEW_#_VAR_NAMES_FMT" "e(k_cat)" 
		call STMP.withvalue main.tx_vars.setlabel "@"			
	}
	
	else {
		call main.cb_outcome.enable
		call main.tx_vars.setlabel resource LBL_NEW_VARIABLE_NAME
		call main.ed_vars.setposition . . 120 .
		call STMP.format "resource LBL_NEW_VARIABLE_NAME"
		call STMP.withvalue main.tx_vars.setlabel "@"
	}
	
END

	
SCRIPT eqoff

BEGIN
	main.ck_outcome.disable
	main.cb_outcome.disable
END




PROGRAM command
BEGIN
	put "predict "
	if main.cb_type.isdefault() {
		if main.rb_pmargin | main.rb_p1 | main.rb_p0 | main.rb_pcond1 | main.rb_pcond0 {
			require main.ed_vars
			put main.ed_vars " "
			}
		if main.rb_xb | main.rb_stdp | main.rb_xbsel | main.rb_stdpsel {
			require main.ed_var
			put main.ed_var " "
		}
		if main.rb_score {
			require main.ed_eq_vars
			put main.ed_eq_vars " "
		}
		
	}
	if ! main.cb_type.isdefault() {
		put main.cb_type " " "("
		if main.rb_pmargin | main.rb_p1 | main.rb_p0 | main.rb_pcond1 | main.rb_pcond0 {
			require main.ed_vars
			put main.ed_vars " "
		}
		if main.rb_xb | main.rb_stdp | main.rb_xbsel | main.rb_stdpsel {
			require main.ed_var
			put main.ed_var " "
		}
		if main.rb_score {
			require main.ed_eq_vars
			put main.ed_eq_vars " "
		}
		put ") "
	}

	put " " /program ifin_output
	beginoptions
		option radio(main rb_pmargin rb_p1 rb_p0 rb_pcond1 rb_pcond0 rb_xb rb_stdp rb_xbsel rb_stdpsel rb_score)
		optionarg main.cb_outcome
		option main.ck_nooffset
	endoptions
END
