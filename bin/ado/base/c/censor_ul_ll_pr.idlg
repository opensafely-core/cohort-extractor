/*
  censor_ul_ll_pr.idlg

* programming for censor ul() ll() include file

*!  VERSION 1.0.0  20aug2018

*/

PROGRAM main_check_ll_ul
BEGIN
	if main.rb_noll {
		call main.ed_llarg.hide
		call main.vn_llvar.hide
	}
	if main.rb_ll {
		call main.ed_llarg.hide
		call main.vn_llvar.hide
	}
	if main.rb_llarg {
		call main.ed_llarg.show
		call main.vn_llvar.hide
	}
	if main.rb_llvar {
		call main.ed_llarg.hide
		call main.vn_llvar.show
	}

	if main.rb_noul {
		call main.ed_ularg.hide
		call main.vn_ulvar.hide
	}
	if main.rb_ul {
		call main.ed_ularg.hide
		call main.vn_ulvar.hide
	}
	if main.rb_ularg {
		call main.ed_ularg.show
		call main.vn_ulvar.hide
	}
	if main.rb_ulvar {
		call main.ed_ularg.hide
		call main.vn_ulvar.show
	}
END

PROGRAM censor_ul_ll_output
BEGIN
	if main.rb_ll {
		option main.rb_ll
	}
	if main.rb_llarg {
		require main.ed_llarg
		optionarg main.ed_llarg
	}
	if main.rb_llvar {
		require main.vn_llvar
		optionarg main.vn_llvar
	}

	if main.rb_ul {
		option main.rb_ul
	}
	if main.rb_ularg {
		require main.ed_ularg
		optionarg main.ed_ularg
	}
	if main.rb_ulvar {
		require main.vn_ulvar
		optionarg main.vn_ulvar
	}
END


//END
