/*
  gr_ed_line.idlg

*!  VERSION 1.1.3  22mar2017

*/


SCRIPT line_PREINIT
BEGIN
	create DOUBLE plotCustomLabel
	create DOUBLE plotCustomStyle

	create DOUBLE index
	create STRING color
	create STRING rgb
	create STRING opacity
	create STRING width
	create STRING pattern
	create STRING cmissing
	create STRING type
	create DOUBLE drawview
	program line_get_defaults

	line.ck_hide.hide
END

DIALOG line, tabtitle(resource LBL_LINE)
BEGIN
  GROUPBOX gb_line	_lft	_top	_iwd	_ht16h,		///
	label(resource LBL_GB_LINE_PROPERTIES)
  TEXT     tx_clr	_ilft	_ss	_wd	.,		///
	label(resource LBL_COLOR) right
  COMBOBOX cb_clr	_sep	@	_cbwd	.,		///
	dropdownlist contents(_colors) 				///
	onselchangelist(line_cl_clr_sel)
  COLOR    cl_clr	_cbsep	@	_clwd	.,
  TEXT     tx_opacity	_ilft	_mls	_wd	.,		///
	label(resource LBL_OPACITY) right
  SPINNER sp_opacity	_sep	@	_spwd	.,		///
	default(100)						///
	min(0)							///
	max(100)
  
  TEXT     tx_width	_ilft	 _mls	_wd	.,		///
	label(resource LBL_WIDTH) right
  COMBOBOX cb_width	_sep	@	_cbwd	.,		///
	dropdown 						///
	contents(_linewidths)

  TEXT     tx_pattern	_ilft	_mls	_wd	.,		///
	label(resource LBL_PATTERN) right
  COMBOBOX cb_pattern	_sep	@	_cbwd	.,		///
	dropdownlist						///
	contents(_linepatterns) 	

  TEXT     tx_cmissing	_ilft	 _mls	_wd	.,		///
	label(resource LBL_FILL_MISSING_VALUES) right
  COMBOBOX cb_cmissing	_sep	@	_cbwd	.,		///
	dropdownlist						///
	contents(_yesno)

  TEXT     tx_type	_ilft	 _mls	_wd	.,		///
	label(resource LBL_CONNECTING_METHOD) right
  COMBOBOX cb_type	_sep	@	_cbwd	.,		///
	dropdownlist						///
	contents(_connecttypes)

  BUTTON   bu_sort	_rj60	_xxls	60	.,		///
	label(resource LBL_SORT) tooltip(resource LBL_RESORT_ON_X_VARIABLE) ///
	onpush(program sort_on_x)

  CHECKBOX ck_hide	_lft	@	_rj80	.,		///
	label(resource LBL_HIDE_PLOT)
END

PROGRAM sort_on_x
BEGIN
	call G.withvalue plotCustomStyle.storeClsArraySize @.obs_styles
	call G.withvalue plotCustomLabel.storeClsArraySize @.obs_labels	
	if plotCustomStyle.iseq(0) & plotCustomLabel.iseq(0) {
		put "_gm_dlg_edits, "
		put "object(" G ") "
		put "cmd(" "." G ".SortOnX" ") "
		stata hidden queue
	}
	else {
		stopbox stop "resource LBL_MSGBOX_SORT_NOT_ALLOWED_PLOTS_CUSTOM_STYLES_LABELS"
// Sort is not allowed on plots with custom styles or labels.
	}
END


SCRIPT line_POSTINIT
BEGIN
	program line_initialize_controls
END

LIST line_cl_clr_sel
BEGIN
	line.cl_clr.show
	line.cl_clr.hide
END

PROGRAM line_get_defaults
BEGIN
	call G.withvalue index.setvalue class @.style.line.color.styledex
	call index.withvalue color.setvalue class .__STYLES.color[@]
	call line.cb_clr.setdefault class color.value
	
	call G.withvalue rgb.setvalue class @.style.line.color.rgb
	call line.cl_clr.setdefault class rgb.value

	call G.withvalue opacity.setvalue class @.style.line.color.opacity
	call line.sp_opacity.setdefault class opacity.value

	call G.withvalue index.setvalue class @.style.line.width.styledex
	call index.withvalue width.setvalue class .__STYLES.linewidth[@]
	if ! width {
		call G.withvalue width.setvalue class @.style.line.width.val
	}
	call line.cb_width.setdefault class width.value

	call G.withvalue index.setvalue class @.style.line.pattern.styledex
	call index.withvalue pattern.setvalue class .__STYLES.linepattern[@]
	call line.cb_pattern.setdefault class pattern.value

	call G.withvalue index.setvalue class @.style.connect_missings.styledex
	call index.withvalue cmissing.setvalue class .__STYLES.yesno[@]
	call line.cb_cmissing.setdefault class cmissing.value

	call G.withvalue index.setvalue class @.style.connect.styledex
	call index.withvalue type.setvalue class .__STYLES.connectstyle[@]
	call line.cb_type.setdefault class type.value

	call G.withvalue drawview.setvalue class @.draw_view.istrue
	if drawview {
		call line.ck_hide.setdefault 0
	}
	else {
		call line.ck_hide.setdefault 1
	}
END

PROGRAM line_initialize_controls
BEGIN
	if color {
		call line.cb_clr.setvalue class color.value
	}
	if ! color {
		call line.cb_clr.setvalue "custom"
	}
	call line.cl_clr.setvalue class rgb.value
	call line.sp_opacity.setvalue class opacity.value

	call line.cb_width.setvalue class width.value
	call line.cb_pattern.setvalue class pattern.value
	call line.cb_cmissing.setvalue class cmissing.value
	call line.cb_type.setvalue class type.value

	if drawview {
		call line.ck_hide.setoff
	}
	else {
		call line.ck_hide.seton
	}
END

PROGRAM line_output
BEGIN
	call program line_get_defaults

	if ! line.cl_clr.isvisible() & ! line.cb_clr.isdefault() {
		put "style(line(color(" 
		put line.cb_clr 
		put "))) "
	}
	if line.cl_clr.isvisible() & ! line.cl_clr.isdefault() {
		put "style(line(color("  `"""'
		put line.cl_clr
		put `"""'
		put "))) "
	}
	if ! line.sp_opacity.isdefault() {
		put "style(line(color("
		put "%"
		put line.sp_opacity
		put "))) "
	}
	if ! line.cb_width.isdefault() {
		put "style(line(width("
		put line.cb_width
		put "))) "
	}
	if ! line.cb_pattern.isdefault() {
		put "style(line(pattern("
		put line.cb_pattern
		put "))) "
	}
	if ! line.cb_cmissing.isdefault() {
		put "style(connect_missings("
		put line.cb_cmissing
		put ")) "
	}
	if ! line.cb_type.isdefault() {
		put "style(connect("
		put line.cb_type
		put ")) "
	}

	if ! line.ck_hide.isdefault() & line.ck_hide.isvisible() {
		if line.ck_hide {
			put "set(draw_view no) "
		}
		else {
			put "set(draw_view yes) "
		}
	}
END
