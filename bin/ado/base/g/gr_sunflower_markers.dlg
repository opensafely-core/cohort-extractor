/*
    gr_sunflower_markers.dlg
    
*!  VERSION 1.1.3  22jul2017

*/

VERSION 14

INCLUDE _std_vsmall
DEFINE _dlght 200
INCLUDE header_gr_child

DEFINE _clwd 15

HELP hlp1, view("help scatter##marker_options")
RESET res1

DEFINE _wd	120
DEFINE _sep	+125
DEFINE _cbwd	130
DEFINE _cbsep 	+135

SCRIPT PREINIT
BEGIN
        setscale_hadj resource GR_SUNFLOWER_MARKERS_DLG_HSCALE
END

DIALOG main, label(resource GR_SUNFLOWER_MARKERS_DLG_TITLE) tabtitle(resource LBL_TAB_MAIN)
BEGIN
  TEXT     tx_size	_lft	20	_wd	.,		///
	label(resource LBL_SIZE) right
  COMBOBOX cb_size	_sep	@	_cbwd	.,		///
	dropdown option(msize)					///
	contents(symbolsizes)

  TEXT     tx_clr	_lft	_mls	_wd	.,		///
	label(resource LBL_COLOR) right
  COMBOBOX cb_clr	_sep	@	_cbwd	.,		///
	dropdownlist contents(colors) option(mcolor)		///
	onselchangelist(main_cl_clr_sel)
  COLOR    cl_clr	_cbsep	@	_clwd	., option(mcolor)
  TEXT     tx_opacity	_lft	_mls	_wd	.,		///
	label(resource LBL_OPACITY) right
  SPINNER sp_opacity	_sep	@	_spwd	.,		///
	default(100)						///
	min(0)							///
	max(100)
  
  TEXT     tx_symbol	_lft	_mls	_wd	.,		///
	label(resource LBL_SYMBOL) right
  COMBOBOX cb_symbol	_sep	@	_cbwd	.,		///
	dropdownlist option(msymbol)				///
	contents(symbols)

  TEXT     tx_msymangle	_lft	_mls	_wd	.,		///
	label(resource LBL_SYMBOL_ANGLE) right
  COMBOBOX cb_msymangle	_sep	@	_cbwd	.,		///
	option(msangle) dropdownlist contents(angles)
END

DIALOG adv, tabtitle(resource LBL_ADVANCED)
BEGIN
  TEXT     tx_mfclr	_lft	20	_wd	.,		///
	label(resource LBL_FILL_COLOR) right
  COMBOBOX cb_mfclr	_sep	@	_cbwd	.,		///
	dropdownlist contents(colors) option(mfcolor)		///
	onselchangelist(adv_cl_mfclr_sel)
  COLOR    cl_mfclr	_cbsep	@	_clwd	., option(mfcolor)
  TEXT     tx_mfopacity	_lft	_mls	_wd	.,		///
	label(resource LBL_FILL_OPACITY) right
  SPINNER sp_mfopacity	_sep	@	_spwd	.,		///
	default(100)						///
	min(0)							///
	max(100)
  TEXT     tx_mlclr	_lft	_mls	_wd	.,		///
	label(resource LBL_OUTLINE_COLOR) right
  COMBOBOX cb_mlclr	_sep	@	_cbwd	.,		///
	dropdownlist contents(colors) option(mlcolor)		///
	onselchangelist(adv_cl_mlclr_sel)
  COLOR    cl_mlclr	_cbsep	@	_clwd	., option(mlcolor)
  TEXT     tx_mlopacity	_lft	_mls	_wd	.,		///
	label(resource LBL_OUTLINE_OPACITY) right
  SPINNER sp_mlopacity	_sep	@	_spwd	.,		///
	default(100)						///
	min(0)							///
	max(100)

  TEXT     tx_lwidth	_lft	_mls	_wd	.,		///
	label(resource LBL_OUTLINE_WIDTH) right
  COMBOBOX cb_lwidth	_sep	@	_cbwd	.,		///
	dropdown option(mlwidth)				///
	contents(linewidths)

   TEXT     tx_lalign	_lft	_mls	_wd	.,		///
      label(resource LBL_OUTLINE_ALIGNMENT) right
   COMBOBOX cb_lalign	_sep	@	_cbwd	.,		///
      dropdownlist option(lalign)				///
      contents(alignstroke)


END

LIST main_cl_clr_sel
BEGIN
	main.cl_clr.hide
	main.cl_clr.show
	main.cl_clr.hide
END

LIST adv_cl_mfclr_sel
BEGIN
	adv.cl_mfclr.hide
	adv.cl_mfclr.show
	adv.cl_mfclr.hide
END

LIST adv_cl_mlclr_sel
BEGIN
	adv.cl_mlclr.hide
	adv.cl_mlclr.show
	adv.cl_mlclr.hide
END

PROGRAM adv_mfcolor_output
BEGIN
	if (adv.cb_mfclr.isneq("") | adv.sp_mfopacity.isneq(100)) {
		put "mfcolor("
		if (adv.cb_mfclr.iseq("custom")) {
			put `"""' adv.cl_mfclr
			if (adv.sp_mfopacity.isneq(100)) {
				put " %" adv.sp_mfopacity
			}
			put `"""'
		}
		else {
			if (adv.cb_mfclr.isneq("")) {
				put adv.cb_mfclr
			}
			if (adv.sp_mfopacity.isneq(100)) {
				put "%" adv.sp_mfopacity
			}
		}
		put ")"
	}
END

PROGRAM adv_mlcolor_output
BEGIN
	if (adv.cb_mlclr.isneq("") | adv.sp_mlopacity.isneq(100)) {
		put "mlcolor("
		if (adv.cb_mlclr.iseq("custom")) {
			put `"""' adv.cl_mlclr
			if (adv.sp_mlopacity.isneq(100)) {
				put " %" adv.sp_mlopacity
			}
			put `"""'
		}
		else {
			if (adv.cb_mlclr.isneq("")) {
				put adv.cb_mlclr
			}
			if (adv.sp_mlopacity.isneq(100)) {
				put "%" adv.sp_mlopacity
			}
		}
		put ")"
	}
END

PROGRAM gr_marker_adv_output
BEGIN
	put /program " " adv_mfcolor_output
	put /program " " adv_mlcolor_output
	optionarg /hidedefault adv.cb_lwidth
	optionarg /hidedefault adv.cb_lalign
END

PROGRAM main_mcolor_output
BEGIN
	if (main.cb_clr.isneq("") | main.sp_opacity.isneq(100)) {
		put "mcolor("
		if (main.cb_clr.iseq("custom")) {
			put `"""' main.cl_clr
			if (main.sp_opacity.isneq(100)) {
				put " %" main.sp_opacity
			}
			put `"""'
		}
		else {
			if (main.cb_clr.isneq("")) {
				put main.cb_clr
			}
			if (main.sp_opacity.isneq(100)) {
				put "%" main.sp_opacity
			}
		}
		put ")"
	}
END

PROGRAM command
BEGIN
	put /program " " main_mcolor_output
	optionarg /hidedefault main.cb_size
	optionarg /hidedefault main.cb_symbol
	optionarg /hidedefault main.cb_msymangle

	put " " /program gr_marker_adv_output
END
