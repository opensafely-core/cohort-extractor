/*
  gr_bar_label.dlg

*!  VERSION 1.1.3  11dec2017

*/

VERSION 15.0

INCLUDE _std_vsmall
DEFINE _dlght 220
INCLUDE header_gr_child

DEFINE _clwd	15
DEFINE _wd	130
DEFINE _sep	+135
DEFINE _cbwd	120
DEFINE _cbsep	+125

INCLUDE gr_orientation

HELP hlp1, view("help graph_bar##lookofbar_options")
RESET res1

SCRIPT PREINIT
BEGIN
	create STRING tmp
	create ARRAY  tmpArray
	create STRING main_marginResult
	create STRING box_marginResult
	setscale_hadj resource GR_BAR_LABEL_DLG_HSCALE
END

SCRIPT POSTINIT
BEGIN
	program main_checkMarginResult
	program box_checkMarginResult
END

DIALOG main, title(resource LBL_GB_BAR_LABEL_PROPERTIES) tabtitle(resource LBL_TAB_MAIN)
BEGIN
  TEXT     tx_size	_lft	15	_wd	.,	///
	label(resource LBL_SIZE) right
  COMBOBOX cb_size     _sep	@	_cbwd	.,	///
	dropdown contents(textsizes) option(size)

  TEXT     tx_clr	_lft	_mls	_wd	.,	///
	label(resource LBL_COLOR) right
  COMBOBOX cb_clr	_sep	@	_cbwd	.,	///
	dropdownlist contents(colors)			///
	onselchangelist(cl_clr_selection) 		///
	option(color)
  COLOR    cl_clr	_cbsep	@	_clwd	.,	///
	option(color)
  TEXT     tx_opacity	_lft	_mls	_wd	.,	///
	label(resource LBL_OPACITY) right
  SPINNER sp_opacity	_sep	@	_spwd	.,	///
	default(100)					///
	min(0)						///
	max(100)

  TEXT     tx_position	_lft	_mls	_wd	.,	///
	label(resource LBL_POSITION) right
  COMBOBOX cb_position	_sep	@	_cbwd	.,	///
	dropdownlist option(position) 			///
	contents(position_list) 			///
	values(position_list_values)
  
  TEXT     tx_orient	_lft	_mls	_wd	.,	///
	label(resource LBL_ORIENTATION) right
  COMBOBOX cb_orient	_sep	@	_cbwd	.,	///
	dropdownlist option(orientation)		///
	contents(orientation) values(orientation_values)

  TEXT     tx_margin	_lft	_mls	_wd	.,	///
	label(resource LBL_MARGIN) right
  COMBOBOX cb_margin	_sep	@	_cbwd	.,	///
	dropdownlist					///
	contents(margin)				///
	option(margin)					///
	onselchange(program main_cb_margin_check)
  BUTTON   bu_margin	_cbsep	@	_clwd	.,	///
	label(resource LBL_TWO_DOTS) tooltip(resource LBL_CUSTOM_MARGIN) ///
	onpush(script main_show_margin_dialog)

  TEXT     tx_fmt	_lft	_mls	_wd	.,	///
  	label(resource LBL_FORMAT) right
  EDIT     ed_fmt	_sep	@	_cbwd	.,	///
	option(format)
  BUTTON   bu_fmt	_cbsep	@	_clwd	.,	///
	label(resource LBL_TWO_DOTS) onpush(script label_GetFormat) ///
	tooltip(resource LBL_CREATE_DISPLAY_FORMAT)
END

SCRIPT label_GetFormat
BEGIN
	create STRING labelFormat
	create CHILD format_chooser
	format_chooser.setExitString labelFormat
	format_chooser.setExitAction "main.ed_fmt.setvalue class labelFormat.value"
END

LIST position_list
BEGIN
	resource LBL_DEFAULT
	resource LBL_OUTSIDE
	resource LBL_INSIDE
	resource LBL_BASE_POSITION
	resource LBL_CENTER
END

LIST position_list_values
BEGIN
	""
	resource LBL_OUTSIDE
	resource LBL_INSIDE
	resource LBL_BASE
	resource LBL_CENTER
END

LIST cl_clr_selection
BEGIN
	main.cl_clr.hide
	main.cl_clr.show
	main.cl_clr.hide
END

PROGRAM main_cb_margin_check
BEGIN
	if main.cb_margin.iseq("custom") {
		call main.bu_margin.show
	}
	else {
		call main.bu_margin.hide
	}
END

SCRIPT main_show_margin_dialog
BEGIN
	create CHILD gr_margin_create AS main_margin_dlg
	main_margin_dlg.setExitString main_marginResult
	main_margin_dlg.setExitAction "program main_checkMarginResult"
END	
PROGRAM main_checkMarginResult
BEGIN
	if main_marginResult {
		call main_marginResult.tokenize tmpArray
		call tmp.setvalue "Custom margin "
		call tmp.append "(Left:"
		call tmp.append class tmpArray[1]
		call tmp.append " Right:"
		call tmp.append class tmpArray[2]
		call tmp.append " Bottom:"
		call tmp.append class tmpArray[3]
		call tmp.append " Top:"
		call tmp.append class tmpArray[4]
		call tmp.append ")"
		call tmp.withvalue main.bu_margin.settooltip "@"
	}
	else {
		call main.bu_margin.settooltip resource LBL_CUSTOM_MARGIN_NOT_DEFINED
	}
END

DIALOG box, tabtitle(resource LBL_TAB_BOX)
BEGIN
  CHECKBOX ck_box	_lft	15	_iwd	_ht16,	///
	groupbox 					///
	label(resource LBL_PLACE_BOX_AROUND_TEXT)	///
	option(box)		 			///
	onclickon(script box_on)			///
	onclickoff(script box_off)

  TEXT     tx_bclr	_ilft	_ss	_wd	.,	///
	label(resource LBL_FILL_COLOR) right
  COMBOBOX cb_bclr	_sep	@	_cbwd	.,	///
	dropdownlist					///
	contents(colors) 				///
	option(fcolor)					///
	onselchangelist(cl_bclr_selection)
  COLOR    cl_bclr	_cbsep	@	_clwd	.,	///
	option(fcolor)
  TEXT     tx_bopacity	_ilft	_mls	_wd	.,	///
	label(resource LBL_FILL_OPACITY) right
  SPINNER  sp_bopacity	_sep	@	_spwd	.,	///
	default(100)					///
	min(0)						///
	max(100)
  TEXT     tx_blclr	_ilft	_mls	_wd	.,	///
	label(resource LBL_OUTLINE_COLOR) right
  COMBOBOX cb_blclr	_sep	@	_cbwd	.,	///
	dropdownlist					///
	contents(colors)				///
	option(lcolor)					///
	onselchangelist(cl_blclr_selection)
  COLOR    cl_blclr	_cbsep	@	_clwd	.,	///
	option(lcolor)
  TEXT     tx_blopacity	_ilft	_mls	_wd	.,	///
	label(resource LBL_OUTLINE_OPACITY) right
  SPINNER sp_blopacity	_sep	@	_spwd	.,	///
	default(100)					///
	min(0)						///
	max(100) 
   TEXT     tx_lalign	_ilft	_mls	_wd	.,		///
      label(resource LBL_OUTLINE_ALIGNMENT) right
   COMBOBOX cb_lalign	_sep	@	_cbwd	.,		///
      dropdownlist option(lalign)				///
      contents(alignstroke)

  TEXT     tx_bmargin	_ilft	_mls	_wd	.,	///
	label(resource LBL_MARGIN) right
  COMBOBOX cb_bmargin	_sep	@	_cbwd	.,	///
	dropdownlist					///
	contents(margin)				///
	option(bmargin)					///
	onselchange(program box_cb_bmargin_check)
  BUTTON   bu_bmargin	_cbsep	@	_clwd	.,	///
	tooltip(resource LBL_CUSTOM_MARGIN) 		///
	onpush(script box_show_bmargin_dialog)		///
	label(resource LBL_TWO_DOTS)
END

LIST cl_bclr_selection
BEGIN
	box.cl_bclr.hide
	box.cl_bclr.show
	box.cl_bclr.hide
END

LIST cl_blclr_selection
BEGIN
	box.cl_blclr.hide
	box.cl_blclr.show
	box.cl_blclr.hide
END

SCRIPT box_on
BEGIN
	box.tx_bclr.enable
	box.cb_bclr.enable
	box.cl_bclr.enable
	box.tx_blclr.enable
	box.cb_blclr.enable
	box.cl_blclr.enable
	box.tx_bopacity.enable
	box.sp_bopacity.enable
	box.tx_blopacity.enable
	box.sp_blopacity.enable	
	box.tx_lalign.enable
	box.cb_lalign.enable	
	box.tx_bmargin.enable
	box.cb_bmargin.enable
	box.bu_bmargin.enable
END

SCRIPT box_off
BEGIN
	box.tx_bclr.disable
	box.cb_bclr.disable
	box.cl_bclr.disable
	box.tx_blclr.disable
	box.cb_blclr.disable
	box.cl_blclr.disable
	box.tx_bopacity.disable
	box.sp_bopacity.disable
	box.tx_blopacity.disable
	box.sp_blopacity.disable
	box.tx_lalign.disable
	box.cb_lalign.disable	
	box.tx_bmargin.disable
	box.cb_bmargin.disable
	box.bu_bmargin.disable
END

PROGRAM box_cb_bmargin_check
BEGIN
	if box.cb_bmargin.iseq("custom") {
		call box.bu_bmargin.show
	}
	else {
		call box.bu_bmargin.hide
	}
END

SCRIPT box_show_bmargin_dialog
BEGIN
	create CHILD gr_margin_create AS box_bmargin_dlg
	box_bmargin_dlg.setExitString box_marginResult
	box_bmargin_dlg.setExitAction "program box_checkMarginResult"
END	
PROGRAM box_checkMarginResult
BEGIN
	if box_marginResult {
		call box_marginResult.tokenize tmpArray
		call tmp.setvalue "Custom margin "
		call tmp.append "(Left:"
		call tmp.append class tmpArray[1]
		call tmp.append " Right:"
		call tmp.append class tmpArray[2]
		call tmp.append " Bottom:"
		call tmp.append class tmpArray[3]
		call tmp.append " Top:"
		call tmp.append class tmpArray[4]
		call tmp.append ")"
		call tmp.withvalue box.bu_bmargin.settooltip "@"
	}
	else {
		call box.bu_bmargin.settooltip resource LBL_CUSTOM_MARGIN_NOT_DEFINED
	}
END

DIALOG adv, tabtitle(resource LBL_ADVANCED)
BEGIN
  TEXT     tx_just	_lft	15	_wd	.,	///
	label(resource LBL_JUSTIFICATION) right
  COMBOBOX cb_just	_sep	@	_cbwd	.,	///
	dropdownlist 					///
	contents(justification)  			///
	option(justification)
  
  TEXT     tx_align	_lft	_mls	_wd	.,	///
	label(resource LBL_ALIGNMENT) right
  COMBOBOX cb_align	_sep	@	_cbwd	.,	///
	dropdownlist 					///
	contents(alignment)				///
	option(alignment)

  TEXT     tx_gap	_lft	_mls	_wd	.,	///
  	label(resource LBL_GAP) right
  EDIT     ed_gap	_sep	@	_cbwd	.,	///
	option(gap)
END

PROGRAM command
BEGIN
	optionarg /hidedefault main.cb_size
	if (main.cb_clr.isneq("") | main.sp_opacity.isneq(100)) {
		put " color("
		if (main.cb_clr.iseq("custom")) {
			put `"""' main.cl_clr
			if (main.sp_opacity.isneq(100)) {
				put " %" main.sp_opacity
			}
			put `"""'
		}
		else {
			if (main.cb_clr.isneq("")) {
				put main.cb_clr
			}
			if (main.sp_opacity.isneq(100)) {
				put "%" main.sp_opacity
			}
		}
		put ")"
	}
	optionarg /hidedefault main.cb_position
	optionarg /hidedefault main.cb_orient
	if main.cb_margin.isneq("custom") {
		optionarg /hidedefault main.cb_margin
	}
	else {
		if main_marginResult {
			put " margin("
			put main_marginResult
			put ") "
		}
	}
	optionarg /hidedefault main.ed_fmt
	
	option box.ck_box
	if (box.cb_bclr.isneq("") | box.sp_bopacity.isneq(100)) {
		put " fcolor("
		if (box.cb_bclr.iseq("custom")) {
			put `"""' box.cl_bclr
			if (box.sp_bopacity.isneq(100)) {
				put " %" box.sp_bopacity
			}
			put `"""'
		}
		else {
			if (box.cb_bclr.isneq("")) {
				put box.cb_bclr
			}
			if (box.sp_bopacity.isneq(100)) {
				put "%" box.sp_bopacity
			}
		}
		put ")"
	}
	if (box.cb_blclr.isneq("") | box.sp_blopacity.isneq(100)) {
		put " lcolor("
		if (box.cb_blclr.iseq("custom")) {
			put `"""' box.cl_blclr
			if (box.sp_blopacity.isneq(100)) {
				put " %" box.sp_blopacity
			}
			put `"""'
		}
		else {
			if (box.cb_blclr.isneq("")) {
				put box.cb_blclr
			}
			if (box.sp_blopacity.isneq(100)) {
				put "%" box.sp_blopacity
			}
		}
		put ")"
	}
	if box.cb_bmargin.isneq("custom") {
		optionarg /hidedefault box.cb_bmargin
	}
	else {
		if box_marginResult {
			put " bmargin("
			put box_marginResult
			put ") "
		}
	}
	optionarg /hidedefault box.cb_lalign
	optionarg /hidedefault adv.cb_just
	optionarg /hidedefault adv.cb_align
	optionarg /hidedefault adv.ed_gap
END
