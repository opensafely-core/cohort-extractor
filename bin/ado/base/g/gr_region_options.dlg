/*
    gr_region_options.dlg

*!  VERSION 1.1.3  31jul2017
	
	// SCRIPTS and PROGRAMS for external use

*/

VERSION 15.0

INCLUDE _std_small
DEFINE _dlght 510
INCLUDE header_gr_child

INCLUDE gr_orientation

DEFINE _clwd	15
DEFINE _wd	130
DEFINE _sep	+135
DEFINE _wd2	120
DEFINE _sep2	+125
DEFINE _cbwd	120
DEFINE _cbsep	+125

SCRIPT PREINIT
BEGIN
	create STRING tmp
	create ARRAY  tmpArray
	create STRING graph_marginResult
	create STRING plot_marginResult
	setscale_hadj resource GR_REGION_OPTIONS_DLG_HSCALE
END

SCRIPT POSTINIT
BEGIN
	program graph_checkMarginResult
	program plot_checkMarginResult
END

HELP hlp1, view("help region_options")
RESET res1

DIALOG graph, label(resource LBL_REGION_OPTIONS) tabtitle(resource LBL_GRAPH_REGION)
BEGIN
  TEXT     tx_margin	_lft 	_top	_iwd	.,		///
	label(resource LBL_MARGIN_BETWEEN_OUTER_INNER_GRAPH_REGIONS)
  COMBOBOX cb_margin	@	_ss	_cbwd	.,		///
	dropdownlist contents(margin)				///
	option(margin)						///
	onselchange(program graph_cb_margin_check)
  BUTTON   bu_margin	_vnsep	@	_clwd	.,		///
	label(resource LBL_TWO_DOTS) 				///
	tooltip(resource LBL_CUSTOM_MARGIN)			///
	onpush(script graph_show_margin_dialog)

  GROUPBOX gp_outer	_lft	_ls	_iwd	_ht18h,		///
	label(resource LBL_OVERALL_REGION)

  TEXT     tx_fcolor	_ilft	_ss	_wd	.,		///
	label(resource LBL_FILL_COLOR) right
  COMBOBOX cb_fcolor	_sep	@	_cbwd	.,		///
	dropdownlist contents(colors)				///
	onselchangelist(region_graph_fcolor_sel) option(fcolor)
  COLOR    cl_fcolor	_cbsep	@	_clwd	., option(fcolor)
  TEXT     tx_fopacity	_ilft	_mls	_wd	.,		///
	label(resource LBL_FILL_OPACITY) right
  SPINNER  sp_fopacity	_sep	@	_spwd	.,		///
	default(100)						///
	min(0)							///
	max(100)

  TEXT     tx_lcolor	_ilft	_mls	_wd	.,		///
	label(resource LBL_OUTLINE_COLOR) right
  COMBOBOX cb_lcolor	_sep	@	_cbwd	.,		///
	dropdownlist contents(colors)				///
	onselchangelist(region_graph_lcolor_sel) option(lcolor)
  COLOR    cl_lcolor	_cbsep	@	_clwd	., option(lcolor)
  TEXT     tx_lopacity	_ilft	_mls	_wd	.,		///
	label(resource LBL_OUTLINE_OPACITY) right
  SPINNER  sp_lopacity	_sep	@	_spwd	.,		///
	default(100)						///
	min(0)							///
	max(100)

  TEXT     tx_lwidth	_ilft	_mls	_wd	.,		///
	label(resource LBL_OUTLINE_WIDTH) right
  COMBOBOX cb_lwidth	_sep	@	_cbwd	.,		///
	dropdown contents(linewidths)				///
	option(lwidth)
	
  TEXT     tx_lpattern	_ilft	_mls	_wd	.,		///
	label(resource LBL_OUTLINE_PATTERN) right
  COMBOBOX cb_lpattern	_sep	@	_cbwd	.,		///
	dropdownlist contents(linepatterns)			///
	option(lpattern)

   TEXT     tx_lalign	_ilft	_mls	_wd	.,		///
      label(resource LBL_OUTLINE_ALIGNMENT) right
   COMBOBOX cb_lalign	_sep	@	_cbwd	.,		///
      dropdownlist option(lalign)				///
      contents(alignstroke)



  GROUPBOX gp_inner	_lft	_xls	_iwd	_ht18h,		///
	label(resource LBL_INNER_REGION_ADVANCED)

  TEXT     tx_ifcolor	_ilft	_ss	_wd	.,		///
	label(resource LBL_FILL_COLOR) right
  COMBOBOX cb_ifcolor	_sep	@	_cbwd	.,		///
	dropdownlist contents(colors)				///
	onselchangelist(region_graph_ifcolor_sel) option(ifcolor)
  COLOR    cl_ifcolor	_cbsep	@	_clwd	., option(ifcolor)
  TEXT     tx_ifopacity	_ilft	_mls	_wd	.,		///
	label(resource LBL_FILL_OPACITY) right
  SPINNER  sp_ifopacity	_sep	@	_spwd	.,		///
	default(100)						///
	min(0)							///
	max(100)

  TEXT     tx_ilcolor	_ilft	_mls	_wd	.,		///
	label(resource LBL_OUTLINE_COLOR) right
  COMBOBOX cb_ilcolor	_sep	@	_cbwd	.,		///
	dropdownlist contents(colors)				///
	onselchangelist(region_graph_ilcolor_sel) option(ilcolor)
  COLOR    cl_ilcolor	_cbsep	@	_clwd	., option(ilcolor)
  TEXT     tx_ilopacity	_ilft	_mls	_wd	.,		///
	label(resource LBL_OUTLINE_OPACITY) right
  SPINNER  sp_ilopacity	_sep	@	_spwd	.,		///
	default(100)						///
	min(0)							///
	max(100)

  TEXT     tx_ilwidth	_ilft	_mls	_wd	.,		///
	label(resource LBL_OUTLINE_WIDTH) right
  COMBOBOX cb_ilwidth	_sep	@	_cbwd	.,		///
	dropdown contents(linewidths)				///
	option(ilwidth)
	
  TEXT     tx_ilpattern	_ilft	_mls	_wd	.,		///
	label(resource LBL_OUTLINE_PATTERN) right
  COMBOBOX cb_ilpattern	_sep	@	_cbwd	.,		///
	dropdownlist contents(linepatterns)			///
	option(ilpattern)

   TEXT     tx_ilalign	_ilft	_mls	_wd	.,		///
      label(resource LBL_OUTLINE_ALIGNMENT) right
   COMBOBOX cb_ilalign	_sep	@	_cbwd	.,		///
      dropdownlist option(ilalign)				///
      contents(alignstroke)

END

PROGRAM graph_cb_margin_check
BEGIN
	if graph.cb_margin.iseq("custom") {
		call graph.bu_margin.show
	}
	else {
		call graph.bu_margin.hide
	}
END

SCRIPT graph_show_margin_dialog
BEGIN
	create CHILD gr_margin_create AS graph_margin_dlg
	graph_margin_dlg.setExitString graph_marginResult
	graph_margin_dlg.setExitAction "program graph_checkMarginResult"
END	
PROGRAM graph_checkMarginResult
BEGIN
	if graph_marginResult {
		call graph_marginResult.tokenize tmpArray
		call tmp.setvalue "Custom margin "
		call tmp.append "(Left:"
		call tmp.append class tmpArray[1]
		call tmp.append " Right:"
		call tmp.append class tmpArray[2]
		call tmp.append " Bottom:"
		call tmp.append class tmpArray[3]
		call tmp.append " Top:"
		call tmp.append class tmpArray[4]
		call tmp.append ")"
		call tmp.withvalue graph.bu_margin.settooltip "@"
	}
	else {
		call graph.bu_margin.settooltip resource LBL_CUSTOM_MARGIN_NOT_DEFINED
	}
END

LIST region_graph_fcolor_sel
BEGIN
	graph.cl_fcolor.hide
	graph.cl_fcolor.show
	graph.cl_fcolor.hide
END
LIST region_graph_lcolor_sel
BEGIN
	graph.cl_lcolor.hide
	graph.cl_lcolor.show
	graph.cl_lcolor.hide
END

LIST region_graph_ifcolor_sel
BEGIN
	graph.cl_ifcolor.hide
	graph.cl_ifcolor.show
	graph.cl_ifcolor.hide
END
LIST region_graph_ilcolor_sel
BEGIN
	graph.cl_ilcolor.hide
	graph.cl_ilcolor.show
	graph.cl_ilcolor.hide
END

PROGRAM graph_fcolor_output
BEGIN
	if (graph.cb_fcolor.isneq("") | graph.sp_fopacity.isneq(100)) {
		put "fcolor("
		if (graph.cb_fcolor.iseq("custom")) {
			put `"""' graph.cl_fcolor
			if (graph.sp_fopacity.isneq(100)) {
				put " %" graph.sp_fopacity
			}
			put `"""'
		}
		else {
			if (graph.cb_fcolor.isneq("")) {
				put graph.cb_fcolor
			}
			if (graph.sp_fopacity.isneq(100)) {
				put "%" graph.sp_fopacity
			}
		}
		put ")"
	}
END
PROGRAM graph_lcolor_output
BEGIN
	if (graph.cb_lcolor.isneq("") | graph.sp_lopacity.isneq(100)) {
		put "lcolor("
		if (graph.cb_lcolor.iseq("custom")) {
			put `"""' graph.cl_lcolor
			if (graph.sp_lopacity.isneq(100)) {
				put " %" graph.sp_lopacity
			}
			put `"""'
		}
		else {
			if (graph.cb_lcolor.isneq("")) {
				put graph.cb_lcolor
			}
			if (graph.sp_lopacity.isneq(100)) {
				put "%" graph.sp_lopacity
			}
		}
		put ")"
	}
END
PROGRAM graph_ifcolor_output
BEGIN
	if (graph.cb_ifcolor.isneq("") | graph.sp_ifopacity.isneq(100)) {
		put "ifcolor("
		if (graph.cb_ifcolor.iseq("custom")) {
			put `"""' graph.cl_ifcolor
			if (graph.sp_ifopacity.isneq(100)) {
				put " %" graph.sp_ifopacity
			}
			put `"""'
		}
		else {
			if (graph.cb_ifcolor.isneq("")) {
				put graph.cb_ifcolor
			}
			if (graph.sp_ifopacity.isneq(100)) {
				put "%" graph.sp_ifopacity
			}
		}
		put ")"
	}
END
PROGRAM graph_ilcolor_output
BEGIN
	if (graph.cb_ilcolor.isneq("") | graph.sp_ilopacity.isneq(100)) {
		put "ilcolor("
		if (graph.cb_ilcolor.iseq("custom")) {
			put `"""' graph.cl_ilcolor
			if (graph.sp_ilopacity.isneq(100)) {
				put " %" graph.sp_ilopacity
			}
			put `"""'
		}
		else {
			if (graph.cb_ilcolor.isneq("")) {
				put graph.cb_ilcolor
			}
			if (graph.sp_ilopacity.isneq(100)) {
				put "%" graph.sp_ilopacity
			}
		}
		put ")"
	}
END
PROGRAM graph_output_wrk
BEGIN
	if graph.cb_margin.isneq("custom") {
		optionarg /hidedefault graph.cb_margin
	}
	else {
		if graph_marginResult {
			put " margin("
			put graph_marginResult
			put ") "
		}
	}

	put /program " " graph_fcolor_output
	put /program " " graph_lcolor_output
	optionarg /hidedefault graph.cb_lwidth
	optionarg /hidedefault graph.cb_lpattern
	optionarg /hidedefault graph.cb_lalign
	
	put /program " " graph_ifcolor_output
	put /program " " graph_ilcolor_output
	optionarg /hidedefault graph.cb_ilwidth
	optionarg /hidedefault graph.cb_ilpattern
	optionarg /hidedefault graph.cb_ilalign
END

PROGRAM graph_output
BEGIN
	if ( (graph.cb_margin & graph.cb_margin.isneq("custom")) 	///
		| (graph.cb_margin.iseq("custom") & graph_marginResult ) ///
		| graph.cb_fcolor | graph.cb_lcolor 			///
		| graph.sp_fopacity.isneq(100)				///
		| graph.sp_lopacity.isneq(100)				///
		| graph.cb_lwidth | graph.cb_lpattern | graph.cb_lalign	///
		| graph.cb_ifcolor | graph.cb_ilcolor 			///
		| graph.sp_ifopacity.isneq(100)				///
		| graph.sp_ilopacity.isneq(100) | graph.cb_ilalign	///
		| graph.cb_ilwidth | graph.cb_ilpattern	)		///
	{
		put " graphregion("
		put /program graph_output_wrk
		put ") "
	}
END

DIALOG plot, tabtitle(resource LBL_PLOT_REGION)
BEGIN
  TEXT     tx_margin	_lft 	_top	_iwd	.,		///
	label(resource GR_REGION_OPTIONS_PLOT_TX_MARGIN)
  COMBOBOX cb_margin	@	_ss	_cbwd	.,		///
	dropdownlist contents(margin)				///
	option(margin)						///
	onselchange(program plot_cb_margin_check)
  BUTTON   bu_margin	_vnsep	@	_clwd	.,		///
	label(resource LBL_TWO_DOTS) tooltip(resource LBL_CUSTOM_MARGIN)			///
	onpush(script plot_show_margin_dialog)
	
  GROUPBOX gp_outer	_lft	_ls	_iwd	_ht18h,		///
	label(resource LBL_OVERALL_REGION)

  TEXT     tx_fcolor	_ilft	_ss	_wd	.,		///
	label(resource LBL_FILL_COLOR) right
  COMBOBOX cb_fcolor	_sep	@	_cbwd	.,		///
	dropdownlist contents(colors)				///
	onselchangelist(region_plot_fcolor_sel) option(fcolor)
  COLOR    cl_fcolor	_cbsep	@	_clwd	., option(fcolor)
  TEXT     tx_fopacity	_ilft	_mls	_wd	.,		///
	label(resource LBL_FILL_OPACITY) right
  SPINNER  sp_fopacity	_sep	@	_spwd	.,		///
	default(100)						///
	min(0)							///
	max(100)

  TEXT     tx_lcolor	_ilft	_mls	_wd	.,		///
	label(resource LBL_OUTLINE_COLOR) right
  COMBOBOX cb_lcolor	_sep	@	_cbwd	.,		///
	dropdownlist contents(colors)				///
	onselchangelist(region_plot_lcolor_sel) option(lcolor)
  COLOR    cl_lcolor	_cbsep	@	_clwd	., option(lcolor)
  TEXT     tx_lopacity	_ilft	_mls	_wd	.,		///
	label(resource LBL_OUTLINE_OPACITY) right
  SPINNER  sp_lopacity	_sep	@	_spwd	.,		///
	default(100)						///
	min(0)							///
	max(100)

  TEXT     tx_lwidth	_ilft	_mls	_wd	.,		///
	label(resource LBL_OUTLINE_WIDTH) right
  COMBOBOX cb_lwidth	_sep	@	_cbwd	.,		///
	dropdown contents(linewidths)				///
	option(lwidth)
	
  TEXT     tx_lpattern	_ilft	_mls	_wd	.,		///
	label(resource LBL_OUTLINE_PATTERN) right
  COMBOBOX cb_lpattern	_sep	@	_cbwd	.,		///
	dropdownlist contents(linepatterns)			///
	option(lpattern)

   TEXT     tx_lalign	_ilft	_mls	_wd	.,		///
      label(resource LBL_OUTLINE_ALIGNMENT) right
   COMBOBOX cb_lalign	_sep	@	_cbwd	.,		///
      dropdownlist option(lalign)				///
      contents(alignstroke)

  GROUPBOX gp_inner	_lft	_xls	_iwd	_ht18h,		///
	label(resource LBL_INNER_REGION_ADVANCED)

  TEXT     tx_ifcolor	_ilft	_ss	_wd	.,		///
	label(resource LBL_FILL_COLOR) right
  COMBOBOX cb_ifcolor	_sep	@	_cbwd	.,		///
	dropdownlist contents(colors)				///
	onselchangelist(region_plot_ifcolor_sel) option(ifcolor)
  COLOR    cl_ifcolor	_cbsep	@	_clwd	., option(ifcolor)
  TEXT     tx_ifopacity	_ilft	_mls	_wd	.,		///
	label(resource LBL_FILL_OPACITY) right
  SPINNER  sp_ifopacity	_sep	@	_spwd	.,		///
	default(100)						///
	min(0)							///
	max(100)

  TEXT     tx_ilcolor	_ilft	_mls	_wd	.,		///
	label(resource LBL_OUTLINE_COLOR) right
  COMBOBOX cb_ilcolor	_sep	@	_cbwd	.,		///
	dropdownlist contents(colors)				///
	onselchangelist(region_plot_ilcolor_sel) option(ilcolor)
  COLOR    cl_ilcolor	_cbsep	@	_clwd	., option(ilcolor)
  TEXT     tx_ilopacity	_ilft	_mls	_wd	.,		///
	label(resource LBL_OUTLINE_OPACITY) right
  SPINNER  sp_ilopacity	_sep	@	_spwd	.,		///
	default(100)						///
	min(0)							///
	max(100)

  TEXT     tx_ilwidth	_ilft	_mls	_wd	.,		///
	label(resource LBL_OUTLINE_WIDTH) right
  COMBOBOX cb_ilwidth	_sep	@	_cbwd	.,		///
	dropdown contents(linewidths)				///
	option(ilwidth)
	
  TEXT     tx_ilpattern	_ilft	_mls	_wd	.,		///
	label(resource LBL_OUTLINE_PATTERN) right
  COMBOBOX cb_ilpattern	_sep	@	_cbwd	.,		///
	dropdownlist contents(linepatterns)			///
	option(ilpattern)

   TEXT     tx_ilalign	_ilft	_mls	_wd	.,		///
      label(resource LBL_OUTLINE_ALIGNMENT) right
   COMBOBOX cb_ilalign	_sep	@	_cbwd	.,		///
      dropdownlist option(ilalign)				///
      contents(alignstroke)
END

PROGRAM plot_cb_margin_check
BEGIN
	if plot.cb_margin.iseq("custom") {
		call plot.bu_margin.show
	}
	else {
		call plot.bu_margin.hide
	}
END

SCRIPT plot_show_margin_dialog
BEGIN
	create CHILD gr_margin_create AS plot_margin_dlg
	plot_margin_dlg.setExitString plot_marginResult
	plot_margin_dlg.setExitAction "program plot_checkMarginResult"
END	
PROGRAM plot_checkMarginResult
BEGIN
	if plot_marginResult {
		call plot_marginResult.tokenize tmpArray
		call tmp.setvalue "Custom margin "
		call tmp.append "(Left:"
		call tmp.append class tmpArray[1]
		call tmp.append " Right:"
		call tmp.append class tmpArray[2]
		call tmp.append " Bottom:"
		call tmp.append class tmpArray[3]
		call tmp.append " Top:"
		call tmp.append class tmpArray[4]
		call tmp.append ")"
		call tmp.withvalue plot.bu_margin.settooltip "@"
	}
	else {
		call plot.bu_margin.settooltip resource LBL_CUSTOM_MARGIN_NOT_DEFINED
	}
END

LIST region_plot_fcolor_sel
BEGIN
	plot.cl_fcolor.hide
	plot.cl_fcolor.show
	plot.cl_fcolor.hide
END
LIST region_plot_lcolor_sel
BEGIN
	plot.cl_lcolor.hide
	plot.cl_lcolor.show
	plot.cl_lcolor.hide
END

LIST region_plot_ifcolor_sel
BEGIN
	plot.cl_ifcolor.hide
	plot.cl_ifcolor.show
	plot.cl_ifcolor.hide
END
LIST region_plot_ilcolor_sel
BEGIN
	plot.cl_ilcolor.hide
	plot.cl_ilcolor.show
	plot.cl_ilcolor.hide
END

PROGRAM plot_fcolor_output
BEGIN
	if (plot.cb_fcolor.isneq("") | plot.sp_fopacity.isneq(100)) {
		put "fcolor("
		if (plot.cb_fcolor.iseq("custom")) {
			put `"""' plot.cl_fcolor
			if (plot.sp_fopacity.isneq(100)) {
				put " %" plot.sp_fopacity
			}
			put `"""'
		}
		else {
			if (plot.cb_fcolor.isneq("")) {
				put plot.cb_fcolor
			}
			if (plot.sp_fopacity.isneq(100)) {
				put "%" plot.sp_fopacity
			}
		}
		put ")"
	}
END
PROGRAM plot_lcolor_output
BEGIN
	if (plot.cb_lcolor.isneq("") | plot.sp_lopacity.isneq(100)) {
		put "lcolor("
		if (plot.cb_lcolor.iseq("custom")) {
			put `"""' plot.cl_lcolor
			if (plot.sp_lopacity.isneq(100)) {
				put " %" plot.sp_lopacity
			}
			put `"""'
		}
		else {
			if (plot.cb_lcolor.isneq("")) {
				put plot.cb_lcolor
			}
			if (plot.sp_lopacity.isneq(100)) {
				put "%" plot.sp_lopacity
			}
		}
		put ")"
	}
END
PROGRAM plot_ifcolor_output
BEGIN
	if (plot.cb_ifcolor.isneq("") | plot.sp_ifopacity.isneq(100)) {
		put "ifcolor("
		if (plot.cb_ifcolor.iseq("custom")) {
			put `"""' plot.cl_ifcolor
			if (plot.sp_ifopacity.isneq(100)) {
				put " %" plot.sp_ifopacity
			}
			put `"""'
		}
		else {
			if (plot.cb_ifcolor.isneq("")) {
				put plot.cb_ifcolor
			}
			if (plot.sp_ifopacity.isneq(100)) {
				put "%" plot.sp_ifopacity
			}
		}
		put ")"
	}
END
PROGRAM plot_ilcolor_output
BEGIN
	if (plot.cb_ilcolor.isneq("") | plot.sp_ilopacity.isneq(100)) {
		put "ilcolor("
		if (plot.cb_ilcolor.iseq("custom")) {
			put `"""' plot.cl_ilcolor
			if (plot.sp_ilopacity.isneq(100)) {
				put " %" plot.sp_ilopacity
			}
			put `"""'
		}
		else {
			if (plot.cb_ilcolor.isneq("")) {
				put plot.cb_ilcolor
			}
			if (plot.sp_ilopacity.isneq(100)) {
				put "%" plot.sp_ilopacity
			}
		}
		put ")"
	}
END

PROGRAM plot_output_wrk
BEGIN
	if plot.cb_margin.isneq("custom") {
		optionarg /hidedefault plot.cb_margin
	}
	else {
		if plot_marginResult {
			put " margin("
			put plot_marginResult
			put ") "
		}
	}

	put /program " " plot_fcolor_output
	put /program " " plot_lcolor_output
	optionarg /hidedefault plot.cb_lwidth
	optionarg /hidedefault plot.cb_lpattern
	optionarg /hidedefault plot.cb_lalign
	put /program " " plot_ifcolor_output
	put /program " " plot_ilcolor_output
	optionarg /hidedefault plot.cb_ilwidth
	optionarg /hidedefault plot.cb_ilpattern
	optionarg /hidedefault plot.cb_ilalign
END

PROGRAM plot_output
BEGIN
	if ( (plot.cb_margin & plot.cb_margin.isneq("custom")) 		///
		| (plot.cb_margin.iseq("custom") & plot_marginResult )	///
		| plot.cb_fcolor | plot.cb_lcolor 			///
		| plot.sp_fopacity.isneq(100)				///
		| plot.sp_lopacity.isneq(100)				///
		| plot.cb_lwidth | plot.cb_lpattern			///
		| plot.cb_ifcolor | plot.cb_ilcolor 			///
		| plot.sp_ifopacity.isneq(100) | plot.cb_lalign		///
		| plot.sp_ilopacity.isneq(100) | plot.cb_ilalign	///
		| plot.cb_ilwidth | plot.cb_ilpattern )			///
	{
		put " plotregion("
		put /program plot_output_wrk
		put ") "
	}
END

PROGRAM command
BEGIN
	put " " /program graph_output
	put " " /program plot_output
END
