/*
	power onevariance

*!  VERSION 1.2.5  14mar2017

*/

VERSION 14.0

INCLUDE _std_xlarge
DEFINE _dlght 475
INCLUDE header

HELP hlp1, view("help power onevariance")
RESET res1

SCRIPT PREINIT
BEGIN
	create STRING graph_res
	create STRING numContents
	create STRING stok
	create ARRAY tmp
	create BOOLEAN containsNumlist
	create BOOLEAN containsNumlist_null
	create BOOLEAN containsNumlist_va_ratio

	program table_create4Onevar_var
	setscale_hadj resource POWER_ONEVAR_VAR_DLG_HSCALE
END

DIALOG main, tabtitle(resource LBL_TAB_MAIN)			///
	label(resource POWER_ONEVAR_VAR_DLG_TITLE)
BEGIN
  INCLUDE power_compute

  DEFINE errpos _ls
  INCLUDE power_errorprob

  DEFINE sspos +40
  INCLUDE power_onesampsize

  GROUPBOX gb_effect_size	_lft	+40	_iwd	_ht8,		///
	label(resource LBL_EFFECT_SIZE)
  GROUPBOX gb_var		_indent	_ss	_cwd1	_ht5,		///
	label(resource LBL_VARIANCES_NO_COLON)
  DEFINE holdy2 @y
  EDIT ed_null			_indent	_ss	_en14wd	.,		///
	onchange(program check_for_numlist)				///
	tooltip(resource POWER_ONEVAR_VAR_MAIN_ED_NULL)			///
	label("")
  TEXT tx_null			_en14sep @	100	.,		///
	label(resource LBL_STAR_NULL)
  EDIT ed_va_ratio		_iilft	_ls	_en14wd	.,		///
	option(ratio)							///
	onchange(program check_for_numlist)				///
	label(resource LBL_ALTERNATIVE_RATIO)
  TEXT tx_va_ratio		_en14sep @	8	.,		///
	label("*")
  COMBOBOX cb_va_ratio		+10	 @	100	.,		///
	dropdownlist							///
	contents("main_effect_list")					///
	values("main_effect_values")					///
	onselchange("program main_va_ratio_changed")			///
	label(resource LBL_STAR_ALTERNATIVE_DIFFERENCE)

  DEFINE ypos +55
  INCLUDE power_test_maincommon
END

LIST main_compute_list
BEGIN
	resource LBL_SAMPLE_SIZE
	resource PSS_LBL_POWER
	resource POWER_ONEVAR_VAR_EFFECT_SIZE_AND_TARGET_VAR
END

LIST main_compute_values
BEGIN
	"sampsi"
	"power"
	"effect"
END

LIST main_effect_list
BEGIN
	resource POWER_LBL_ALTERNATIVE
	resource LBL_RATIO_NO_COLON
END

LIST main_effect_values
BEGIN
	"va"
	"ratio"
END

PROGRAM main_compute_changed
BEGIN
	if main.cb_compute.iseq("sampsi") {
		call program main_sampsi_on
	}
	if main.cb_compute.iseq("power") {
		call program main_power_on
	}
	if main.cb_compute.iseq("effect") {
		call program main_effect_on
	}
END

PROGRAM main_sampsi_on
BEGIN
	call main.ed_power.show
	call main.ed_beta.show
	call main.tx_power_beta_power.show
	call main.cb_power_beta.show
	call main.ed_n.hide
	call main.tx_n.hide
	call main.ck_nfrac.show
	call main.ed_va_ratio.show
	call main.tx_va_ratio.show
	call main.cb_va_ratio.show
	call script power_test_maincommon_hide_dir
	call program main_power_beta_changed
	call program check_for_numlist
	call program power_iteration_tab_check
END

PROGRAM main_power_on
BEGIN
	call main.ed_power.hide
	call main.ed_beta.hide
	call main.tx_power_beta_power.hide
	call main.cb_power_beta.hide
	call main.ed_n.show
	call main.tx_n.show
	call main.ck_nfrac.hide
	call main.ed_va_ratio.show
	call main.tx_va_ratio.show
	call main.cb_va_ratio.show
	call script power_test_maincommon_hide_dir
	call program check_for_numlist
	call program power_iteration_tab_check
END

PROGRAM main_effect_on
BEGIN
	call main.ed_power.show
	call main.ed_beta.show
	call main.tx_power_beta_power.show
	call main.cb_power_beta.show
	call main.ed_n.show
	call main.tx_n.show
	call main.ck_nfrac.hide
	call main.ed_va_ratio.hide
	call main.tx_va_ratio.hide
	call main.cb_va_ratio.hide
	call script power_test_maincommon_show_dir
	call program main_power_beta_changed
	call program check_for_numlist
	call program power_iteration_tab_check
END

PROGRAM main_va_ratio_changed
BEGIN
	if main.cb_va_ratio.iseq("va") {
		call main.ed_va_ratio.settooltip resource POWER_ONEVAR_VAR_ALT_VAR_VA
	}
	else {
		call main.ed_va_ratio.settooltip resource POWER_ONEVAR_VAR_VARIANCE_RATIO_VA_V0
	}
	call program check_for_numlist
	call program table_create4Onevar_var
END

PROGRAM main_power_beta_table
BEGIN
	call program table_create4Onevar_var
END

PROGRAM check_for_numlist
BEGIN
	call containsNumlist.setfalse
	call containsNumlist_null.setfalse
	call containsNumlist_va_ratio.setfalse

	if main.ed_null {
		call numContents.setvalue class main.ed_null.value
		call numContents.expandNumlist
		call stok.setvalue ""
		if numContents {
			call numContents.tokenize tmp
			call stok.setvalue class tmp[2]
		}
		if stok {
			call containsNumlist.settrue
			call containsNumlist_null.settrue
		}
	}

	if main.ed_va_ratio & main.ed_va_ratio.isvisible() {
		call numContents.setvalue class main.ed_va_ratio.value
		call numContents.expandNumlist
		call stok.setvalue ""
		if numContents {
			call numContents.tokenize tmp
			call stok.setvalue class tmp[2]
		}
		if stok {
			call containsNumlist.settrue
			call containsNumlist_va_ratio.settrue
		}
	}

	if main.ed_alpha {
		call numContents.setvalue class main.ed_alpha.value
		call numContents.expandNumlist
		call stok.setvalue ""
		if numContents {
			call numContents.tokenize tmp
			call stok.setvalue class tmp[2]
		}
		if stok {
			call containsNumlist.settrue
		}
	}

	if main.ed_power & main.ed_power.isvisible() {
		call numContents.setvalue class main.ed_power.value
		call numContents.expandNumlist
		call stok.setvalue ""
		if numContents {
			call numContents.tokenize tmp
			call stok.setvalue class tmp[2]
		}
		if stok {
			call containsNumlist.settrue
		}
	}

	if main.ed_beta & main.ed_beta.isvisible() {
		call numContents.setvalue class main.ed_beta.value
		call numContents.expandNumlist
		call stok.setvalue ""
		if numContents {
			call numContents.tokenize tmp
			call stok.setvalue class tmp[2]
		}
		if stok {
			call containsNumlist.settrue
		}
	}

	if main.ed_n & main.ed_n.isvisible() {
		call numContents.setvalue class main.ed_n.value
		call numContents.expandNumlist
		call stok.setvalue ""
		if numContents {
			call numContents.tokenize tmp
			call stok.setvalue class tmp[2]
		}
		if stok {
			call containsNumlist.settrue
		}
	}

	if containsNumlist {
		call main.ck_parallel.enable
	}
	else {
		call main.ck_parallel.disable
	}
END

PROGRAM power_iteration_tab_check
BEGIN
	call script power_iteration_enable
	if main.cb_compute.iseq("power") {
		call script power_iteration_disable
	}
	else {
		if main.cb_oneside.iseq("onesided") &			///
			main.cb_compute.iseq("effect") {
			call script power_iteration_disable
		}
		if main.cb_compute.iseq("sampsi") {
			call script power_iteration_is_sampsi
		}
		if main.cb_compute.iseq("effect") {
			call script power_iteration_is_effect
		}
	}
END

INCLUDE _power_list
INCLUDE power_errorprob_pr
INCLUDE power_table_opts
INCLUDE power_graph
INCLUDE power_iteration
INCLUDE power_test_maincommon_pr

PROGRAM command
BEGIN
	put "power onevariance "
	if !main.ed_null {
		call create STRING _MSG_TMP
		call _MSG_TMP.format 					///
			"resource LBL_MSGBOX_VARIANCE_REQUIRED_FMT" 	///
			"resource LBL_TAB_MAIN"				///
			"resource LBL_NULL" 
		stopbox stop "class _MSG_TMP.value"
// On the "Main" tab, "Null" variance must be filled in.
	}
	if !main.ed_null.isnumlist() {
		call create STRING _MSG_TMP
		call _MSG_TMP.format					///
			"resource LBL_MSGBOX_INVALID_NUMLIST_FOR_VARIANCE_FMT" ///
			"resource LBL_TAB_MAIN" 			///
			"resource LBL_NULL"
		stopbox stop "class _MSG_TMP.value"
// On the "Main" tab, an invalid numlist is specified for "Null" variance.
	}
	if !main.ed_null.isNumlistGT(0) {
		call create STRING _MSG_TMP
		call _MSG_TMP.format 					///
			"resource LBL_MSGBOX_VARIANCE_GREATER_THAN_0_FMT" ///
			"resource LBL_TAB_MAIN" 			///
			"resource LBL_NULL"
		stopbox stop "class _MSG_TMP.value"
// On the "Main" tab, "Null" variance must be greater than 0.
	}
	if containsNumlist_null {
		put "("
		put main.ed_null
		put ")"
	}
	else {
		put main.ed_null
	}

	if main.cb_compute.iseq("sampsi") | main.cb_compute.iseq("power") {
		if !main.ed_va_ratio {
			if main.cb_va_ratio.iseq("va") {
		call create STRING _MSG_TMP
		call _MSG_TMP.format					///
			"resource LBL_MSGBOX_VARIANCE_REQUIRED_FMT" 	///
			"resource LBL_TAB_MAIN" 			///
			"resource POWER_LBL_ALTERNATIVE"
		stopbox stop "class _MSG_TMP.value"
// On the "Main" tab, "Alternative" variance must be filled in.
			}
			else {
		call create STRING _MSG_TMP
		call _MSG_TMP.format					///
			"resource LBL_MSGBOX_OF_VARIANCES_REQUIRED_FMT" ///
			"resource LBL_TAB_MAIN"				///
			"resource LBL_RATIO_NO_COLON" 
		stopbox stop "class _MSG_TMP.value"
// On the "Main" tab, "Ratio" of variances must be filled in.
			}
		}
	}

	if main.cb_compute.iseq("power") | main.cb_compute.iseq("effect") {
		require main.ed_n
	}

	if main.cb_va_ratio.iseq("va") & main.cb_va_ratio.isvisible() {
		if !main.ed_va_ratio.isnumlist() {
		call create STRING _MSG_TMP
		call _MSG_TMP.format					///
			"resource LBL_MSGBOX_INVALID_NUMLIST_FOR_VARIANCE_FMT" ///
			"resource LBL_TAB_MAIN" 			///
			"resource POWER_LBL_ALTERNATIVE"
		stopbox stop "class _MSG_TMP.value"
// On the "Main" tab, an invalid numlist is specified for "Alternative" variance.
		}
		if !main.ed_va_ratio.isNumlistGT(0) {
		call create STRING _MSG_TMP
		call _MSG_TMP.format 					///
			"resource LBL_MSGBOX_VARIANCE_GREATER_THAN_0_FMT" ///
			"resource LBL_TAB_MAIN" 			///
			"resource POWER_LBL_ALTERNATIVE"
		stopbox stop "class _MSG_TMP.value"
// On the "Main" tab, "Alternative" variance must be greater than 0.
		}
		if containsNumlist_va_ratio {
			put " ("
			put main.ed_va_ratio
			put ")"
		}
		else {
			put " " main.ed_va_ratio
		}
	}
	beginoptions
		if main.cb_va_ratio.iseq("ratio") &			///
			main.cb_va_ratio.isvisible() {
			if !main.ed_va_ratio.isnumlist() {
	       call create STRING _MSG_TMP
		call _MSG_TMP.format 					///
			"resource LBL_MSGBOX_INVALID_NUMLIST_OF_VARIANCES_FMT"  ///
			"resource LBL_TAB_MAIN" 			///
			"resource LBL_RATIO_NO_COLON"
		stopbox stop "class _MSG_TMP.value"
// On the "Main" tab, an invalid numlist is specified for "Ratio" of variances.
			}
			if !main.ed_va_ratio.isNumlistGT(0) {
		call create STRING _MSG_TMP
		call _MSG_TMP.format					///
			"resource LBL_MSGBOX_OF_VARIANCES_GREATER_THAN_0_FMT" ///
			"resource LBL_TAB_MAIN" 			///
			"resource LBL_RATIO_NO_COLON"
		stopbox stop "class _MSG_TMP.value"
// On the "Main" tab, "Ratio" of variances must be greater than 0.
			}
			optionarg main.ed_va_ratio
		}
		if main.ed_n & main.ed_n.isvisible() {
			if !main.ed_n.isnumlist() {
		call create STRING _MSG_TMP
		call _MSG_TMP.format					///
			"resource LBL_MSGBOX_ON_TAB_INVALID_NUMLIST_FOR_FMT" ///
			"resource LBL_TAB_MAIN"				///
			"resource LBL_SAMPLE_SIZE" 
		stopbox stop "class _MSG_TMP.value"
// On the "Main" tab, an invalid numlist is specified for "Sample size".
			}
			if !main.ed_n.isNumlistGT(0) {
				call create STRING _MSG_TMP
				call _MSG_TMP.format					///
					"resource LBL_MSGBOX_ON_TAB_GREATER_THAN_0_FMT"	///
					"resource LBL_TAB_MAIN"				///
					"resource LBL_SAMPLE_SIZE"
				stopbox stop "class _MSG_TMP.value"
// On the "Main" tab, "Sample size" must be greater than 0.
			}
			optionarg main.ed_n
		}
		option main.ck_nfrac

		put " " /program power_errorprob_output
		put " " /program power_test_maincommon_output
		put " " /program power_table_opts_output
		put " " /program power_graph_output
		put " " /program power_iteration_output
	endoptions
END
