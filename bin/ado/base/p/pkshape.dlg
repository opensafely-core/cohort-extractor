/*
	pkshape

	VERSION 1.1.0  07nov2014

*/

VERSION 14.0

INCLUDE _std_large
INCLUDE _ht320
INCLUDE header

HELP hlp1, view("help pkshape")
RESET res1

SCRIPT PREINIT
BEGIN
        setscale_hadj resource PKSHAPE_DLG_HSCALE
END

DIALOG main, label(resource PKSHAPE_DLG_TITLE) /*
		*/ tabtitle(resource LBL_TAB_MAIN)
BEGIN
  /*--+----1----+----2----+----3----+----4----+----5----+----6----+----7----+*/ 
  TEXT     tx_vari         _lft      _top      _cwd3_1   .,		/*
		*/label(resource LBL_IDENTIFICATION_VARIABLE)
  TEXT     tx_vars         _lft3_2   @         _cwd3_1   .,             /*
  		*/label(resource LBL_SEQUENCE_VARIABLE)
  TEXT     tx_varp         _lft3_3   @         @         .,		/*
  		*/label(resource PKSHAPE_MAIN_TX_VARP)
  VARNAME  vn_vari         _lft      _ss       _vnwd     .,             /*
  		*/numeric						/*
  		*/label(resource LBL_IDENTIFICATION_VARIABLE)
  VARNAME  vn_vars         _lft3_2   @         @         .,		/*
  		*/label(resource LBL_SEQUENCE_VARIABLE)
  VARNAME  vn_varp         _lft3_3   @         @         .,		/*
  		*/numeric						/*
  		*/label(resource PKSHAPE_MAIN_TX_VARP)
  TEXT     tx_varp2        _lft      _ms       _iwd      .,		/*
  		*/label(resource PKSHAPE_MAIN_TX_VARP2)			/*
  		*/
  VARLIST  vl_varp2        @         _ss       _iwd      .,		/*
  		*/numeric						/*
  		*/label(resource PKSHAPE_MAIN_TX_VARP2)
  GROUPBOX gb_opt          _lft      _ls       _iwd      _ht17,		/*
  		*/label(resource LBL_OPTIONS)
  CHECKBOX ck_order        _indent   _ss       _ibwd     .,		/*
		*/label(resource PKSHAPE_MAIN_CK_ORDER)			/*
  		*/clickon(gaction main.ed_order.enable)			/*
		*/clickoff(gaction main.ed_order.disable)
  DEFINE _x @x
  EDIT     ed_order        _indent2  _ss       _inwd     .,		/*
  		*/label(resource PKSHAPE_MAIN_ED_ORDER)			/*
  		*/option("order")
  TEXT     tx_nvars        _x        _ls       _ibwd     .,		/*
  		*/label(resource PKSHAPE_MAIN_TX_NVARS)
  CHECKBOX ck_out          _x        _ms       _cwd3_2   .,		/*
  		*/label(resource LBL_OUTCOME_VARIABLE)			/*
  		*/clickon(gaction main.ed_out.enable)			/*
		*/clickoff(gaction main.ed_out.disable)
  DEFINE _y @y
  EDIT     ed_out          _indent2  _ss       _vnwd     .,		/*
		*/max(32)						/*
  		*/label(resource LBL_OUTCOME_VARIABLE)			/*
  		*/option("outcome")
  CHECKBOX ck_seq          _x        _ls       _cwd3_2   .,		/*
  		*/label(resource LBL_SEQUENCE_VARIABLE)			/*
  		*/clickon(gaction main.ed_seq.enable)			/*
		*/clickoff(gaction main.ed_seq.disable)
  EDIT     ed_seq          _indent2  _ss       _vnwd     .,		/*
		*/max(32)						/*
  		*/option("sequence") label(resource LBL_SEQUENCE_VARIABLE)
  CHECKBOX ck_treat        _ilft3_2  _y        _cwd3_2   .,		/*
  		*/label(resource LBL_TREATMENT_VARIABLE)		/*
  		*/clickon(gaction main.ed_treat.enable)			/*
		*/clickoff(gaction main.ed_treat.disable)
  EDIT     ed_treat        _indent2  _ss       _vnwd     .,		/*
		*/max(32)						/*
  		*/label(resource LBL_TREATMENT_VARIABLE)		/*
  		*/option("treatment")
  CHECKBOX ck_per          _ilft3_2  _ls       _cwd3_2   .,		/*
  		*/label(resource LBL_PERIOD_VARIABLE)			/*
  		*/clickon(gaction main.ed_per.enable)			/*
		*/clickoff(gaction main.ed_per.disable)
  EDIT     ed_per          _indent2  _ss       _vnwd     .,		/*
		*/max(32)						/*
  		*/option("period") label(resource LBL_PERIOD_VARIABLE)
  CHECKBOX ck_carry        _ilft3_3  _y        _cwd3_2   .,		/*
  		*/label(resource LBL_CARRYOVER_VARIABLE)		/*
  		*/clickon(gaction main.ed_carry.enable)			/*
		*/clickoff(gaction main.ed_carry.disable)
  EDIT     ed_carry        _indent2  _ss       _vnwd     .,		/*
		*/max(32)						/*
  		*/option("carryover") label(resource LBL_CARRYOVER_VARIABLE)
END

PROGRAM command
BEGIN
	put "pkshape "
	varlist main.vn_vari
	varlist main.vn_vars
	varlist main.vn_varp
	varlist main.vl_varp2
	beginoptions
		if main.ck_order {
			require main.ed_order
			optionarg main.ed_order
		}
		if main.ck_out {
			require main.ed_out
			optionarg main.ed_out
		}
		if main.ck_treat {
			require main.ed_treat
			optionarg main.ed_treat
		}
		if main.ck_carry {
			require main.ed_carry
			optionarg main.ed_carry
		}
		if main.ck_seq {
			require main.ed_seq
			optionarg main.ed_seq
		}
		if main.ck_per {
			require main.ed_per
			optionarg main.ed_per
		}
	endoptions
END

