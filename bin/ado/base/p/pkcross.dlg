/*
  pkcross

*! VERSION 1.2.0  11nov2014

*/

VERSION 14.0

INCLUDE _std_large
INCLUDE _ht320
INCLUDE header

HELP hlp1, view("help pkcross")
RESET res1

SCRIPT PREINIT
BEGIN
        setscale_hadj resource PKCROSS_DLG_HSCALE
END

DIALOG main, label(resource PKCROSS_DLG_TITLE)				///
		tabtitle(resource LBL_TAB_MODEL)
BEGIN
  TEXT     tx_varo         _lft      _top      _iwd      .,		///
	label(resource LBL_OUTCOME_VARIABLE)
  VARNAME  vn_varo         _lft      _ss       _vnwd     .,		///
  	numeric								///
	label(resource LBL_OUTCOME_VARIABLE)

  GROUPBOX gb_opt          _lft      _ls       _iwd      _ht22,		///
	label(resource LBL_OPTIONS)
  TEXT     tx_seq          _indent   _ss       _cwd2     .,		///
	label(resource LBL_SEQUENCE_VARIABLE)
  DEFINE _x @x
  DEFINE _y @y
  VARNAME  vn_seq          @         _ss       _vnwd     .,		///
	option(sequence) label(resource LBL_SEQUENCE_VARIABLE)		///
	numeric								///
	default("sequence")
  DEFINE _x2 @x
  TEXT     tx_treat        _lft2     _y        _cwd2     .,		///
	label(resource LBL_TREATMENT_VARIABLE)
  VARNAME  vn_treat        @         _ss       _vnwd     .,		///
  	numeric								///
	option(treatment) label(resource LBL_TREATMENT_VARIABLE) default("treat")
  DEFINE _x22 @x
  TEXT     tx_per          _x        _ls       _cwd2     .,		///
	label(resource LBL_PERIOD_VARIABLE)
  TEXT     tx_id           _lft2     @         @         .,		///
	label(resource LBL_ID_VARIABLE)
  VARNAME  vn_per          _x2       _ss       _vnwd     .,		///
  	numeric								///
	option(period) label(resource LBL_PERIOD_VARIABLE)	default("period")
  VARNAME  vn_id           _x22      @         @         .,		///
  	numeric								///
	option(id) label(resource LBL_ID_VARIABLE) default("id")
  TEXT     tx_car          _x        _ls       _cwd2     .,		///
	label(resource LBL_CARRYOVER_VARIABLE)
  RADIO    rb_car1         @         _ss       _rbwd     .,		///
	onclickon(main.vn_car.enable) first
  VARNAME  vn_car          _rbsep    @         _vnwd     .,		///
  	numeric								///
	label(resource LBL_CARRYOVER_VARIABLE) option(carryover) default("carry")
  RADIO    rb_car2         _lft2     @         _cwd2     .,		///
	label(resource LBL_NONE) option("carryover(none)")		///
	onclickon(main.vn_car.disable) last
  CHECKBOX ck_mod          _x        _ls       _ibwd     .,		///
	onclickon(main.ed_mod.enable)					///
	onclickoff(main.ed_mod.disable)					///
	label(resource PKCROSS_MAIN_CK_MOD)
  EDIT     ed_mod          _indent2  _ss       _inwd     .,		///
	label(resource PKCROSS_MAIN_ED_MOD) option(model)
  CHECKBOX ck_sequen       _x        _ls       _ibwd     .,		///
	option(sequential)						///
	label(resource PKCROSS_MAIN_CK_SEQUEN)
END

INCLUDE ifin

DIALOG para, tabtitle(resource PKCROSS_TAB_PARA)
BEGIN
  TEXT     tx_param        _lft      _top      _iwd     .,		///
	label(resource PKCROSS_PARA_TX_PARAM)
  RADIO    rb_par3         _lft      _ms       _iwd     .,		///
	option("NONE") first						///
	label(resource PKCROSS_PARA_RB_PAR3)
DEFINE _x @x
  TEXT     tx_par3         _indent2  _vss      _inwd     .,		///
	label(resource PKCROSS_PARA_TX_PAR3)
  RADIO    rb_par1         _x        _ms       _iwd      .,		///
	option("param(1)")						///
	label(resource PKCROSS_PARA_RB_PAR1)
  TEXT     tx_par1         _indent2  _vss      _inwd     .,		///
	label(resource PKCROSS_PARA_TX_PAR1)
  RADIO    rb_par2         _x        _ms       _iwd      .,		///
	option("param(2)")						///
	label(resource PKCROSS_PARA_RB_PAR2)
  TEXT     tx_par2         _indent2  _vss      _inwd     .,		///
	label(resource PKCROSS_PARA_TX_PAR2)
  RADIO    rb_par4         _x        _ms       _iwd      .,		///
	option("param(4)") last						///
	label(resource PKCROSS_PARA_RB_PAR4)
  TEXT     tx_par4         _indent2  _vss      _inwd     .,		///
	label(resource PKCROSS_PARA_TX_PAR4)
END

PROGRAM command
BEGIN
	put "pkcross "
	varlist main.vn_varo
	INCLUDE _ifin_pr
	beginoptions
	        option radio(para rb_par1 rb_par2 rb_par3 rb_par4)
		optionarg /hidedefault main.vn_seq
		optionarg /hidedefault main.vn_treat
		if main.rb_car1 {
			optionarg /hidedefault main.vn_car
		}
		if main.rb_car2 {
			option main.rb_car2
		}
		optionarg /hidedefault main.vn_per
		optionarg /hidedefault main.vn_id
		if main.ck_mod {
			require main.ed_mod
			optionarg main.ed_mod
		}
		option main.ck_sequen
	endoptions
END
